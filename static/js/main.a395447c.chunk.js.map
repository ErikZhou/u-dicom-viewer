{"version":3,"sources":["components/AboutDlg.js","fs/fs.js","functions.js","constants/settings.js","actions/index.js","components/Dicomdir.js","constants/uids.js","components/OpenUrlDlg.js","components/CinePlayer.js","db/db.js","components/DicomViewer.js","components/DicomHeader.js","components/DownloadZipDlg.js","components/Explorer.js","components/OpenMultipleFilesDlg.js","components/FsUI.js","components/Histogram.js","components/LayoutTool.js","components/MeasureItem.js","components/Measurements.js","components/Settings.js","App.js","serviceWorker.js","store/index.js","reducers/index.js","index.js"],"names":["AboutDlg","onClose","linkRepository","Typography","variant","Link","href","target","style","color","version","packageJson","Dialog","open","DialogTitle","disableTypography","DialogContent","List","ListItem","ListItemText","primary","secondary","DialogActions","Button","autoFocus","onClick","fs","Dexie","stores","files","getDicomSliceLocation","image","value","data","string","undefined","parseFloat","groupBy","list","keyGetter","map","Map","forEach","item","key","collection","get","push","set","isInputDirSupported","tmpInput","document","createElement","isUrlImage","url","match","isFileImage","file","includes","isFsFileImage","fsItem","console","log","type","toLowerCase","getFileNameCorrect","filename","isAndroid","isFirefox","getFileExt","getFileName","ext","exec","getFileExtReal","name","replace","getSettingsSaveInto","saveInto","localStorage","getItem","setItem","getSettingsOverlay","overlay","getSettingsFsView","view","isMobile","isTablet","getSettingsDicomdirView","getSettingsMprInterpolation","method","toCsvValue","theValue","t","String","fsFileStore","fsFile","filesStore","dcmIsOpen","dcmTool","tool","activeDcm","dcm","activeMeasurements","measurements","setZippedFile","fsZippedFile","styleScrollbar","height","ExpandIcon","expanded","Dicomdir","props","state","buildData","id","output","images","series","study","patient","slice","reverse","obj","i","unshift","path","number","children","setState","buildOutput","dataset","elements","x00041220","items","e","index","dcmTime","dcmDate","toString","dataSet","Date","substring","toLocaleDateString","year","month","day","split","pop","openDicomdir","reader","FileReader","onload","arrayBuffer","result","byteArray","Uint8Array","dicomParser","err","readAsArrayBuffer","openDicomdirFs","find","x","dicomdir","origin","onOpenFile","components","fsCurrentDir","parent","join","where","first","setFsFileStore","onOpenFs","studyText","this","classes","styleComponent","marginTop","width","button","listItemText","Collapse","in","dense","className","PureComponent","connect","dispatch","withStyles","theme","paddingLeft","spacing","fontSize","uids","OpenUrlDlg","hide","cancel","window","stop","aria-labelledby","LinearProgress","progress","CinePlayer","firstframe","runCinePlayer","previousframe","play","pause","nextframe","lastframe","inPlay","IconButton","mdiPause","size","mdiPlay","margin","mdiSkipBackward","mdiSkipPrevious","mdiSkipNext","mdiSkipForward","db","measurement","scrollToIndex","csTools","cornerstoneTools","cornerstone","cornerstoneMath","cornerstoneFileImageLoader","cornerstoneWebImageLoader","cornerstoneWADOImageLoader","Hammer","globalToolSyncEnabled","DicomViewer","visibleOpenUrlDlg","visibleCinePlayer","errorOnOpenImage","errorOnCors","frame","viewport","onOpenUrl","eventData","detail","percentComplete","showOpenUrlDlg","addEventListener","loadImage","hideOpenUrlDlg","measurementSave","measure","measurementClear","splice","length","measurementRemove","getTransferSyntax","getSopClass","getSopInstanceUID","getPixelRepresentation","uint16","getPlanarConfiguration","getDicomViewerElement","getElementsByClassName","onImageLoaded","onLoadedImage","onImageRendered","str","useIsPreview","useIsNormal","getElementById","textContent","mprIsOrthogonalView","mprPlane","charAt","toUpperCase","PatientsName","displayedArea","brhc","y","Math","round","voi","windowWidth","windowCenter","scale","toFixed","isDicom","numberOfFrames","onRenderedImage","onMeasurementModified","onMeasurementAdded","note","measurementData","setActiveMeasurements","onMeasurementCompleted","setTimeout","onErrorOpenImageClose","onErrorCorsClose","displayImageFromFiles","imageId","element","dicomImage","onNewImage","sopInstanceUid","stack","currentImageIdIndex","imageIds","intString","mprPlanePosition","enableTool","equals","each","runTool","then","setActiveDcm","setIsOpenStore","loadImageFromCanvas","canvas","addCanvas","loadImageFromCustomObject","columns","rows","pixelData","customObj","originImage","addCustom","localfile","localurl","isOpenStore","addBuffer","add","fileManager","error","pos","indexOf","toolName","mouseButtonNumber","WwwcTool","LengthTool","PanTool","ZoomTouchPinchTool","ZoomTool","ProbeTool","EllipticalRoiTool","RectangleRoiTool","FreehandRoiTool","AngleTool","MagnifyTool","StackScrollMouseWheelTool","disableAllTools","opt","sliceMax","mouseButtonMask","isTouchActive","invert","activeDcmIndex","zoom","cols","myCanvas","cropCanvas","a","toDataURL","download","body","appendChild","click","blobUtil","blob","newName","counter","done","fsCurrentList","transaction","async","byteLength","makeFsRefresh","reset","delete","sopinstanceuid","newCanvas","getContext","drawImage","changeTool","cmdName","defaultViewport","imageOrientation","v","Array","fill","p","abs","transpose","matrix","Object","keys","colNumber","rowNumber","mprRenderYZPlane","mprData","volume","sliceIndex","xSize","ySize","zSize","zDim","xoffset","floor","plane","Int16Array","z","yzPlane","mprBuildYZPlane","mprRenderXZPlane","trunc","xzPlane","mprBuildXZPlane","layout","dicomImageRef","el","onImageClick","getSeriesLength","use","seriesList","seriesKeys","getSeriesDescription","seriesDescription","isLocalizer","values","dcmRef","previousProps","isOpen","visible","styleContainer","border","explorerActiveSeriesIndex","position","DialogContentText","aria-describedby","gutterBottom","textShadow","visibility","onContextMenu","ref","top","left","display","right","bottom","marginLeft","marginRight","textAlign","backgroundColor","React","Component","clearingStore","toolStore","DicomHeader","dcmViewer","header","minPixelValue","maxPixelValue","listItems","Toolbar","title","grow","exportAs","fileData","objArray","cDelimiter","l","row","n","nl","names","sDelimiter","hasOwnProperty","toCsv","reduce","o","JSON","stringify","Blob","URL","createObjectURL","mdiContentSaveOutline","component","source","axios","CancelToken","DownloadZipDlg","loading","requestDownloadZip","responseType","cancelToken","token","onDownloadProgress","progressEvent","percentCompleted","loaded","total","response","setFsZippedFile","catch","padding","styleDicomViewerStack","styleDicomViewer","Explorer","patientName","explorer","studies","seriesActiveIndex","setDcmViewer","dicomViewersRefs","getDcmViewerRef","getDcmViewer","dicomViewers","buildPreviewStack","dicomviewers","previewStackClick","onTouchStart","previewStackTouch","gridTemplateRows","gridTemplateColumns","handlePatientChange","event","patientIndex","filesListForPatient","allFiles","filter","studyList","studyDateTime","studyKeys","seriesNumber","setSeriesStore","setExplorerActivePatientIndex","handleStudyChange","studyIndex","studyDate","studyDescription","setExplorerActiveSeriesIndex","onSelectSeries","explorerActivePatientIndex","explorerActiveStudyIndex","FormControl","formControl","InputLabel","Select","selectText","labelId","onChange","MenuItem","menuItemText","setFilesStore","setExplorer","setExplorerActiveStudyIndex","seriesStore","minWidth","selectEmpty","OpenMultipleFilesDlg","close","count","step","nextProgress","t0","performance","now","getDicomPatientName","studyId","getDicomStudyId","getDicomStudyDate","studyTime","getDicomStudyTime","getDicomStudyDescription","seriesDate","getDicomSeriesDate","seriesTime","getDicomSeriesTime","getDicomSeriesDescription","getDicomSeriesNumber","instanceNumber","getDicomInstanceNumber","sliceDistance","ipp","topLeftCorner","iop","dist","getDicomSliceDistance","sliceLocation","getDicomColumns","getDicomRows","dateTime","date","time","localeDate","dicomDateTimeToLocale","sort","r","t1","FsUI","textFieldLabel","textFieldValue","selected","selectedCopy","visibleTextField","visibleDeleteDlg","visibleOthers","visibleAlreadyExistDlg","visibleOSaveAsDlg","visibleWaiting","visibleOpenMultipleFilesDlg","doSelectUnselect","newSelected","openSelectedFilesRetrieveItems","startsWithIgnoreCase","openSelectedFiles","hideOpenMultipleFilesDlg","onOpenMultipleFilesCompleted","onOpenImage","createDir","renameItem","lastSelected","previousDir","nextDir","setCurrentDir","fsListDir","confirmText","oldParent","fsBuildParent","newParent","fsCreateDir","cancelDir","saveItem","localFileStore","buffer","copyItem","newSelectedCopy","cutItem","cut","pasteItem","deleteItem","showOthers","exportItem","itemClick","selectedIndex","concat","itemDoubleClick","onOpenDicomdir","onOpen","showDeleteDlg","hideDeleteDlg","confirmDeleteDlg","hideAlreadyExistDlg","hideSaveAs","closeSaveAs","saveAsField","zip","JSZip","folder","generateAsync","saveAs","mouseDown","timer","mouseUp","clearTimeout","itemsCount","createRef","loadAsync","contents","relativePath","zipEntry","dir","content","fsAddItem","put","create","sortBy","and","setCurrentList","totalItemsCount","Paper","textPaper","InputBase","textInput","placeholder","defaultValue","textButton","mdiCheck","mdiClose","leftButtons","CircularProgress","Tooltip","mdiChevronLeft","toolbarButtons","mdiCheckBoxOutline","mdiFolderOutline","mdiFolderPlusOutline","mdiSquareEditOutline","mdiDotsHorizontal","mdiContentCut","mdiContentCopy","mdiContentPaste","mdiDeleteOutline","mdiExportVariant","float","TableContainer","Table","table","TableHead","TableRow","TableCell","align","TableBody","isItemSelected","role","hover","onDoubleClick","onTouchEnd","onMouseDown","onMouseUp","scope","tableCellText","bytes","decimals","k","dm","sizes","pow","formatBytes","TextField","inputRef","input","fullWidth","localFile","fsRefresh","setFsCurrentDir","setFsCurrentList","alignItems","flex","styleSlider","styleCanvasGradient","styleTable","borderCollapse","fontFamily","styleTableTd","tableLayout","Histogram","activeDrags","deltaPosition","controlledPosition","histCount","valueScale","minHist","maxHist","mean","stdDev","handleChangeValue","newValue","binSize","hist256","onDrag","ui","deltaX","deltaY","onStart","onStop","canvasHistogram","canvasGradient","canvasH","current","ctxH","translate","updateCanvas","clearRect","evt","rect","getBoundingClientRect","clientX","clientY","getPixelData","storedPixelData","spIndex","column","red","green","blue","alpha","getRGBPixelsImage","getPixelsImage","intercept","lenHist","zero256","stepWW","stepWC","m","hist","mo","getPixel","slope","s","sqrt","max","binStep","iHist","j","mousePos","getMousePos","beginPath","fillStyle","fillRect","strokeStyle","h","moveTo","lineTo","stroke","lineWidth","lowX","highX","ctxG","grd","createLinearGradient","addColorStop","cursor","Slider","min","LayoutTool","initTable","col","tableRef","cells","bgColor","cellClick","parentNode","rowIndex","cellIndex","renderTable","MeasureItem","visibleDlgNote","visibleDlgDelete","showDlgNote","hideDlgNote","showDlgDelete","hideDlgDelete","handleOnChangeNote","confirmNote","noteField","confirmDelete","toolRemove","onEdit","onDelete","pText","sText","unit","rAngle","cachedStats","area","meanStdDev","edge","Measurements","visibleClearMeasureDlg","showClearMeasureDlg","hideClearMeasureDlg","confirmClearMeasureDlg","useStyles","makeStyles","appBar","formLabel","radioControl","Settings","getSettingsSaveAs","getSettingsDcmHeader","fsView","dicomdirView","mprInterpolation","useState","fullScreen","AppBar","elevation","aria-label","FormControlLabel","control","Checkbox","checked","label","FormLabel","RadioGroup","Radio","iconTool","App","anchorElLayout","openMenu","openImageEdit","openTools","openMpr","textMessage","titleMessage","visibleMainMenu","visibleHeader","visibleSettings","visibleToolbar","visibleOpenUrl","visibleToolbox","visibleMeasure","visibleAbout","visibleDicomdir","visibleFileManager","visibleZippedFileDlg","visibleDownloadZipDlg","toolState","listOpenFilesScrolling","visibleVolumeBuilding","visibleMprOrthogonal","visibleMprCoronal","visibleMprSagittal","visibleMprAxial","visibleExplorer","visibleMessage","getActiveDcmViewer","handleOpenLocalFs","filesSelected","changeLayout","setLocalFileStore","handleOpenSandboxFs","handleOpenImage","isArray","getOwnPropertyNames","handleOpenFileDicomdir","handleOpenFolder","webkitRelativePath","handleOpenDicomdir","datafiles","setDicomdirStore","toggleDicomdir","handleOpenFsDicomdir","showAppBar","scrollTo","toggleMainMenu","showMainMenu","hideMainMenu","handleVisibility","toggleFileManager","toggleExplorer","toggleHeader","toggleToolbox","saveMeasure","toggleMeasure","hideMeasure","handleVisibilityMeasure","clearMeasure","showZippedFileDlg","hideZippedFileDlg","confirmZippedFileDlg","showAbout","showSettings","hideSettings","handleVisibilitySettings","hideDownloadZipDlg","openMultipleFilesCompleted","patientList","patientKeys","showOpenUrl","hideOpenUrl","openDlg","openUrlField","downloadOpenUrl","resetImage","saveShot","cinePlayer","clear","handleLayout","currentTarget","closeLayout","layoutGridClick","setLayoutStore","toolExecute","mdiArrowAll","mdiCursorPointer","mdiMagnify","mdiRuler","mdiEyedropper","mdiAngleAcute","mdiEllipse","mdiRectangle","mdiGesture","toolChange","toggleOpenMenu","toggleImageEdit","toggleTools","toggleMpr","setActiveDcmIndex","layoutGridTouch","buildLayoutGrid","styleLayoutGrid","getStringVisiblePlane","appBarTitle","addReferenceLinesTool","synchronizer","synchronizationContext","getImageOrientationZ","mprBuildVolume","xPixelSpacing","getDicomPixelSpacing","spacingBetweenSlice","getDicomSpacingBetweenSlice","sliceThickness","getDicomSliceThickness","zDimMethod2","len","emptyPlane","order","iFile","previous","object","intervals","ceil","interpolationMethod","w","p0","p1","zStep","changeToOrthogonalView","changeToSagittalView","changeToCoronalView","changeToAxialView","xzIndex","yzIndex","force","mprOrthogonal","from","to","mprSagittal","mprCoronal","mprAxial","listOpenFilesFirstFrame","listOpenFilesPreviousFrame","listOpenFilesNextFrame","listOpenFilesLastFrame","scrolling","clearInterval","timerScrolling","setInterval","handleSliceChange","explorerOnSelectSeries","renderedImages","fileOpen","showFileOpen","bind","showOpenDicomdir","openFolder","showOpenFolder","primaryClass","isDicomdir","isMultipleFiles","visibleLayout","Boolean","iconToolColor","menuButton","mdiInformationOutline","mdiVideo","mdiRefresh","mdiCamera","mdiToolbox","mdiFileCad","mdiFileDocument","mdiFolderOpen","mdiAnimationOutline","mdiFileCabinet","Drawer","zIndex","toolbar","ListItemIcon","mdiFolderMultiple","timeout","unmountOnExit","mdiFolder","mdiWeb","mdiDelete","mdiViewGridPlusOutline","mdiSettings","Divider","disabled","mdiChartHistogram","mdiAxisArrow","mdiImageEdit","mdiInvertColors","mdiTools","mdiCursorDefault","mdiCheckboxIntermediate","anchor","mdiTrashCanOutline","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Snackbar","autoHideDuration","message","multiple","webkitdirectory","mozdirectory","directory","setLayout","setDicomdir","setVolumeStore","palette","common","black","flexGrow","root","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","mixins","isLocalhost","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","store","createStore","action","lut","__REDUX_DEVTOOLS_EXTENSION__","WebFontLoader","load","google","families","createMuiTheme","overrides","MuiFormControlLabel","MuiFormLabel","main","ReactDOM","render","process","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a395447c.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Link from '@material-ui/core/Link'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport packageJson from '../../package.json'\r\n\r\nconst AboutDlg = ({ onClose }) => {\r\n\r\n    const urlRepository = \"https://github.com/webnamics/u-dicom-viewer/\"\r\n\r\n    const linkRepository = (\r\n        <Typography variant='body2'>\r\n            <Link \r\n                href={urlRepository} \r\n                target='_blank'\r\n                style={{ color: '#999999' }}\r\n            >\r\n                https://github.com/webnamics/u-dicom-viewer\r\n            </Link>\r\n        </Typography>\r\n    )\r\n\r\n    const version = (\r\n        <Typography variant='body2' style={{ color: '#999999' }}>\r\n            {packageJson.version}\r\n        </Typography>        \r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <Dialog onClose={onClose} open={true}>\r\n            <DialogTitle onClose={onClose} disableTypography={true}>\r\n                <Typography variant='h6'>\r\n                    About <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\r\n                </Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText \r\n                            primary='Repository URL:' \r\n                            secondary={linkRepository} \r\n                        />\r\n                    </ListItem>    \r\n                    <ListItem>\r\n                        <ListItemText \r\n                            primary='Version:' \r\n                            secondary={version} \r\n                        />\r\n                    </ListItem>                        \r\n                </List>        \r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={onClose}>\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AboutDlg\r\n","import Dexie from 'dexie'\r\n\r\nconst fs = new Dexie('fsDB')\r\n\r\nfs.version(1).stores({ \r\n    files: '[parent+name], parent, name, type' \r\n})\r\n\r\nfs.open()\r\n\r\nexport default fs\r\n","import { \r\n    isAndroid,\r\n    isFirefox,\r\n    isMobile, \r\n    isTablet \r\n  } from 'react-device-detect'\r\nimport { \r\n    SETTINGS_SAVEAS, \r\n    SETTINGS_SAVEINTO,\r\n    SETTINGS_DCMHEADER, \r\n    SETTINGS_OVERLAY, \r\n    SETTINGS_MEASUREMENT,\r\n    SETTINGS_FSVIEW,\r\n    SETTINGS_DICOMDIRVIEW,    \r\n    SETTINGS_MPRINTERPOLATION,\r\n} from './constants/settings'\r\n\r\n// ---------------------------------------------------------------------------------------------- DICOM\r\n//#region DICOM\r\n\r\nexport function getDicomPatientName(image) {\r\n    const value = image.data.string('x00100010')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\r\n\r\nexport function getDicomStudyId(image) {\r\n    const value = image.data.string('x00200010')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomStudyDate(image) {\r\n    const value = image.data.string('x00080020')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomStudyTime(image) {\r\n    const value = image.data.string('x00080030')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomStudyDescription(image) {\r\n    const value = image.data.string('x00081030')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomSeriesDate(image) {\r\n    const value = image.data.string('x00080021')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomSeriesTime(image) {\r\n    const value = image.data.string('x00080031')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomSeriesDescription(image) {\r\n    const value = image.data.string('x0008103e')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\r\n\r\nexport function getDicomSeriesNumber(image) {\r\n    const value = image.data.string('x00200011')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return parseFloat(value)\r\n}\r\n\r\nexport function getDicomModality(image) {\r\n    const value = image.data.string('x00080060')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\r\n\r\nexport function getDicomPixelSpacing(image, index) {\r\n    const value = image.data.string('x00280030')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    const pixelSpacing = value.split('\\\\')\r\n    return pixelSpacing[index]\r\n}\r\n\r\nexport function getDicomSpacingBetweenSlice(image) {\r\n    const value = image.data.string('x00180088')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return parseFloat(value)\r\n}\r\n\r\nexport function getDicomSliceThickness(image) {\r\n    const value = image.data.string('x00180050')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return parseFloat(value)\r\n}\r\n\r\nexport function getDicomSliceLocation(image) {\r\n    const value = image.data.string('x00201041')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return parseFloat(value)\r\n}\t\r\n\r\nexport function getDicomInstanceNumber(image) {\r\n    const value = image.data.string('x00200013')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomRows(image) {\r\n    const value = image.data.uint16('x00280010')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value    \r\n}\r\n\r\nexport function getDicomColumns(image) {\r\n    const value = image.data.uint16('x00280011')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value    \r\n} \r\n\r\nexport function isLocalizer(image) {\r\n    const values = image.data.string('x00080008').split('\\\\')\r\n    return values.length === 3 && values[2] === 'LOCALIZER'\r\n}\r\n\r\n// see https://stackoverflow.com/questions/37730772/get-distance-between-slices-in-dicom\r\n//\r\nexport function getDicomSliceDistance(image) {\r\n    try {\r\n        const ipp = image.data.string('x00200032').split('\\\\') // Image Position Patient\r\n        //console.log(\"imagePosition: \", ipp)\r\n        let topLeftCorner = new Array(3).fill(0)\r\n        topLeftCorner[0] = parseFloat(ipp[0]) // X pos of frame (Top left) in real space\r\n        topLeftCorner[1] = parseFloat(ipp[1]) // Y pos of frame (Top left) in real space\r\n        topLeftCorner[2] = parseFloat(ipp[2]) // Z pos of frame (Top left) in real space\r\n        //console.log(\"topLeftCorner: \", topLeftCorner)\r\n\r\n        const iop = image.data.string('x00200037').split('\\\\') // Image Orientation Patient\r\n        //console.log(\"values: \", iop)\r\n        let v = new Array(3).fill(0).map(() => new Array(3).fill(0))\r\n\r\n        v[0][0] = parseFloat(iop[0]) // the x direction cosines of the first row X\r\n        v[0][1] = parseFloat(iop[1]) // the y direction cosines of the first row X\r\n        v[0][2] = parseFloat(iop[2]) // the z direction cosines of the first row X\r\n        v[1][0] = parseFloat(iop[3]) // the x direction cosines of the first column Y\r\n        v[1][1] = parseFloat(iop[4]) // the y direction cosines of the first column Y\r\n        v[1][2] = parseFloat(iop[5]) // the z direction cosines of the first column Y \r\n\r\n        //console.log(\"v: \", v)\r\n\r\n        // calculate the slice normal from IOP\r\n        v[2][0] = v[0][1] * v[1][2] - v[0][2] * v[1][1]\r\n        v[2][1] = v[0][2] * v[1][0] - v[0][0] * v[1][2]\r\n        v[2][2] = v[0][0] * v[1][1] - v[0][1] * v[1][0]\r\n        \r\n        let dist = 0\r\n        for (let i = 0; i < 3; ++i) \r\n        dist += v[2][i] * topLeftCorner[i]\r\n        \r\n        return dist\r\n    } catch(error) {\r\n        return 0\r\n    }\r\n}\r\n\r\nexport function dicomDateToLocale(dcmDate) {\r\n    const date = new Date(dcmDate.substring(0, 4)+'-'+dcmDate.substring(4, 6)+'-'+dcmDate.substring(6))\r\n    const localeDate = date.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' })\r\n    return localeDate\r\n}\r\n\r\nexport function dicomTimeToStr(dcmTime) {\r\n    const time = dcmTime.substring(0, 2)+':'+dcmTime.substring(2, 4)+':'+dcmTime.substring(4, 6)\r\n    return time\r\n}\r\n\r\nexport function dicomDateTimeToLocale(dateTime) {\r\n    const date = new Date(dateTime.substring(0, 4)+'-'+dateTime.substring(4, 6)+'-'+dateTime.substring(6, 8))\r\n    const time = dateTime.substring(9, 11)+':'+dateTime.substring(11, 13)+':'+dateTime.substring(13, 15)\r\n    const localeDate = date.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' })\r\n    return `${localeDate} - ${time}`\r\n}\r\n\r\n//#endregion  \r\n\r\nexport function groupBy(list, keyGetter) {\r\n    const map = new Map()\r\n    list.forEach((item) => {\r\n        const key = keyGetter(item)\r\n        const collection = map.get(key)\r\n        if (!collection) {\r\n            map.set(key, [item])\r\n        } else {\r\n            collection.push(item)\r\n        }\r\n    })\r\n    return map\r\n  }\r\n  \r\nexport function objectIsEmpty(obj) {\r\n    if (obj === null || obj === undefined || Array.isArray(obj) || typeof obj !== 'object') {\r\n        return true\r\n    }\r\n    return Object.getOwnPropertyNames(obj).length === 0\r\n}\r\n\r\nexport function capitalize(str) {\r\n    if (str === undefined) \r\n        return ''\r\n    else \r\n        return str.charAt(0).toUpperCase() + str.slice(1)\r\n}\r\n\r\n// To see the console output set the key 'debug-u-dicom-viewer' in \r\n// 'Storage->Local Storage' panel of your browser Develop Tool\r\nexport function log() {\r\n    let log = localStorage.getItem('debug-u-dicom-viewer')\r\n    if (log === null) {\r\n        console.log = function(){}\r\n    }\r\n}\r\n\r\nexport function isInputDirSupported() {\r\n    var tmpInput = document.createElement('input')\r\n    if ('webkitdirectory' in tmpInput \r\n        || 'mozdirectory' in tmpInput \r\n        || 'odirectory' in tmpInput \r\n        || 'msdirectory' in tmpInput \r\n        || 'directory' in tmpInput) return true\r\n    return false\r\n}\r\n\r\nexport function isUrlImage(url) {\r\n    if (url === undefined || url === null) return false\r\n    return(url.match(/\\.(jpeg|jpg|png)$/) != null)\r\n}\r\n\r\nexport function isFileImage(file) {\r\n    if (file === undefined || file === null) return false \r\n    const acceptedImageTypes = ['image/jpeg', 'image/png'] // 'image/gif', \r\n    return file && acceptedImageTypes.includes(file['type'])\r\n}\r\n\r\nexport function isFsFileImage(fsItem) {\r\n    console.log('isFsFileImage: ', fsItem)\r\n    if (fsItem === undefined || fsItem === null) return false\r\n    return fsItem.type.toLowerCase() === 'jpeg' || fsItem.type.toLowerCase() === 'png'\r\n}\r\n\r\nexport function getFileNameCorrect(filename) {\r\n    if (isAndroid && isFirefox) { // possible uncorrect .null extension is found in Android Firefox, it's a bug? CHECK IT\r\n        const ext = getFileExt(filename)\r\n        if (ext === 'null') {\r\n            return getFileName(filename)\r\n        }\r\n    }\r\n    return filename \r\n}\r\n\r\nexport function getFileExt(file) {\r\n    const re = /(?:\\.([^.]+))?$/\r\n    const ext = re.exec(file)[1]\r\n    if (ext === undefined) {\r\n        return 'dcm'\r\n    }\r\n    return ext\r\n}\r\n\r\nexport function getFileExtReal(file) {\r\n    const re = /(?:\\.([^.]+))?$/\r\n    const ext = re.exec(file)[1]\r\n    if (ext === undefined) {\r\n        return ''\r\n    }\r\n    return ext\r\n}\r\n\r\nexport function getFileName(file) {\r\n    const name = file.replace(/\\.[^.$]+$/, '')\r\n    if (name === undefined) {\r\n        return ''\r\n    }\r\n    return name    \r\n}\r\n\r\nexport function formatBytes(bytes, decimals = 2) {\r\n    if (bytes === '') return ''\r\n    if (bytes === 0) return '0 Bytes'\r\n    const k = 1024\r\n    const dm = decimals < 0 ? 0 : decimals\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i]\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------------------------------------- SETTINGS \r\n//#region  SETTINGS\r\n\r\nexport function getSettingsSaveAs() {\r\n    let saveAs = localStorage.getItem(SETTINGS_SAVEAS)\r\n    if (saveAs === null) {\r\n      saveAs = \"png\"\r\n      localStorage.setItem(SETTINGS_SAVEAS, saveAs)\r\n    }\r\n    return saveAs\r\n}\r\n\r\nexport function setSettingsSaveAs(value) {\r\n    localStorage.setItem(SETTINGS_SAVEAS, value)  \r\n}\r\n\r\nexport function getSettingsSaveInto() {\r\n    let saveInto = localStorage.getItem(SETTINGS_SAVEINTO)\r\n    if (saveInto === null) {\r\n        saveInto = \"local\"\r\n      localStorage.setItem(SETTINGS_SAVEINTO, saveInto)\r\n    }\r\n    return saveInto\r\n}\r\n\r\nexport function setSettingsSaveInto(value) {\r\n    localStorage.setItem(SETTINGS_SAVEINTO, value)  \r\n}\r\n\r\nexport function getSettingsDcmHeader() {\r\n    let exportAs = localStorage.getItem(SETTINGS_DCMHEADER)\r\n    if (exportAs === null) {\r\n      exportAs = \"json\"\r\n      localStorage.setItem(SETTINGS_DCMHEADER, exportAs)\r\n    }  \r\n    return exportAs\r\n}\r\n\r\nexport function setSettingsDcmHeader(value) {\r\n    localStorage.setItem(SETTINGS_DCMHEADER, value)  \r\n}\r\n\r\nexport function getSettingsOverlay() {\r\n    let overlay = localStorage.getItem(SETTINGS_OVERLAY)\r\n    if (overlay === null) {\r\n      overlay = \"1\"\r\n      localStorage.setItem(SETTINGS_OVERLAY, overlay)\r\n    }\r\n    return overlay === '1'\r\n}\r\n\r\nexport function setSettingsOverlay(value) {\r\n    localStorage.setItem(SETTINGS_OVERLAY, value ? '1' : '0')  \r\n}\r\n\r\nexport function getSettingsMeasurement() {\r\n    let measurement = localStorage.getItem(SETTINGS_MEASUREMENT)\r\n    if (measurement === null) {\r\n        measurement = '1'\r\n        localStorage.setItem(SETTINGS_MEASUREMENT, measurement)\r\n    }\r\n    return measurement\r\n}\r\n\r\nexport function setSettingsMeasurement(value) {\r\n    localStorage.setItem(SETTINGS_MEASUREMENT, value)  \r\n}\r\n\r\nexport function getSettingsFsView() {\r\n    let view = localStorage.getItem(SETTINGS_FSVIEW)\r\n    if (view === null) {\r\n        view = isMobile && !isTablet ? 'bottom' : 'right'\r\n        localStorage.setItem(SETTINGS_FSVIEW, view)\r\n    }\r\n    return view\r\n}\r\n\r\nexport function setSettingsFsView(value) {\r\n    localStorage.setItem(SETTINGS_FSVIEW, value)  \r\n}\r\n\r\nexport function getSettingsDicomdirView() {\r\n    let view = localStorage.getItem(SETTINGS_DICOMDIRVIEW)\r\n    if (view === null) {\r\n        view = isMobile && !isTablet ? 'bottom' : 'right'\r\n        localStorage.setItem(SETTINGS_DICOMDIRVIEW, view)\r\n    }\r\n    return view\r\n}\r\n\r\nexport function setSettingsDicomdirView(value) {\r\n    localStorage.setItem(SETTINGS_DICOMDIRVIEW, value)  \r\n}\r\n\r\nexport function getSettingsMprInterpolation() {\r\n    let method = localStorage.getItem(SETTINGS_MPRINTERPOLATION)\r\n    if (method === null) {\r\n        method = 'weightedlinear'\r\n        localStorage.setItem(SETTINGS_MPRINTERPOLATION, method)\r\n    }\r\n    return method\r\n}\r\n\r\nexport function setSettingsMprInterpolation(value) {\r\n    localStorage.setItem(SETTINGS_MPRINTERPOLATION, value)  \r\n}\r\n\r\n//#endregion\r\n\r\n/**\r\n * Converts a value to a string appropriate for entry into a CSV table.  E.g., a string value will be surrounded by quotes.\r\n * @param {string|number|object} theValue\r\n */\r\nfunction toCsvValue(theValue) {\r\n    let t = typeof theValue,\r\n        output\r\n\r\n    let sDelimiter = '\"'\r\n\r\n    if (t === 'undefined' || t === null) {\r\n        output = ''\r\n    } else if (t === 'string') {\r\n        output = sDelimiter + theValue.replace(/\"/g, '\"\"') + sDelimiter\r\n    } else {\r\n        output = sDelimiter + String(theValue).replace(/\"/g, '\"\"') + sDelimiter\r\n    }\r\n\r\n    return output\r\n}\r\n\r\n/**\r\n * Converts an array of objects (with identical schemas) into a CSV table.\r\n * @param {Array} objArray An array of objects.  Each object in the array must have the same property list.\r\n * @param {string} cDelimiter The column delimiter.  Defaults to a comma (,) if omitted.\r\n * @return {string} The CSV equivalent of objArray.\r\n */\r\nexport function toCsv(objArray, cDelimiter) {\r\n    var i,\r\n        l,\r\n        names = [],\r\n        name,\r\n        value,\r\n        obj,\r\n        row,\r\n        output = '',\r\n        n,\r\n        nl\r\n\r\n    // Initialize default parameters.\r\n\r\n    let sDelimiter = '\"'\r\n    if (typeof cDelimiter === 'undefined' || cDelimiter === null) {\r\n        cDelimiter = ','\r\n    }\r\n\r\n    for (i = 0, l = objArray.length; i < l; i += 1) {\r\n        // Get the names of the properties.\r\n        obj = objArray[i]\r\n        row = ''\r\n        if (i === 0) {\r\n            // Loop through the names\r\n            for (name in obj) {\r\n                if (obj.hasOwnProperty(name)) {\r\n                    names.push(name)\r\n                    row += [\r\n                        sDelimiter,\r\n                        name.replace(/\"/g, '\"\"'),\r\n                        sDelimiter,\r\n                        cDelimiter,\r\n                    ].join('')\r\n                }\r\n            }\r\n            row = row.substring(0, row.length - 1)\r\n            output += row\r\n        }\r\n\r\n        output += '\\n'\r\n        row = ''\r\n        for (n = 0, nl = names.length; n < nl; n += 1) {\r\n            name = names[n]\r\n            value = obj[name]\r\n            if (n > 0) {\r\n                row += cDelimiter\r\n            }\r\n            row += toCsvValue(value)\r\n        }\r\n        output += row\r\n    }\r\n\r\n    return output\r\n}\r\n\r\n","\r\nexport const SETTINGS_SAVEAS = 'saveAs'\r\nexport const SETTINGS_SAVEINTO = 'saveInto'\r\nexport const SETTINGS_DCMHEADER = 'exportAs'\r\nexport const SETTINGS_OVERLAY = 'overlay'\r\nexport const SETTINGS_MEASUREMENT = 'measurement'\r\nexport const SETTINGS_FSVIEW = 'fsView'\r\nexport const SETTINGS_DICOMDIRVIEW = 'dicomdirView'\r\nexport const SETTINGS_MPRINTERPOLATION = 'mprInterpolation'\r\n","export const CLEAR_STORE = 'CLEAR_STORE'\r\nexport const LOCALFILE_STORE = 'LOCALFILE_STORE'\r\nexport const FSFILE_STORE = 'LOCALFILE_STORE'\r\n//export const ALLFILES_STORE = 'ALLFILES_STORE'\r\nexport const FILES_STORE = 'FILES_STORE'\r\nexport const SERIES_STORE = 'SERIES_STORE'\r\nexport const DCM_IS_OPEN = 'DCM_IS_OPEN'\r\nexport const DCM_TOOL = 'DCM_TOOL'\r\nexport const ACTIVE_DCM_INDEX = 'ACTIVE_DCM_INDEX'\r\nexport const ACTIVE_DCM = 'ACTIVE_DCM'\r\nexport const ACTIVE_MEASUREMENTS = 'ACTIVE_MEASUREMENTS'\r\nexport const EXPLORER_STORE = 'EXPLORER_STORE'\r\nexport const EXPLORER_ACTIVE_PATIENT_INDEX = 'EXPLORER_ACTIVE_PATIENT_INDEX'\r\nexport const EXPLORER_ACTIVE_STUDY_INDEX = 'EXPLORER_ACTIVE_STUDY_INDEX'\r\nexport const EXPLORER_ACTIVE_SERIES_INDEX = 'EXPLORER_ACTIVE_SERIES_INDEX'\r\nexport const LAYOUT = 'LAYOUT'\r\nexport const DICOMDIR = 'DICOMDIR'\r\nexport const FSCURRENTDIR = 'FSCURRENTDIR'\r\nexport const FSCURRENTLIST = 'FSCURRENTLIST'\r\nexport const FSZIPPEDFILE = 'FSZIPPEDFILE'\r\nexport const FSREFRESH = 'FSREFRESH'\r\nexport const VOLUME_STORE = 'VOLUME_STORE'\r\n\r\nexport const clearStore = () => {\r\n    return { \r\n        type: CLEAR_STORE, \r\n    }\r\n}\r\n\r\nexport const localFileStore = (file) => {\r\n    return { \r\n        type: LOCALFILE_STORE, \r\n        localFile: file\r\n    }\r\n}\r\n\r\nexport const fsFileStore = (file) => {\r\n    return { \r\n        type: FSFILE_STORE, \r\n        fsFile: file\r\n    }\r\n}\r\n/*\r\nexport const allFilesStore = (files) => {\r\n    return { \r\n        type: ALLFILES_STORE, \r\n        allFiles: files\r\n    }\r\n}\r\n*/\r\nexport const filesStore = (files) => {\r\n    return { \r\n        type: FILES_STORE, \r\n        files: files\r\n    }\r\n}\r\n\r\nexport const seriesStore = (series) => {\r\n    return { \r\n        type: SERIES_STORE, \r\n        series: series\r\n    }\r\n}\r\n\r\nexport const dcmIsOpen = (value) => {\r\n    return { \r\n        type: DCM_IS_OPEN, \r\n        value: value\r\n    }\r\n}\r\n\r\nexport const dcmTool = (tool) => {\r\n    return { \r\n        type: DCM_TOOL, \r\n        tool: tool \r\n    }\r\n}\r\n\r\nexport const activeDcmIndex = (index) => {\r\n    return { \r\n        type: ACTIVE_DCM_INDEX, \r\n        activeDcmIndex: index \r\n    }\r\n}\r\n\r\nexport const activeDcm = (dcm) => {\r\n    return { \r\n        type: ACTIVE_DCM, \r\n        activeDcm: dcm \r\n    }\r\n}\r\n\r\nexport const activeMeasurements = (measurements) => {\r\n    return { \r\n        type: ACTIVE_MEASUREMENTS, \r\n        measurements: measurements \r\n    }\r\n}\r\n\r\nexport const explorer = (data) => {\r\n    return { \r\n        type: EXPLORER_STORE, \r\n        explorer: data \r\n    }\r\n}\r\n\r\nexport const explorerActivePatientIndex = (index) => {\r\n    return { \r\n        type: EXPLORER_ACTIVE_PATIENT_INDEX, \r\n        explorerActivePatientIndex: index \r\n    }\r\n}\r\n\r\nexport const explorerActiveStudyIndex = (index) => {\r\n    return { \r\n        type: EXPLORER_ACTIVE_STUDY_INDEX, \r\n        explorerActiveStudyIndex: index \r\n    }\r\n}\r\n\r\nexport const explorerActiveSeriesIndex = (index) => {\r\n    return { \r\n        type: EXPLORER_ACTIVE_SERIES_INDEX, \r\n        explorerActiveSeriesIndex: index \r\n    }\r\n}\r\n\r\nexport const setLayout = (row, col) => {\r\n    return { \r\n        type: LAYOUT, \r\n        layout: [row, col]\r\n    }\r\n}\r\n\r\nexport const setDicomdir = (dicomdir) => {\r\n    return { \r\n        type: DICOMDIR, \r\n        dicomdir: dicomdir\r\n    }\r\n}\r\n\r\nexport const setFsCurrentDir = (dir) => {\r\n    return { \r\n        type: FSCURRENTDIR, \r\n        fsCurrentDir: dir\r\n    }\r\n}\r\n\r\nexport const setFsCurrentList = (list) => {\r\n    return { \r\n        type: FSCURRENTLIST, \r\n        fsCurrentList: list\r\n    }\r\n}\r\n\r\nexport const setZippedFile = (file) => {\r\n    return { \r\n        type: FSZIPPEDFILE, \r\n        fsZippedFile: file\r\n    }\r\n}\r\n\r\nexport const doFsRefresh = () => {\r\n    return { \r\n        type: FSREFRESH,\r\n    }\r\n}\r\n\r\nexport const setVolume = (volume) => {\r\n    return { \r\n        type: VOLUME_STORE,\r\n        volume: volume,\r\n    }\r\n}\r\n","import React, { Fragment, PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport * as dicomParser from 'dicom-parser'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport fs from '../fs/fs'\r\nimport {\r\n  dicomDateToLocale,\r\n  dicomTimeToStr,\r\n  getSettingsDicomdirView,\r\n} from '../functions'\r\nimport {\r\n  fsFileStore,\r\n} from '../actions'\r\n\r\nconst styles = theme => ({\r\n  study: { \r\n    paddingLeft: theme.spacing(3) \r\n  },\r\n  series: { \r\n    paddingLeft: theme.spacing(5) \r\n  },\r\n  images: { \r\n    paddingLeft: theme.spacing(7) \r\n  },  \r\n  listItemText:{\r\n    fontSize:'0.80em',\r\n  }\r\n})\r\n\r\nconst styleScrollbar = {\r\n  height: 'calc(100vh - 48px)',\r\n}\r\n\r\nconst ExpandIcon = ({ expanded }) => expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />\r\n\r\nclass Dicomdir extends PureComponent {\r\n    constructor(props) {\r\n      super(props)\r\n      this.output = null\r\n    }\r\n\r\n    state = {\r\n      data: [],\r\n      expanded: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.dicomdir.origin === 'local')\r\n          this.openDicomdir(this.props.dicomdir.dicomdir)   \r\n        else \r\n          this.openDicomdirFs(this.props.dicomdir.dicomdir)               \r\n    }\r\n\r\n    buildData = (id = null) => {\r\n      let output = this.output\r\n      if (id !== null) {\r\n        output[id].expanded = !output[id].expanded\r\n      }\r\n      let images = []\r\n      let series = []\r\n      let study = []\r\n      let patient = []\r\n      output.slice().reverse().forEach((obj, i) => {\r\n        if (obj.key === 'image') {\r\n          images.unshift({id: obj.id, key: obj.key, path: obj.path, value: obj.value})\r\n        } else if (obj.key === 'series') {\r\n          series.unshift({id: obj.id, key: obj.key, number: obj.number, value: obj.value, expanded: obj.expanded, children: images})\r\n          images = []\r\n        } else if (obj.key === 'study') {\r\n          //console.log('study obj: ', obj)\r\n          study.unshift({id: obj.id, key: obj.key, value: obj.value, expanded: obj.expanded, children: series})\r\n          series = []\r\n        } else if (obj.key === 'patient') {\r\n          patient.unshift({id: obj.id, key: obj.key, value: obj.value, expanded: obj.expanded, children: study})\r\n          study = []\r\n        }\r\n      })\r\n      this.setState({data: patient})\r\n    }\r\n\r\n    buildOutput = (dataset) => {\r\n      //console.log('dataset: ', dataset)\r\n      let data = dataset.elements.x00041220.items\r\n      let output = []\r\n      if (data) {\r\n          data.forEach((e, index) => {\r\n            const id = index.toString()\r\n            if (e.dataSet.string('x00041430') === 'PATIENT') {\r\n                //console.log(\"Patient Name - \"+e.dataSet.string('x00100010'))\r\n                output.push({id: id, key: 'patient', value: e.dataSet.string('x00100010'), expanded: true})\r\n            } else if (e.dataSet.string('x00041430') === 'STUDY') {\r\n                //console.log(\"Study - \"+e.dataSet.string('x00081030'))\r\n                const value = `${dicomDateToLocale(e.dataSet.string('x00080020'))} - ${dicomTimeToStr(e.dataSet.string('x00080030'))}`\r\n                output.push({id: id, key: 'study', value: value, expanded: true})\r\n            } else if (e.dataSet.string('x00041430') === 'SERIES') {\r\n                //console.log(\"Series number - \"+e.dataSet.string('x00200011'))\r\n                output.push({id: id, key: 'series', number: e.dataSet.string('x00200011'), value: e.dataSet.string('x00080060'), expanded: true})\r\n            } else if (e.dataSet.string('x00041430') === 'IMAGE') {\r\n                //console.log(\"Image - \"+e.dataSet.string('x00041500'))\r\n                output.push({id: id, key: 'image', path: e.dataSet.string('x00041500').replace(/\\\\/g, '/'), value: e.dataSet.string('x00041500').split('\\\\').pop(), expanded: true})\r\n            }              \r\n          })\r\n      }\r\n      //console.log('output: ', output)\r\n      return output\r\n    }\r\n\r\n    openDicomdir = (file) => {\r\n        var reader = new FileReader()\r\n        reader.onload = (file) => {\r\n          let arrayBuffer = reader.result\r\n          let byteArray = new Uint8Array(arrayBuffer)\r\n          // Invoke the paresDicom function and get back a DataSet object with the contents\r\n          let dataset = null\r\n          let output = []\r\n          try {\r\n              dataset = dicomParser.parseDicom(byteArray)\r\n              output = this.buildOutput(dataset)\r\n          } catch(err) {\r\n              if (typeof err.dataSet != 'undefined') {\r\n                  output = this.buildOutput(err.dataSet)\r\n              }\r\n          }\r\n          this.output = output\r\n          this.buildData()\r\n        }\r\n\r\n        reader.readAsArrayBuffer(file)\r\n    }\r\n\r\n    openDicomdirFs = (fsItem) => {\r\n      let byteArray = new Uint8Array(fsItem.data)\r\n      let dataset = null\r\n      let output = []\r\n      try {\r\n        dataset = dicomParser.parseDicom(byteArray)\r\n        output = this.buildOutput(dataset)\r\n      } catch(err) {\r\n        if (typeof err.dataSet != 'undefined') {\r\n          output = this.buildOutput(err.dataSet)\r\n        }\r\n      }\r\n      this.output = output\r\n      this.buildData()\r\n    }\r\n\r\n    onClick = (id) => {\r\n      const obj = this.output.find(x => x.id === id)\r\n      if (obj.key === 'image') {\r\n        if (this.props.dicomdir.origin === 'local') { // load it from local\r\n          const file = this.props.dicomdir.files.find(x => x.name === obj.value)\r\n          this.props.onOpenFile(file)\r\n        } else { // load it from sandboxed file system\r\n          let components = obj.path.split('/')\r\n          const name = components.pop()\r\n          components.unshift(this.props.fsCurrentDir)\r\n          const parent = components.join('/')\r\n          fs.files.where({parent: parent, name: name}).first((item) => {\r\n            this.props.setFsFileStore(item)\r\n            this.props.onOpenFs(item)\r\n          })\r\n        }\r\n      } else {\r\n        this.buildData(id)\r\n      }\r\n    }\r\n\r\n    studyText = (study) => {\r\n      //console.log('study: ', study)\r\n      return study.value\r\n    }\r\n\r\n    render() {   \r\n      const { classes } = this.props\r\n\r\n      let styleComponent = null\r\n      if (getSettingsDicomdirView() === 'bottom') {\r\n          styleComponent = {marginTop: '0px', height: '275px'}\r\n      } else {\r\n          styleComponent = {marginTop: '48px', width: '350px'}\r\n      }\r\n\r\n      return (\r\n        <PerfectScrollbar>\r\n        <div style={styleScrollbar}>  \r\n        <div style={styleComponent}>\r\n          \r\n          <List>\r\n            {this.state.data.map(({ ...patient }, index) => (\r\n              <Fragment key={index}>\r\n                <ListItem button onClick={() => this.onClick(patient.id)}>\r\n                  <ListItemText primary={patient.value} secondary={patient.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\r\n                  <ExpandIcon expanded={patient.expanded} />\r\n                </ListItem>\r\n                <Collapse in={patient.expanded}>\r\n                  {patient.children.map(study => (\r\n                    <Fragment key={study.id}>\r\n                      <ListItem key={study.id} button dense onClick={() => this.onClick(study.id)} className={classes.study}>\r\n                        <ListItemText primary={this.studyText(study)} secondary={study.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\r\n                        <ExpandIcon expanded={study.expanded} />\r\n                      </ListItem>\r\n                      <Collapse in={study.expanded}>\r\n                        {study.children.map(series => (\r\n                          <Fragment key={series.id}>\r\n                            <ListItem key={series.id} button dense onClick={() => this.onClick(series.id)} className={classes.series}>\r\n                              <ListItemText primary={`${series.value} (${series.number})`} secondary={series.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\r\n                              <ExpandIcon expanded={study.expanded} />\r\n                            </ListItem>\r\n                            <Collapse in={series.expanded}>\r\n                              {series.children.map(images => (\r\n                                <ListItem key={images.id} button dense onClick={() => this.onClick(images.id)} className={classes.images}>\r\n                                  <ListItemText primary={images.value} secondary={images.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\r\n                                </ListItem>\r\n                              ))}\r\n                            </Collapse>\r\n                          </Fragment>\r\n                        ))}\r\n                      </Collapse>\r\n                    </Fragment>\r\n                  ))}\r\n                </Collapse>\r\n              </Fragment>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        </div>\r\n        </PerfectScrollbar>\r\n      )\r\n    }\r\n}   \r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      dicomdir: state.dicomdir,\r\n      fsCurrentDir: state.fsCurrentDir,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFsFileStore: (file) => dispatch(fsFileStore(file))\r\n  }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dicomdir))\r\n","// The table below was generated by running the following javascript in the console window while\n// viewing the HTML version of the standard here:\n// DICOM Standard here: http://dicom.nema.org/medical/dicom/current/output/html/part06.html\n// see the blog post about it here: http://chafey.blogspot.com/2015/08/parsing-dicom-standard-with-javascript.html\n\n/*\n (function () {\n var elements = document.querySelectorAll('#table_A-1 ~ div tbody tr');\n var result = \"\";for(var i=0; i < elements.length; i++) {\n result += \"'\" + elements[i].childNodes[1].childNodes[1].innerText.replace(/[^\\x20-\\x7E]+/g, '')  + \"':'\" +\n elements[i].childNodes[3].childNodes[1].innerText.replace(/[^\\x20-\\x7E]+/g, '') + \"',\\n\";\n }\n return result;\n })();\n */\n\nexport const uids = {\n  '1.2.840.10008.1.1':'Verification SOP Class',\n  '1.2.840.10008.1.2':'Implicit VR Little Endian: Default Transfer Syntax for DICOM',\n  '1.2.840.10008.1.2.1':'Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.99':'Deflated Explicit VR Little Endian',\n  '1.2.840.10008.1.2.2':'Explicit VR Big Endian (Retired)',\n  '1.2.840.10008.1.2.4.50':'JPEG Baseline (Process 1): Default Transfer Syntax for Lossy JPEG 8 Bit Image Compression',\n  '1.2.840.10008.1.2.4.51':'JPEG Extended (Process 2 & 4): Default Transfer Syntax for Lossy JPEG 12 Bit Image Compression (Process 4 only)',\n  '1.2.840.10008.1.2.4.52':'JPEG Extended (Process 3 & 5) (Retired)',\n  '1.2.840.10008.1.2.4.53':'JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)',\n  '1.2.840.10008.1.2.4.54':'JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)',\n  '1.2.840.10008.1.2.4.55':'JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)',\n  '1.2.840.10008.1.2.4.56':'JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)',\n  '1.2.840.10008.1.2.4.57':'JPEG Lossless, Non-Hierarchical (Process 14)',\n  '1.2.840.10008.1.2.4.58':'JPEG Lossless, Non-Hierarchical (Process 15) (Retired)',\n  '1.2.840.10008.1.2.4.59':'JPEG Extended, Hierarchical (Process 16 & 18) (Retired)',\n  '1.2.840.10008.1.2.4.60':'JPEG Extended, Hierarchical (Process 17 & 19) (Retired)',\n  '1.2.840.10008.1.2.4.61':'JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)',\n  '1.2.840.10008.1.2.4.62':'JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)',\n  '1.2.840.10008.1.2.4.63':'JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)',\n  '1.2.840.10008.1.2.4.64':'JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)',\n  '1.2.840.10008.1.2.4.65':'JPEG Lossless, Hierarchical (Process 28) (Retired)',\n  '1.2.840.10008.1.2.4.66':'JPEG Lossless, Hierarchical (Process 29) (Retired)',\n  '1.2.840.10008.1.2.4.70':'JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1]): Default Transfer Syntax for Lossless JPEG Image Compression',\n  '1.2.840.10008.1.2.4.80':'JPEG-LS Lossless Image Compression',\n  '1.2.840.10008.1.2.4.81':'JPEG-LS Lossy (Near-Lossless) Image Compression',\n  '1.2.840.10008.1.2.4.90':'JPEG 2000 Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.91':'JPEG 2000 Image Compression',\n  '1.2.840.10008.1.2.4.92':'JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.93':'JPEG 2000 Part 2 Multi-component Image Compression',\n  '1.2.840.10008.1.2.4.94':'JPIP Referenced',\n  '1.2.840.10008.1.2.4.95':'JPIP Referenced Deflate',\n  '1.2.840.10008.1.2.4.100':'MPEG2 Main Profile @ Main Level',\n  '1.2.840.10008.1.2.4.101':'MPEG2 Main Profile @ High Level',\n  '1.2.840.10008.1.2.4.102':'MPEG-4 AVC/H.264 High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.103':'MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.104':'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video',\n  '1.2.840.10008.1.2.4.105':'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video',\n  '1.2.840.10008.1.2.4.106':'MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2',\n  '1.2.840.10008.1.2.5':'RLE Lossless',\n  '1.2.840.10008.1.2.6.1':'RFC 2557 MIME encapsulation',\n  '1.2.840.10008.1.2.6.2':'XML Encoding',\n  '1.2.840.10008.1.3.10':'Media Storage Directory Storage',\n  '1.2.840.10008.1.4.1.1':'Talairach Brain Atlas Frame of Reference',\n  '1.2.840.10008.1.4.1.2':'SPM2 T1 Frame of Reference',\n  '1.2.840.10008.1.4.1.3':'SPM2 T2 Frame of Reference',\n  '1.2.840.10008.1.4.1.4':'SPM2 PD Frame of Reference',\n  '1.2.840.10008.1.4.1.5':'SPM2 EPI Frame of Reference',\n  '1.2.840.10008.1.4.1.6':'SPM2 FIL T1 Frame of Reference',\n  '1.2.840.10008.1.4.1.7':'SPM2 PET Frame of Reference',\n  '1.2.840.10008.1.4.1.8':'SPM2 TRANSM Frame of Reference',\n  '1.2.840.10008.1.4.1.9':'SPM2 SPECT Frame of Reference',\n  '1.2.840.10008.1.4.1.10':'SPM2 GRAY Frame of Reference',\n  '1.2.840.10008.1.4.1.11':'SPM2 WHITE Frame of Reference',\n  '1.2.840.10008.1.4.1.12':'SPM2 CSF Frame of Reference',\n  '1.2.840.10008.1.4.1.13':'SPM2 BRAINMASK Frame of Reference',\n  '1.2.840.10008.1.4.1.14':'SPM2 AVG305T1 Frame of Reference',\n  '1.2.840.10008.1.4.1.15':'SPM2 AVG152T1 Frame of Reference',\n  '1.2.840.10008.1.4.1.16':'SPM2 AVG152T2 Frame of Reference',\n  '1.2.840.10008.1.4.1.17':'SPM2 AVG152PD Frame of Reference',\n  '1.2.840.10008.1.4.1.18':'SPM2 SINGLESUBJT1 Frame of Reference',\n  '1.2.840.10008.1.4.2.1':'ICBM 452 T1 Frame of Reference',\n  '1.2.840.10008.1.4.2.2':'ICBM Single Subject MRI Frame of Reference',\n  '1.2.840.10008.1.5.1':'Hot Iron Color Palette SOP Instance',\n  '1.2.840.10008.1.5.2':'PET Color Palette SOP Instance',\n  '1.2.840.10008.1.5.3':'Hot Metal Blue Color Palette SOP Instance',\n  '1.2.840.10008.1.5.4':'PET 20 Step Color Palette SOP Instance',\n  '1.2.840.10008.1.9':'Basic Study Content Notification SOP Class (Retired)',\n  '1.2.840.10008.1.20.1':'Storage Commitment Push Model SOP Class',\n  '1.2.840.10008.1.20.1.1':'Storage Commitment Push Model SOP Instance',\n  '1.2.840.10008.1.20.2':'Storage Commitment Pull Model SOP Class (Retired)',\n  '1.2.840.10008.1.20.2.1':'Storage Commitment Pull Model SOP Instance (Retired)',\n  '1.2.840.10008.1.40':'Procedural Event Logging SOP Class',\n  '1.2.840.10008.1.40.1':'Procedural Event Logging SOP Instance',\n  '1.2.840.10008.1.42':'Substance Administration Logging SOP Class',\n  '1.2.840.10008.1.42.1':'Substance Administration Logging SOP Instance',\n  '1.2.840.10008.2.6.1':'DICOM UID Registry',\n  '1.2.840.10008.2.16.4':'DICOM Controlled Terminology',\n  '1.2.840.10008.3.1.1.1':'DICOM Application Context Name',\n  '1.2.840.10008.3.1.2.1.1':'Detached Patient Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.1.4':'Detached Patient Management Meta SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.2.1':'Detached Visit Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.3.1':'Detached Study Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.3.2':'Study Component Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.3.3':'Modality Performed Procedure Step SOP Class',\n  '1.2.840.10008.3.1.2.3.4':'Modality Performed Procedure Step Retrieve SOP Class',\n  '1.2.840.10008.3.1.2.3.5':'Modality Performed Procedure Step Notification SOP Class',\n  '1.2.840.10008.3.1.2.5.1':'Detached Results Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.5.4':'Detached Results Management Meta SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.5.5':'Detached Study Management Meta SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.6.1':'Detached Interpretation Management SOP Class (Retired)',\n  '1.2.840.10008.4.2':'Storage Service Class',\n  '1.2.840.10008.5.1.1.1':'Basic Film Session SOP Class',\n  '1.2.840.10008.5.1.1.2':'Basic Film Box SOP Class',\n  '1.2.840.10008.5.1.1.4':'Basic Grayscale Image Box SOP Class',\n  '1.2.840.10008.5.1.1.4.1':'Basic Color Image Box SOP Class',\n  '1.2.840.10008.5.1.1.4.2':'Referenced Image Box SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.9':'Basic Grayscale Print Management Meta SOP Class',\n  '1.2.840.10008.5.1.1.9.1':'Referenced Grayscale Print Management Meta SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.14':'Print Job SOP Class',\n  '1.2.840.10008.5.1.1.15':'Basic Annotation Box SOP Class',\n  '1.2.840.10008.5.1.1.16':'Printer SOP Class',\n  '1.2.840.10008.5.1.1.16.376':'Printer Configuration Retrieval SOP Class',\n  '1.2.840.10008.5.1.1.17':'Printer SOP Instance',\n  '1.2.840.10008.5.1.1.17.376':'Printer Configuration Retrieval SOP Instance',\n  '1.2.840.10008.5.1.1.18':'Basic Color Print Management Meta SOP Class',\n  '1.2.840.10008.5.1.1.18.1':'Referenced Color Print Management Meta SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.22':'VOI LUT Box SOP Class',\n  '1.2.840.10008.5.1.1.23':'Presentation LUT SOP Class',\n  '1.2.840.10008.5.1.1.24':'Image Overlay Box SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.24.1':'Basic Print Image Overlay Box SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.25':'Print Queue SOP Instance (Retired)',\n  '1.2.840.10008.5.1.1.26':'Print Queue Management SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.27':'Stored Print Storage SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.29':'Hardcopy Grayscale Image Storage SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.30':'Hardcopy Color Image Storage SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.31':'Pull Print Request SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.32':'Pull Stored Print Management Meta SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.33':'Media Creation Management SOP Class UID',\n  '1.2.840.10008.5.1.1.40':'Display System SOP Class',\n  '1.2.840.10008.5.1.1.40.1':'Display System SOP Instance',\n  '1.2.840.10008.5.1.4.1.1.1':'Computed Radiography Image Storage',\n  '1.2.840.10008.5.1.4.1.1.1.1':'Digital X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.1.1.1':'Digital X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.1.2':'Digital Mammography X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.1.2.1':'Digital Mammography X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.1.3':'Digital Intra-Oral X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.1.3.1':'Digital Intra-Oral X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.2':'CT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.2.1':'Enhanced CT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.2.2':'Legacy Converted Enhanced CT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.3':'Ultrasound Multi-frame Image Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.3.1':'Ultrasound Multi-frame Image Storage',\n  '1.2.840.10008.5.1.4.1.1.4':'MR Image Storage',\n  '1.2.840.10008.5.1.4.1.1.4.1':'Enhanced MR Image Storage',\n  '1.2.840.10008.5.1.4.1.1.4.2':'MR Spectroscopy Storage',\n  '1.2.840.10008.5.1.4.1.1.4.3':'Enhanced MR Color Image Storage',\n  '1.2.840.10008.5.1.4.1.1.4.4':'Legacy Converted Enhanced MR Image Storage',\n  '1.2.840.10008.5.1.4.1.1.5':'Nuclear Medicine Image Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.6':'Ultrasound Image Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.6.1':'Ultrasound Image Storage',\n  '1.2.840.10008.5.1.4.1.1.6.2':'Enhanced US Volume Storage',\n  '1.2.840.10008.5.1.4.1.1.7':'Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.7.1':'Multi-frame Single Bit Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.7.2':'Multi-frame Grayscale Byte Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.7.3':'Multi-frame Grayscale Word Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.7.4':'Multi-frame True Color Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.8':'Standalone Overlay Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.9':'Standalone Curve Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.9.1':'Waveform Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.9.1.1':'12-lead ECG Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.1.2':'General ECG Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.1.3':'Ambulatory ECG Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.2.1':'Hemodynamic Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.3.1':'Cardiac Electrophysiology Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.4.1':'Basic Voice Audio Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.4.2':'General Audio Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.5.1':'Arterial Pulse Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.6.1':'Respiratory Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.10':'Standalone Modality LUT Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.11':'Standalone VOI LUT Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.11.1':'Grayscale Softcopy Presentation State Storage SOP Class',\n  '1.2.840.10008.5.1.4.1.1.11.2':'Color Softcopy Presentation State Storage SOP Class',\n  '1.2.840.10008.5.1.4.1.1.11.3':'Pseudo-Color Softcopy Presentation State Storage SOP Class',\n  '1.2.840.10008.5.1.4.1.1.11.4':'Blending Softcopy Presentation State Storage SOP Class',\n  '1.2.840.10008.5.1.4.1.1.11.5':'XA/XRF Grayscale Softcopy Presentation State Storage',\n  '1.2.840.10008.5.1.4.1.1.12.1':'X-Ray Angiographic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.12.1.1':'Enhanced XA Image Storage',\n  '1.2.840.10008.5.1.4.1.1.12.2':'X-Ray Radiofluoroscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.12.2.1':'Enhanced XRF Image Storage',\n  '1.2.840.10008.5.1.4.1.1.12.3':'X-Ray Angiographic Bi-Plane Image Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.13.1.1':'X-Ray 3D Angiographic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.13.1.2':'X-Ray 3D Craniofacial Image Storage',\n  '1.2.840.10008.5.1.4.1.1.13.1.3':'Breast Tomosynthesis Image Storage',\n  '1.2.840.10008.5.1.4.1.1.13.1.4':'Breast Projection X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.13.1.5':'Breast Projection X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.14.1':'Intravascular Optical Coherence Tomography Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.14.2':'Intravascular Optical Coherence Tomography Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.20':'Nuclear Medicine Image Storage',\n  '1.2.840.10008.5.1.4.1.1.30':'Parametric Map Storage',\n  '1.2.840.10008.5.1.4.1.1.66':'Raw Data Storage',\n  '1.2.840.10008.5.1.4.1.1.66.1':'Spatial Registration Storage',\n  '1.2.840.10008.5.1.4.1.1.66.2':'Spatial Fiducials Storage',\n  '1.2.840.10008.5.1.4.1.1.66.3':'Deformable Spatial Registration Storage',\n  '1.2.840.10008.5.1.4.1.1.66.4':'Segmentation Storage',\n  '1.2.840.10008.5.1.4.1.1.66.5':'Surface Segmentation Storage',\n  '1.2.840.10008.5.1.4.1.1.67':'Real World Value Mapping Storage',\n  '1.2.840.10008.5.1.4.1.1.68.1':'Surface Scan Mesh Storage',\n  '1.2.840.10008.5.1.4.1.1.68.2':'Surface Scan Point Cloud Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1':'VL Image Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.77.2':'VL Multi-frame Image Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.77.1.1':'VL Endoscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.1.1':'Video Endoscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.2':'VL Microscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.2.1':'Video Microscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.3':'VL Slide-Coordinates Microscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.4':'VL Photographic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.4.1':'Video Photographic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.1':'Ophthalmic Photography 8 Bit Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.2':'Ophthalmic Photography 16 Bit Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.3':'Stereometric Relationship Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.4':'Ophthalmic Tomography Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.5':'Wide Field Ophthalmic Photography Stereographic Projection Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.6':'Wide Field Ophthalmic Photography 3D Coordinates Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.6':'VL Whole Slide Microscopy Image Storage',\n  '1.2.840.10008.5.1.4.1.1.78.1':'Lensometry Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.2':'Autorefraction Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.3':'Keratometry Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.4':'Subjective Refraction Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.5':'Visual Acuity Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.6':'Spectacle Prescription Report Storage',\n  '1.2.840.10008.5.1.4.1.1.78.7':'Ophthalmic Axial Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.8':'Intraocular Lens Calculations Storage',\n  '1.2.840.10008.5.1.4.1.1.79.1':'Macular Grid Thickness and Volume Report Storage',\n  '1.2.840.10008.5.1.4.1.1.80.1':'Ophthalmic Visual Field Static Perimetry Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.81.1':'Ophthalmic Thickness Map Storage',\n  '1.2.840.10008.5.1.4.1.1.82.1':'Corneal Topography Map Storage',\n  '1.2.840.10008.5.1.4.1.1.88.1':'Text SR Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.88.2':'Audio SR Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.88.3':'Detail SR Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.88.4':'Comprehensive SR Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.88.11':'Basic Text SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.22':'Enhanced SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.33':'Comprehensive SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.34':'Comprehensive 3D SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.35':'Extensible SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.40':'Procedure Log Storage',\n  '1.2.840.10008.5.1.4.1.1.88.50':'Mammography CAD SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.59':'Key Object Selection Document Storage',\n  '1.2.840.10008.5.1.4.1.1.88.65':'Chest CAD SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.67':'X-Ray Radiation Dose SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.68':'Radiopharmaceutical Radiation Dose SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.69':'Colon CAD SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.70':'Implantation Plan SR Storage',\n  '1.2.840.10008.5.1.4.1.1.104.1':'Encapsulated PDF Storage',\n  '1.2.840.10008.5.1.4.1.1.104.2':'Encapsulated CDA Storage',\n  '1.2.840.10008.5.1.4.1.1.128':'Positron Emission Tomography Image Storage',\n  '1.2.840.10008.5.1.4.1.1.128.1':'Legacy Converted Enhanced PET Image Storage',\n  '1.2.840.10008.5.1.4.1.1.129':'Standalone PET Curve Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.130':'Enhanced PET Image Storage',\n  '1.2.840.10008.5.1.4.1.1.131':'Basic Structured Display Storage',\n  '1.2.840.10008.5.1.4.1.1.481.1':'RT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.481.2':'RT Dose Storage',\n  '1.2.840.10008.5.1.4.1.1.481.3':'RT Structure Set Storage',\n  '1.2.840.10008.5.1.4.1.1.481.4':'RT Beams Treatment Record Storage',\n  '1.2.840.10008.5.1.4.1.1.481.5':'RT Plan Storage',\n  '1.2.840.10008.5.1.4.1.1.481.6':'RT Brachy Treatment Record Storage',\n  '1.2.840.10008.5.1.4.1.1.481.7':'RT Treatment Summary Record Storage',\n  '1.2.840.10008.5.1.4.1.1.481.8':'RT Ion Plan Storage',\n  '1.2.840.10008.5.1.4.1.1.481.9':'RT Ion Beams Treatment Record Storage',\n  '1.2.840.10008.5.1.4.1.1.501.1':'DICOS CT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.501.2.1':'DICOS Digital X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.501.2.2':'DICOS Digital X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.501.3':'DICOS Threat Detection Report Storage',\n  '1.2.840.10008.5.1.4.1.1.501.4':'DICOS 2D AIT Storage',\n  '1.2.840.10008.5.1.4.1.1.501.5':'DICOS 3D AIT Storage',\n  '1.2.840.10008.5.1.4.1.1.501.6':'DICOS Quadrupole Resonance (QR) Storage',\n  '1.2.840.10008.5.1.4.1.1.601.1':'Eddy Current Image Storage',\n  '1.2.840.10008.5.1.4.1.1.601.2':'Eddy Current Multi-frame Image Storage',\n  '1.2.840.10008.5.1.4.1.2.1.1':'Patient Root Query/Retrieve Information Model - FIND',\n  '1.2.840.10008.5.1.4.1.2.1.2':'Patient Root Query/Retrieve Information Model - MOVE',\n  '1.2.840.10008.5.1.4.1.2.1.3':'Patient Root Query/Retrieve Information Model - GET',\n  '1.2.840.10008.5.1.4.1.2.2.1':'Study Root Query/Retrieve Information Model - FIND',\n  '1.2.840.10008.5.1.4.1.2.2.2':'Study Root Query/Retrieve Information Model - MOVE',\n  '1.2.840.10008.5.1.4.1.2.2.3':'Study Root Query/Retrieve Information Model - GET',\n  '1.2.840.10008.5.1.4.1.2.3.1':'Patient/Study Only Query/Retrieve Information Model - FIND (Retired)',\n  '1.2.840.10008.5.1.4.1.2.3.2':'Patient/Study Only Query/Retrieve Information Model - MOVE (Retired)',\n  '1.2.840.10008.5.1.4.1.2.3.3':'Patient/Study Only Query/Retrieve Information Model - GET (Retired)',\n  '1.2.840.10008.5.1.4.1.2.4.2':'Composite Instance Root Retrieve - MOVE',\n  '1.2.840.10008.5.1.4.1.2.4.3':'Composite Instance Root Retrieve - GET',\n  '1.2.840.10008.5.1.4.1.2.5.3':'Composite Instance Retrieve Without Bulk Data - GET',\n  '1.2.840.10008.5.1.4.31':'Modality Worklist Information Model - FIND',\n  '1.2.840.10008.5.1.4.32':'General Purpose Worklist Management Meta SOP Class (Retired)',\n  '1.2.840.10008.5.1.4.32.1':'General Purpose Worklist Information Model - FIND (Retired)',\n  '1.2.840.10008.5.1.4.32.2':'General Purpose Scheduled Procedure Step SOP Class (Retired)',\n  '1.2.840.10008.5.1.4.32.3':'General Purpose Performed Procedure Step SOP Class (Retired)',\n  '1.2.840.10008.5.1.4.33':'Instance Availability Notification SOP Class',\n  '1.2.840.10008.5.1.4.34.1':'RT Beams Delivery Instruction Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.2':'RT Conventional Machine Verification - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.3':'RT Ion Machine Verification - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4':'Unified Worklist and Procedure Step Service Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4.1':'Unified Procedure Step - Push SOP Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4.2':'Unified Procedure Step - Watch SOP Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4.3':'Unified Procedure Step - Pull SOP Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4.4':'Unified Procedure Step - Event SOP Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.5':'UPS Global Subscription SOP Instance',\n  '1.2.840.10008.5.1.4.34.5.1':'UPS Filtered Global Subscription SOP Instance',\n  '1.2.840.10008.5.1.4.34.6':'Unified Worklist and Procedure Step Service Class',\n  '1.2.840.10008.5.1.4.34.6.1':'Unified Procedure Step - Push SOP Class',\n  '1.2.840.10008.5.1.4.34.6.2':'Unified Procedure Step - Watch SOP Class',\n  '1.2.840.10008.5.1.4.34.6.3':'Unified Procedure Step - Pull SOP Class',\n  '1.2.840.10008.5.1.4.34.6.4':'Unified Procedure Step - Event SOP Class',\n  '1.2.840.10008.5.1.4.34.7':'RT Beams Delivery Instruction Storage',\n  '1.2.840.10008.5.1.4.34.8':'RT Conventional Machine Verification',\n  '1.2.840.10008.5.1.4.34.9':'RT Ion Machine Verification',\n  '1.2.840.10008.5.1.4.37.1':'General Relevant Patient Information Query',\n  '1.2.840.10008.5.1.4.37.2':'Breast Imaging Relevant Patient Information Query',\n  '1.2.840.10008.5.1.4.37.3':'Cardiac Relevant Patient Information Query',\n  '1.2.840.10008.5.1.4.38.1':'Hanging Protocol Storage',\n  '1.2.840.10008.5.1.4.38.2':'Hanging Protocol Information Model - FIND',\n  '1.2.840.10008.5.1.4.38.3':'Hanging Protocol Information Model - MOVE',\n  '1.2.840.10008.5.1.4.38.4':'Hanging Protocol Information Model - GET',\n  '1.2.840.10008.5.1.4.39.1':'Color Palette Storage',\n  '1.2.840.10008.5.1.4.39.2':'Color Palette Information Model - FIND',\n  '1.2.840.10008.5.1.4.39.3':'Color Palette Information Model - MOVE',\n  '1.2.840.10008.5.1.4.39.4':'Color Palette Information Model - GET',\n  '1.2.840.10008.5.1.4.41':'Product Characteristics Query SOP Class',\n  '1.2.840.10008.5.1.4.42':'Substance Approval Query SOP Class',\n  '1.2.840.10008.5.1.4.43.1':'Generic Implant Template Storage',\n  '1.2.840.10008.5.1.4.43.2':'Generic Implant Template Information Model - FIND',\n  '1.2.840.10008.5.1.4.43.3':'Generic Implant Template Information Model - MOVE',\n  '1.2.840.10008.5.1.4.43.4':'Generic Implant Template Information Model - GET',\n  '1.2.840.10008.5.1.4.44.1':'Implant Assembly Template Storage',\n  '1.2.840.10008.5.1.4.44.2':'Implant Assembly Template Information Model - FIND',\n  '1.2.840.10008.5.1.4.44.3':'Implant Assembly Template Information Model - MOVE',\n  '1.2.840.10008.5.1.4.44.4':'Implant Assembly Template Information Model - GET',\n  '1.2.840.10008.5.1.4.45.1':'Implant Template Group Storage',\n  '1.2.840.10008.5.1.4.45.2':'Implant Template Group Information Model - FIND',\n  '1.2.840.10008.5.1.4.45.3':'Implant Template Group Information Model - MOVE',\n  '1.2.840.10008.5.1.4.45.4':'Implant Template Group Information Model - GET',\n  '1.2.840.10008.7.1.1':'Native DICOM Model',\n  '1.2.840.10008.7.1.2':'Abstract Multi-Dimensional Image Model',\n  '1.2.840.10008.8.1.1':'DICOM Content Mapping Resource',\n  '1.2.840.10008.15.0.3.1':'dicomDeviceName',\n  '1.2.840.10008.15.0.3.2':'dicomDescription',\n  '1.2.840.10008.15.0.3.3':'dicomManufacturer',\n  '1.2.840.10008.15.0.3.4':'dicomManufacturerModelName',\n  '1.2.840.10008.15.0.3.5':'dicomSoftwareVersion',\n  '1.2.840.10008.15.0.3.6':'dicomVendorData',\n  '1.2.840.10008.15.0.3.7':'dicomAETitle',\n  '1.2.840.10008.15.0.3.8':'dicomNetworkConnectionReference',\n  '1.2.840.10008.15.0.3.9':'dicomApplicationCluster',\n  '1.2.840.10008.15.0.3.10':'dicomAssociationInitiator',\n  '1.2.840.10008.15.0.3.11':'dicomAssociationAcceptor',\n  '1.2.840.10008.15.0.3.12':'dicomHostname',\n  '1.2.840.10008.15.0.3.13':'dicomPort',\n  '1.2.840.10008.15.0.3.14':'dicomSOPClass',\n  '1.2.840.10008.15.0.3.15':'dicomTransferRole',\n  '1.2.840.10008.15.0.3.16':'dicomTransferSyntax',\n  '1.2.840.10008.15.0.3.17':'dicomPrimaryDeviceType',\n  '1.2.840.10008.15.0.3.18':'dicomRelatedDeviceReference',\n  '1.2.840.10008.15.0.3.19':'dicomPreferredCalledAETitle',\n  '1.2.840.10008.15.0.3.20':'dicomTLSCyphersuite',\n  '1.2.840.10008.15.0.3.21':'dicomAuthorizedNodeCertificateReference',\n  '1.2.840.10008.15.0.3.22':'dicomThisNodeCertificateReference',\n  '1.2.840.10008.15.0.3.23':'dicomInstalled',\n  '1.2.840.10008.15.0.3.24':'dicomStationName',\n  '1.2.840.10008.15.0.3.25':'dicomDeviceSerialNumber',\n  '1.2.840.10008.15.0.3.26':'dicomInstitutionName',\n  '1.2.840.10008.15.0.3.27':'dicomInstitutionAddress',\n  '1.2.840.10008.15.0.3.28':'dicomInstitutionDepartmentName',\n  '1.2.840.10008.15.0.3.29':'dicomIssuerOfPatientID',\n  '1.2.840.10008.15.0.3.30':'dicomPreferredCallingAETitle',\n  '1.2.840.10008.15.0.3.31':'dicomSupportedCharacterSet',\n  '1.2.840.10008.15.0.4.1':'dicomConfigurationRoot',\n  '1.2.840.10008.15.0.4.2':'dicomDevicesRoot',\n  '1.2.840.10008.15.0.4.3':'dicomUniqueAETitlesRegistryRoot',\n  '1.2.840.10008.15.0.4.4':'dicomDevice',\n  '1.2.840.10008.15.0.4.5':'dicomNetworkAE',\n  '1.2.840.10008.15.0.4.6':'dicomNetworkConnection',\n  '1.2.840.10008.15.0.4.7':'dicomUniqueAETitle',\n  '1.2.840.10008.15.0.4.8':'dicomTransferCapability',\n  '1.2.840.10008.15.1.1':'Universal Coordinated Time',\n};\n","import React, { PureComponent } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nclass OpenUrlDlg extends PureComponent {\r\n\r\n  hide = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  cancel = () => {\r\n    window.stop()\r\n    this.hide()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n            open={true}\r\n            onClose={this.hide}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Downloading file ...\"}</DialogTitle>\r\n            <DialogContent>\r\n              <LinearProgress variant=\"determinate\" value={this.props.progress} color='secondary' />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OpenUrlDlg\r\n","import React, { PureComponent } from 'react'\r\nimport Icon from '@mdi/react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nimport { \r\n    mdiPlay,\r\n    mdiPause,\r\n    mdiSkipBackward,\r\n    mdiSkipForward,\r\n    mdiSkipNext,\r\n    mdiSkipPrevious,\r\n  } from '@mdi/js'\r\n\r\nconst iconColor = '#FFFFFF'\r\n\r\nclass CinePlayer extends PureComponent {\r\n    firstframe = () => {\r\n        this.props.runCinePlayer('firstframe') \r\n    }\r\n\r\n    previousframe = () => {\r\n        this.props.runCinePlayer('previousframe') \r\n    }\r\n\r\n    play = () => {\r\n        this.props.runCinePlayer('play') \r\n    }\r\n\r\n    pause = () => {\r\n        this.props.runCinePlayer('pause') \r\n    }\r\n\r\n    nextframe = () => {\r\n        this.props.runCinePlayer('nextframe') \r\n    }\r\n\r\n    lastframe = () => {\r\n        this.props.runCinePlayer('lastframe') \r\n    }\r\n\r\n    render() {\r\n        let play = null\r\n        if (!this.props.inPlay) {\r\n            play = <IconButton onClick={this.play}>\r\n                        <Icon path={mdiPlay} size={'1.5rem'} color={iconColor} />\r\n                   </IconButton>          \r\n        } else {\r\n            play = <IconButton onClick={this.pause}>\r\n                        <Icon path={mdiPause} size={'1.5rem'} color={iconColor} />\r\n                   </IconButton>  \r\n        }\r\n        return (\r\n            <div style={{ width:240, margin:'0 auto' }}>\r\n                <IconButton onClick={this.firstframe}>\r\n                    <Icon path={mdiSkipBackward} size={'1.5rem'} color={iconColor} />\r\n                </IconButton>\r\n                <IconButton onClick={this.previousframe}>\r\n                    <Icon path={mdiSkipPrevious} size={'1.5rem'} color={iconColor} />\r\n                </IconButton>\r\n                {play}\r\n                <IconButton onClick={this.nextframe}>\r\n                    <Icon path={mdiSkipNext} size={'1.5rem'} color={iconColor} />\r\n                </IconButton>\r\n                <IconButton onClick={this.lastframe}>\r\n                    <Icon path={mdiSkipForward} size={'1.5rem'} color={iconColor} />\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CinePlayer\r\n","import Dexie from 'dexie'\r\n\r\nconst db = new Dexie('udvDB')\r\n\r\ndb.version(1).stores({ \r\n    measurement: '++id, sopinstanceuid, tool' \r\n})\r\n\r\ndb.open()\r\n\r\nexport default db\r\n","import React from \"react\"\nimport {connect} from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport Hammer from \"hammerjs\"\nimport * as cornerstone from \"cornerstone-core\"\nimport * as cornerstoneTools from \"cornerstone-tools\"\nimport * as cornerstoneMath from \"cornerstone-math\"\nimport * as cornerstoneFileImageLoader from \"cornerstone-file-image-loader\"\nimport * as cornerstoneWebImageLoader from \"cornerstone-web-image-loader\"\nimport * as cornerstoneWADOImageLoader from \"cornerstone-wado-image-loader\"\nimport * as dicomParser from 'dicom-parser'\nimport * as blobUtil from 'blob-util'\nimport {uids} from '../constants/uids'\nimport { SETTINGS_SAVEAS } from '../constants/settings'\nimport OpenUrlDlg from './OpenUrlDlg'\nimport CinePlayer from './CinePlayer'\nimport { isMobile } from 'react-device-detect'\nimport { import as csTools } from 'cornerstone-tools'\nimport db from '../db/db'\nimport fs from '../fs/fs'\n\nimport {\n  clearStore, \n  dcmIsOpen, \n  activeDcm, \n  dcmTool, \n  activeMeasurements,\n  doFsRefresh} \nfrom '../actions'\n\nimport {\n  isLocalizer,\n  capitalize,\n  getFileName,\n  getSettingsOverlay,\n  isFileImage,\n  isFsFileImage,\n  isUrlImage,\n  getSettingsSaveInto\n} from '../functions'\n\nconst scrollToIndex = csTools('util/scrollToIndex')\n\n/*\nfunction getBlobUrl(url) {\n  const baseUrl = window.URL || window.webkitURL;\n  const blob = new Blob([`importScripts('${url}')`], {type: \"application/javascript\"});\n  return baseUrl.createObjectURL(blob);\n}\n\nlet webWorkerUrl = getBlobUrl(\n  \"https://unpkg.com/cornerstone-wado-image-loader@3.0.0/dist/cornerstoneWADOImageLoaderWebWorker.min.js\"\n)\nlet codecsUrl = getBlobUrl(\n  \"https://unpkg.com/cornerstone-wado-image-loader@3.0.0/dist/cornerstoneWADOImageLoaderCodecs.js\"\n  // \"https://unpkg.com/cornerstone-wado-image-loader/dist/cornerstoneWADOImageLoaderCodecs.js\"\n)\n// See componentDidMount line 110 for initialization, registration\n\nconst config = {\n  maxWebWorkers: 4, //\n  //startWebWorkersOnDemand: true, //\n  webWorkerPath: webWorkerUrl,\n  //webWorkerTaskPaths: [], //\n  taskConfiguration: {\n    decodeTask: {\n      //loadCodecsOnStartup: true, //\n      //initializeCodecsOnStartup: false, //\n      codecsPath: codecsUrl,\n      //usePDFJS: false, //\n      //strict: true //\n    }\n  }\n}\nvar config = {\n  maxWebWorkers: navigator.hardwareConcurrency || 1,\n  startWebWorkersOnDemand: false,\n}\n*/\ncornerstoneTools.external.cornerstone = cornerstone\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\ncornerstoneFileImageLoader.external.cornerstone = cornerstone\ncornerstoneWebImageLoader.external.cornerstone = cornerstone\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone\n//cornerstoneWADOImageLoader.webWorkerManager.initialize(config)\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser\ncornerstoneTools.external.Hammer = Hammer\ncornerstoneTools.init({\n  globalToolSyncEnabled: true,\n})\n\n//console.log({ cornerstone })\n//console.log({ cornerstoneWADOImageLoader })\n//console.log({ dicomParser })\n\nclass DicomViewer extends React.Component {\n    constructor(props) {\n      super(props)\n      this.files = null\n      this.filename = ''\n      this.localfile = null\n      this.localurl = null\n      this.fsItem = null\n      this.dicomImage = null\n      this.imageId = null\n      this.image = null\n      this.isDicom = false\n      this.numberOfFrames = 1\n      this.measurements = []\n      this.xSize = 0\n      this.ySize = 0\n      this.zSize = 0\n      this.volume = null\n      this.originImage = null\n      this.mprPlane = ''\n      this.sliceMax = 0\n      this.sliceIndex = 0\n    }\n\n    state = {\n      visibleOpenUrlDlg: false,\n      progress: null,\n      visibleCinePlayer: false,\n      errorOnOpenImage: null,\n      errorOnCors: false,\n      frame: 1,\n      inPlay: false,\n      viewport: null,\n    }\n\n    componentDidMount() {\n      //console.log('dicomviewer - componentDidMount: ')\n      this.props.runTool(this)\n      this.props.changeTool(this)\n      cornerstone.events.addEventListener('cornerstoneimageloaded', this.onImageLoaded)\n      const { dcmRef } = this.props\n      dcmRef(this)          \n      this.useIsPreview = this.props.use ===  'preview'\n      this.useIsNormal = this.props.use ===  'normal'\n    }\n\n    componentWillUnmount() {\n      this.props.runTool(undefined)\n      this.props.changeTool(undefined)\n      const { dcmRef } = this.props\n      dcmRef(undefined)            \n    }\n\n    componentDidUpdate(previousProps) {\n      //console.log('dicomviewer - componentDidUpdate: ')\n      /*if (this.props.files !== null) {\n        console.log('this.props.files[0]: ', this.props.files[0])\n        console.log('this.props.files: ', this.props.files)\n      }*/\n      /*if (this.props.volume !== null) {\n        console.log('volume set: ', this.props.volume)\n        this.volume = this.props.volume\n      }*/\n      const isOpen = this.props.isOpen[this.props.index]\n      if (this.props.layout !== previousProps.layout && isOpen) {\n        cornerstone.resize(this.dicomImage)\n      }\n    }\n  \n    onOpenUrl = (e) => {\n      const eventData = e.detail\n      this.setState({ progress: eventData.percentComplete })\n    }\n\n    showOpenUrlDlg = (url) => {\n      this.setState({ visibleOpenUrlDlg: true }, () => {\n        cornerstone.events.addEventListener('cornerstoneimageloadprogress', this.onOpenUrl)\n        this.loadImage(undefined, url)\n      })\n    }\n  \n    hideOpenUrlDlg = () => {\n      this.setState({ visibleOpenUrlDlg: false, progress: null })\n    }\n\n    measurementSave = (measure) => {\n      this.measurements.push(measure) \n    }\n\n    measurementClear = () => {\n      this.measurements.splice(0, this.measurements.length)\n    }\n\n    measurementRemove = (index) => {\n      //console.log('this.measurements: ', this.measurements)\n      this.measurements.splice(index, 1)\n    }    \n\n    getTransferSyntax = () => {\n      const value = this.image.data.string('x00020010')\n      return value + ' [' + uids[value] + ']'\n    }\n\n    getSopClass = () => {\n      const value = this.image.data.string('x00080016')\n      return value + ' [' + uids[value] + ']'\n    }\n\n    getSopInstanceUID = () => {\n      const value = this.image.data.string('x00080018')\n      return value\n    }\n\n    getPixelRepresentation = () => {\n      const value = this.image.data.uint16('x00280103')\n      if (value === undefined) return\n      return value + (value === 0 ? ' (unsigned)' : ' (signed)')\n    }\n\n    getPlanarConfiguration = () => {\n      const value = this.image.data.uint16('x00280006')\n      if (value === undefined) return \n      return value + (value === 0 ? ' (pixel)' : ' (plane)')\n    }\n\n    getDicomViewerElement = () => {\n      return document.getElementsByClassName('cornerstone-enabled-image')\n    }\n   \n    onImageLoaded = (e) => {\n      //console.log('cornerstoneimageloaded: ')\n      this.props.onLoadedImage()\n    }\n\n    // Listen for changes to the viewport so we can update the text overlays in the corner\n    onImageRendered = (e) => {\n      //console.log('cornerstoneimagerendered: ', e.target)\n      //console.log('cornerstoneimagerendered, plane: ', this.mprPlane)\n\n      //const viewport = cornerstone.getViewport(this.dicomImage)\n      const viewport = cornerstone.getViewport(e.target)\n\n      //console.log('viewport: ', viewport)\n      \n      if (this.useIsPreview) {\n        /*if (this.props.series === undefined) return\n        \n        console.log('this.props.index: ', this.props.index)\n        console.log('this.props.series.seriesKeys[this.props.index]: ', this.props.series.seriesKeys[this.props.index])\n        const series = this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index])\n        console.log('serie: ', series)\n\n        document.getElementById(\n          `mrbottomright-${this.props.index}`\n        ).textContent = `${series.length}`*/\n\n      } else if (this.useIsNormal) {\n        document.getElementById(\n          `mrtopleft-${this.props.index}`\n        ).textContent = this.mprIsOrthogonalView() ? `${capitalize(this.mprPlane)}` : `${this.PatientsName}`\n\n        document.getElementById(\n          `mrtopright-${this.props.index}`\n        ).textContent = `${viewport.displayedArea.brhc.x}x${viewport.displayedArea.brhc.y}`\n\n        document.getElementById(\n          `mrbottomleft-${this.props.index}`\n        ).textContent = `WW/WC: ${Math.round(viewport.voi.windowWidth)}/${Math.round(viewport.voi.windowCenter)}`\n\n        document.getElementById(\n          `mrbottomright-${this.props.index}`\n        ).textContent = `Zoom: ${Math.round(viewport.scale.toFixed(2)*100)}%`\n\n        document.getElementById(\n          `mrtopcenter-${this.props.index}`\n        ).textContent = ``\n        document.getElementById(\n          `mrbottomcenter-${this.props.index}`\n        ).textContent = ``    \n        document.getElementById(\n          `mrleftcenter-${this.props.index}`\n        ).textContent = ``      \n        document.getElementById(\n          `mrrightcenter-${this.props.index}`\n        ).textContent = ``  \n\n        if (this.mprPlane === 'sagittal') {\n          document.getElementById(\n            `mrtopcenter-${this.props.index}`\n          ).textContent = `S`\n          document.getElementById(\n            `mrbottomcenter-${this.props.index}`\n          ).textContent = `I`    \n          document.getElementById(\n            `mrleftcenter-${this.props.index}`\n          ).textContent = `A`      \n          document.getElementById(\n            `mrrightcenter-${this.props.index}`\n          ).textContent = `P`  \n\n        } else if (this.mprPlane === 'axial') {\n          document.getElementById(\n            `mrtopcenter-${this.props.index}`\n          ).textContent = `A`\n          document.getElementById(\n            `mrbottomcenter-${this.props.index}`\n          ).textContent = `P`    \n          document.getElementById(\n            `mrleftcenter-${this.props.index}`\n          ).textContent = `R`      \n          document.getElementById(\n            `mrrightcenter-${this.props.index}`\n          ).textContent = `L`    \n\n        } else if (this.mprPlane === 'coronal') {\n          document.getElementById(\n            `mrtopcenter-${this.props.index}`\n          ).textContent = `S`\n          document.getElementById(\n            `mrbottomcenter-${this.props.index}`\n          ).textContent = `I`    \n          document.getElementById(\n            `mrleftcenter-${this.props.index}`\n          ).textContent = `R`      \n          document.getElementById(\n            `mrrightcenter-${this.props.index}`\n          ).textContent = `L`                    \n        }    \n      }\n\n      if (this.isDicom && this.state.visibleCinePlayer && this.numberOfFrames > 1) {\n        document.getElementById(\n          `frameLabel-${this.props.index}`\n        ).textContent = `${this.state.frame} / ${this.numberOfFrames}`\n        if (this.state.inPlay) {\n          let frame = this.state.frame === this.numberOfFrames ? 1 : this.state.frame+1\n          this.setState({frame: frame})\n        }\n      }\n\n      this.props.onRenderedImage(this.props.index)\n    }\n\n    onMeasurementModified = (e) => {\n      //console.log('cornerstonetoolsmeasurementmodified: ', e.detail.measurementData)\n      \n    }\n\n    onMeasurementAdded = (e) => {\n      //console.log('cornerstonetoolsmeasurementadded: ', e.detail.measurementData)\n      if (this.props.tool !== \"Angle\") return\n      const measure = {\n        tool: this.props.tool,\n        note: '',\n        data: e.detail.measurementData\n      }\n      this.measurementSave(measure)\n      this.props.setActiveMeasurements(this.measurements)      \n    }\n\n    onMeasurementCompleted = (e) => {\n      //console.log('cornerstonetoolsmeasurementcompleted: ', e.detail.measurementData)\n      const measure = {\n        tool: this.props.tool,\n        note: '',\n        data: e.detail.measurementData\n      }\n      if (this.props.tool === \"FreehandRoi\") {\n        setTimeout(() => {\n          this.measurementSave(measure)\n          this.props.setActiveMeasurements(this.measurements)\n        }, 500)\n      } else {\n        this.measurementSave(measure)\n        this.props.setActiveMeasurements(this.measurements)\n      }\n    }\n    \n    onErrorOpenImageClose = () => {\n      this.setState({errorOnOpenImage: null})\n    }\n\n    onErrorCorsClose = () => {\n      this.setState({errorOnCors: false})\n    }    \n\n    /*overlayImage = () => {\n      const viewport = cornerstone.getViewport(this.dicomImage)\n\n      if (this.isDicom) document.getElementById(\n        `mrtopleft-${this.props.index}`\n      ).textContent = `${this.PatientsName}`\n\n      document.getElementById(\n        `mrtopright-${this.props.index}`\n      ).textContent = `${viewport.displayedArea.brhc.x}x${viewport.displayedArea.brhc.y}`\n\n      document.getElementById(\n        `mrbottomleft-${this.props.index}`\n      ).textContent = `WW/WC: ${Math.round(viewport.voi.windowWidth)}/${Math.round(viewport.voi.windowCenter)}`\n\n      document.getElementById(\n        `mrbottomright-${this.props.index}`\n      ).textContent = `Zoom: ${Math.round(viewport.scale.toFixed(2)*100)}%`\n\n      if (this.isDicom && this.state.visibleCinePlayer && this.numberOfFrames > 1) {\n        document.getElementById(\n          `frameLabel-${this.props.index}`\n        ).textContent = `${this.state.frame} / ${this.numberOfFrames}`\n        if (this.state.inPlay) {\n          let frame = this.state.frame === this.numberOfFrames ? 1 : this.state.frame+1\n          this.setState({frame: frame})\n        }\n      }\n    }*/\n\n    displayImageFromFiles = (index) => {\n      //console.log('displayImageFromFiles: ', index)\n      //console.log('displayImageFromFiles - use: ', this.props.use)\n\n      const files = this.files === null ? this.props.files : this.files\n\n      //console.log('displayImageFromFiles - this.files: ', this.files)\n\n      const image = files[index].image\n      const imageId = files[index].imageId\n      this.filename = files[index].name\n\n      const element = this.dicomImage\n      element.addEventListener(\"cornerstonenewimage\", this.onNewImage)\n      element.addEventListener(\"cornerstoneimagerendered\", this.onImageRendered)\n      element.addEventListener(\"cornerstonetoolsmeasurementadded\", this.onMeasurementAdded)\n      element.addEventListener(\"cornerstonetoolsmeasurementmodified\", this.onMeasurementModified)\n      element.addEventListener(\"cornerstonetoolsmeasurementcompleted\", this.onMeasurementCompleted)\n      cornerstone.enable(element)\n\n      this.image = image\n\n      this.isDicom = true\n      \n      this.PatientsName = image.data.string('x00100010')\n      this.sopInstanceUid = this.getSopInstanceUID()\n\n      let stack = { currentImageIdIndex: 0, imageIds: \"\" }\n      this.numberOfFrames = image.data.intString('x00280008')\n      if (this.numberOfFrames > 0) {\n        let imageIds = []\t\n        for(var i=0; i < this.numberOfFrames; ++i) {\n          imageIds.push(imageId + \"?frame=\"+i)\n        }\t\n        stack.imageIds = imageIds\n      }\n\n      cornerstone.displayImage(element, image)\n\n      this.mprPlanePosition()\n      \n      this.enableTool()\n\n      if (this.numberOfFrames > 1) {\n        cornerstoneTools.addStackStateManager(element, ['stack', 'playClip']);    \n        cornerstoneTools.addToolState(element, 'stack', stack)\n        this.setState({frame: 1})\n      }\n     \n      // Load the possible measurements from DB and save in the store \n      db.measurement.where('sopinstanceuid').equals(this.sopInstanceUid).each(measure => {\n        //console.log('load measure from db: ', measure)\n        this.measurementSave(measure)\n        cornerstoneTools.addToolState(element, measure.tool, measure.data)\n        this.runTool(measure.tool)\n        cornerstone.updateImage(element)\n        cornerstoneTools.setToolEnabled(measure.tool)\n      }).then(() => {\n        if (this.useIsNormal) {\n          this.props.setActiveMeasurements(this.measurements)\n          this.props.setActiveDcm({image: this.image, element: this.dicomImage, isDicom: this.isDicom})      \n          this.props.setIsOpenStore({index: this.props.index, value: true})         \n        } \n      })   \n      \n    }\n\n    loadImageFromCanvas = (canvas) => {\n      //console.log('loadImageFromCanvas, dcmViewer: ', this.props.index)\n\n      const element = this.dicomImage\n      element.addEventListener(\"cornerstonenewimage\", this.onNewImage)\n      element.addEventListener(\"cornerstoneimagerendered\", this.onImageRendered)\n      element.addEventListener(\"cornerstonetoolsmeasurementadded\", this.onMeasurementAdded)\n      element.addEventListener(\"cornerstonetoolsmeasurementmodified\", this.onMeasurementModified)\n      element.addEventListener(\"cornerstonetoolsmeasurementcompleted\", this.onMeasurementCompleted)\n      cornerstone.enable(element)\n\n      const imageId = cornerstoneFileImageLoader.fileManager.addCanvas(canvas)\n\n      cornerstone.loadImage(imageId).then(image => {\n        //this.t1 = performance.now()\n        //console.log(`performance load image: ${this.t1-this.t0} milliseconds`)\n\n        //console.log('loadImageFromCanvas, image: ', image)\n\n        this.image = image\n\n        this.isDicom = false\n\n        cornerstone.displayImage(element, image)\n\n        this.enableTool()\n\n        //this.props.setActiveDcm({image: this.image, element: this.dicomImage, isDicom: this.isDicom})\n        this.props.setIsOpenStore({index: this.props.index, value: true})\n\n        //this.t2 = performance.now()\n        //console.log(`performance: ${this.t2-this.t1} milliseconds`)\n\n        //this.overlayImage()\n\n      }, (e) => {\n        console.log('error', e)\n        this.setState({errorOnOpenImage: \"This is not a valid canvas.\"})\n      })\n    }\n\n    loadImageFromCustomObject = (columns, rows, pixelData) => {\n      //console.log('loadImageFromCustomObject: ')\n\n      const element = this.dicomImage\n      element.addEventListener(\"cornerstonenewimage\", this.onNewImage)\n      element.addEventListener(\"cornerstoneimagerendered\", this.onImageRendered)\n      element.addEventListener(\"cornerstonetoolsmeasurementadded\", this.onMeasurementAdded)\n      element.addEventListener(\"cornerstonetoolsmeasurementmodified\", this.onMeasurementModified)\n      element.addEventListener(\"cornerstonetoolsmeasurementcompleted\", this.onMeasurementCompleted)\n      cornerstone.enable(element)\n      \n      let customObj = {\n        rows: rows,\n        columns: columns,\n        pixelData: pixelData,\n        image: this.originImage,\n      }\n\n      const imageId = cornerstoneFileImageLoader.fileManager.addCustom(customObj)\n\n      cornerstone.loadImage(imageId).then(image => {\n        //console.log('loadImageFromCustomObject, image: ', image)\n\n        this.image = image\n\n        this.isDicom = true\n\n        cornerstone.displayImage(element, image)\n\n        //this.enableTool()\n\n        this.props.setIsOpenStore({index: this.props.index, value: true})\n\n      }, (e) => {\n        console.log('error', e)\n        this.setState({errorOnOpenImage: \"This is not a valid canvas.\"})\n      })\n    }\n\n    loadImage = (localfile, url=undefined, fsItem=undefined) => {\n      //console.log('loadImage, localfile: ', localfile)\n      //console.log('loadImage, fsItem: ', fsItem)\n      //console.log('loadImage, url: ', url)\n\n      if (localfile === undefined && url === undefined && fsItem === undefined) return\n      \n      if (fsItem !== undefined) {\n        this.fsItem = fsItem\n      } else if (localfile !== undefined) {\n        this.localfile = localfile\n      } else {\n        this.localurl = url\n      }\n \n      const element = this.dicomImage\n\n      element.addEventListener(\"cornerstonenewimage\", this.onNewImage)\n      element.addEventListener(\"cornerstoneimagerendered\", this.onImageRendered)\n      element.addEventListener(\"cornerstonetoolsmeasurementadded\", this.onMeasurementAdded)\n      element.addEventListener(\"cornerstonetoolsmeasurementmodified\", this.onMeasurementModified)\n      element.addEventListener(\"cornerstonetoolsmeasurementcompleted\", this.onMeasurementCompleted)\n\n      let imageId = undefined\n\n      cornerstone.enable(element)\n\n      let size = 0\n\n      if (localfile === undefined && isUrlImage(url)) { // check if it's a simple image [jpeg or png] from url\n        //console.log('image: ', file)\n        cornerstone.loadImage(url).then(image => {\n          //console.log('loadImage, image from url: ', image)\n\n          this.hideOpenUrlDlg()\n\n          this.image = image\n\n          this.isDicom = false\n\n          cornerstone.displayImage(element, image)\n          \n          this.enableTool()\n\n          this.props.setActiveDcm({image: this.image, element: this.dicomImage, isDicom: this.isDicom})\n          this.props.isOpenStore(true)\n\n        }, (e) => {\n          console.log('error', e)\n          this.setState({errorOnOpenImage: \"This is not a valid JPG or PNG file.\"})\n        })\n\n      } else if ((localfile !== undefined && isFileImage(localfile)) || (fsItem !== undefined && isFsFileImage(fsItem))) { // otherwise try to open as local image file (JPEG, PNG) \n        if (fsItem !== undefined) {\n          imageId = cornerstoneFileImageLoader.fileManager.addBuffer(fsItem.data)\n        } else {\n          imageId = cornerstoneFileImageLoader.fileManager.add(localfile)\n        }\n        cornerstone.loadImage(imageId).then(image => {\n          console.log('loadImage, image from local: ', image)\n\n          this.image = image\n          this.isDicom = false\n          this.PatientsName = ''\n\n          cornerstone.displayImage(element, image)\n          \n          this.enableTool()\n\n          this.props.setActiveDcm({image: this.image, element: this.dicomImage, isDicom: this.isDicom})\n          //this.props.isOpenStore(true)\n          this.props.setIsOpenStore({index: this.props.index, value: true})\n\n        }, (e) => {\n          console.log('error', e)\n          this.setState({errorOnOpenImage: \"This is not a valid JPG or PNG file.\"})\n        })\n\n      } else { // otherwise try to open as Dicom file\n\n        if (fsItem !== undefined) {\n          imageId = cornerstoneWADOImageLoader.wadouri.fileManager.addBuffer(fsItem.data)\n          this.filename = fsItem.name\n          size = fsItem.size\n        } else if (localfile !== undefined) {\n          imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(localfile)\n          this.filename = localfile.name\n          size = localfile.size\n        } else { // it's a web dicom image\n          imageId = \"wadouri:\"+url\n        }\n  \n        //console.log('loadImage, imageId: ', imageId)\n\n        cornerstone.loadAndCacheImage(imageId).then(image => {\n          //console.log('loadImage, image: ', image)\n          //let pixelDataElement = image.data.elements.x7fe00010\n          //console.log('loadImage, pixelDataElement: ', pixelDataElement)\n          //console.log('loadImage, getPixelData: ', image.getPixelData())\n          \n          this.hideOpenUrlDlg()\n\n          this.image = image\n\n          this.isDicom = true\n\n          this.PatientsName = image.data.string('x00100010')\n          this.sopInstanceUid = this.getSopInstanceUID()\n\n          let stack = { currentImageIdIndex: 0, imageIds: \"\" }\n          this.numberOfFrames = image.data.intString('x00280008')\n          if (this.numberOfFrames > 0) {\n            let imageIds = []\t\n            for(var i=0; i < this.numberOfFrames; ++i) {\n              imageIds.push(imageId + \"?frame=\"+i)\n            }\t\n            stack.imageIds = imageIds\n          }\n\n          cornerstone.displayImage(element, image)\n          //cornerstoneTools.mouseInput.enable(element);\n          //cornerstoneTools.mouseWheelInput.enable(element);\n\n          this.enableTool()\n\n          if (this.numberOfFrames > 1) {\n            cornerstoneTools.addStackStateManager(element, ['stack', 'playClip']);    \n            cornerstoneTools.addToolState(element, 'stack', stack)\n            //cornerstoneTools.setToolActive('StackScrollMouseWheel', { })\n            this.setState({frame: 1})\n          }\n  \n          // Load the possible measurements from DB and save in the store \n          db.measurement.where('sopinstanceuid').equals(this.sopInstanceUid).each(measure => {\n            //console.log('load measure from db: ', measure)\n            //this.props.measurementStore(measure)\n            this.measurementSave(measure)\n            cornerstoneTools.addToolState(element, measure.tool, measure.data)\n            this.runTool(measure.tool)\n            cornerstone.updateImage(element)\n            cornerstoneTools.setToolEnabled(measure.tool)\n          }).then(() => {\n            //console.log('this.measurements: ', this.measurements)\n            this.props.setActiveMeasurements(this.measurements)\n            this.props.setActiveDcm({name: this.filename, size: size, image: this.image, element: this.dicomImage, isDicom: this.isDicom})\n            this.props.setIsOpenStore({index: this.props.index, value: true})            \n          })       \n\n        }, (e) => {\n          console.log('error', e)   \n          this.hideOpenUrlDlg()      \n          //console.log('toString: ', e.error.toString())\n          const error = e.error.toString()\n          if (error === '[object XMLHttpRequest]') {\n            this.setState({errorOnCors: true})\n          } else {\n            const pos = error.indexOf(\":\")\n            this.setState({errorOnOpenImage: pos < 0 ? e.error : error.substring(pos+1)})            \n          } \n        })\n      }\n    }\n  \n    enableTool = (toolName, mouseButtonNumber) => {\n      // Enable all tools we want to use with this element\n      const WwwcTool = cornerstoneTools.WwwcTool\n      const LengthTool = cornerstoneTools['LengthTool']\n      const PanTool = cornerstoneTools.PanTool\n      const ZoomTouchPinchTool = cornerstoneTools.ZoomTouchPinchTool\n      const ZoomTool = cornerstoneTools.ZoomTool\n      const ProbeTool = cornerstoneTools.ProbeTool\n      const EllipticalRoiTool = cornerstoneTools.EllipticalRoiTool\n      const RectangleRoiTool = cornerstoneTools.RectangleRoiTool\n      const FreehandRoiTool = cornerstoneTools.FreehandRoiTool\n      const AngleTool = cornerstoneTools.AngleTool\n      const MagnifyTool = cornerstoneTools.MagnifyTool\n      const StackScrollMouseWheelTool = cornerstoneTools.StackScrollMouseWheelTool\n\n      cornerstoneTools.addTool(MagnifyTool)\n      cornerstoneTools.addTool(AngleTool)    \n      cornerstoneTools.addTool(WwwcTool)\n      cornerstoneTools.addTool(LengthTool)\n      cornerstoneTools.addTool(PanTool)\n      cornerstoneTools.addTool(ZoomTouchPinchTool)\n      cornerstoneTools.addTool(ZoomTool)\n      cornerstoneTools.addTool(ProbeTool)\n      cornerstoneTools.addTool(EllipticalRoiTool)\n      cornerstoneTools.addTool(RectangleRoiTool)\n      cornerstoneTools.addTool(FreehandRoiTool)\n      cornerstoneTools.addTool(StackScrollMouseWheelTool)      \n    }\n  \n    // helper function used by the tool button handlers to disable the active tool\n    // before making a new tool active\n    disableAllTools = () => {\n      cornerstoneTools.setToolEnabled('Length')\n      cornerstoneTools.setToolEnabled('Pan')\n      cornerstoneTools.setToolEnabled('Magnify')\n      cornerstoneTools.setToolEnabled('Angle')\n      cornerstoneTools.setToolEnabled('RectangleRoi')\n      cornerstoneTools.setToolEnabled('Wwwc')\n      cornerstoneTools.setToolEnabled('ZoomTouchPinch')\n      cornerstoneTools.setToolEnabled('Probe')\n      cornerstoneTools.setToolEnabled('EllipticalRoi')\n      cornerstoneTools.setToolEnabled('FreehandRoi')\n      cornerstoneTools.setToolEnabled('StackScrollMouseWheel')\n    }\n  \n    runTool = (toolName, opt) => {\n      //console.log(`runTool: ${toolName}, ${opt}`)\n      // this.disableAllTools()\n      if (this.state.inPlay) {\n        this.runCinePlayer('pause')\n      }\n      switch (toolName) {\n        case 'setfiles': {\n          this.files = opt\n          this.sliceMax = this.files.length\n          break   \n        }        \n        case 'openimage': {\n          cornerstone.disable(this.dicomImage)\n          this.displayImageFromFiles(opt)\n          break   \n        }\n        case 'openLocalFs': {\n          cornerstone.disable(this.dicomImage)\n          this.loadImage(opt)\n          break   \n        } \n        case 'openSandboxFs': {\n          cornerstone.disable(this.dicomImage)\n          //this.setState({ file: opt })\n          this.loadImage(undefined, undefined, opt)\n          break   \n        }         \n        case 'openurl': {\n          this.showOpenUrlDlg(opt)\n          break                 \n        }\n        case 'clear': {\n          this.setState({ visibleCinePlayer: false })\n          this.mprPlane = ''\n          //this.props.clearingStore()\n          this.files = null\n          this.props.setIsOpenStore({index: this.props.index, value: false}) \n          cornerstone.disable(this.dicomImage)\n          break\n        }  \n        case 'notool': {\n          this.disableAllTools()\n\n          //const element = this.dicomImage\n\n          //cornerstoneTools.clearToolState(element, 'Length')\n          \n          //const toolStateManager = cornerstoneTools.getElementToolStateManager(element)\n          //console.log('toolStateManager.toolState: ', toolStateManager.toolState)\n          /*\n          const toolState = toolStateManager.toolState\n          // const allTools = Object.keys(toolState).map(key => toolState[key])\n          let key = Object.keys(toolState)[0]\n          let allTools = toolState[key]\n          //console.log('allTools: ', allTools)\n\n          for (let [tool, data] of Object.entries(allTools)) {\n            //console.log(`${tool}: `, data)\n            let key = Object.keys(data)[0]\n            let tools = data[key]\n            //console.log('tools: ', tools)\n            tools.forEach(item => {\n              //console.log('tool: ', tool)\n              //console.log(item)\n              const measure = {\n                tool: tool,\n                note: '',\n                data: item\n              }\n              console.log('measure: ', measure)\n              this.props.measurementStore(measure)\n            })\n          }\n          */\n          //const toolState = toolStateManager.get(element, 'Length')\n          //console.log('toolState: ', toolState)\n\n          /*\n          const measurementData = {\n            visible: true,\n            active: true,\n            invalidated: true,\n            handles: {\n                start: {\n                    x: 100,\n                    y: 100,\n                    highlight: true,\n                    active: false\n                },\n                end: {\n                    x: 200,\n                    y: 200,\n                    highlight: true,\n                    active: true\n                },\n                textBox: {\n                    active: false,\n                    hasMoved: false,\n                    movesIndependently: false,\n                    drawnIndependently: true,\n                    allowedOutsideImage: true,\n                    hasBoundingBox: true\n                }\n              }\n          }\n          cornerstoneTools.addToolState(element, 'RectangleRoi', measurementData)    \n          cornerstoneTools.setToolActive('RectangleRoi', { mouseButtonMask: 1 })\n          */  \n          //cornerstone.updateImage(element)   \n          break\n        }\n        case 'Wwwc': {\n          cornerstoneTools.setToolActive('Wwwc', { mouseButtonMask: 1 })\n          break\n        }  \n        case 'Pan': {\n          cornerstoneTools.setToolActive('Pan', { mouseButtonMask: 1 })\n          break   \n        }  \n        case 'Zoom': {\n          cornerstoneTools.setToolActive(isMobile ? 'ZoomTouchPinch' : 'Zoom', { mouseButtonMask: 1 })\n          break\n        }\n        case 'Length': {\n          cornerstoneTools.setToolActive('Length', isMobile ? { isTouchActive: true } : { mouseButtonMask: 1 })\n          break  \n        }\n        case 'Probe': {\n            cornerstoneTools.setToolActive('Probe', { mouseButtonMask: 1 })\n          break\n        }\n        case 'EllipticalRoi': {\n          cornerstoneTools.setToolActive('EllipticalRoi', { mouseButtonMask: 1 })\n          break   \n        }\n        case 'RectangleRoi': {\n          cornerstoneTools.setToolActive('RectangleRoi', { mouseButtonMask: 1 })\n          break  \n        }\n        case 'Angle': {\n          cornerstoneTools.setToolActive('Angle', { mouseButtonMask: 1 })\n          break \n        }\n        case 'Magnify': {\n          cornerstoneTools.setToolActive('Magnify', { mouseButtonMask: 1 })\n          break  \n        }\n        case 'FreehandRoi': {\n          cornerstoneTools.setToolActive('FreehandRoi', { mouseButtonMask: 1 })\n          break \n        }\n        case 'Invert': {\n          const element = this.dicomImage\n          const viewport = cornerstone.getViewport(element)\n          viewport.invert = !viewport.invert\n          cornerstone.setViewport(element, viewport)\n          break \n        }         \n        case 'saveas': {\n            let type = localStorage.getItem(SETTINGS_SAVEAS)\n            if (getSettingsSaveInto() === 'local') {\n              // cornerstoneTools.SaveAs(this.dicomImage, `${this.filename}.${type}`, `image/${type}`)   \n              const element = this.dicomImage\n              const viewport = cornerstone.getViewport(element)\n              const canvas = document.getElementsByClassName('cornerstone-canvas')[this.props.activeDcmIndex]\n              const zoom = viewport.scale.toFixed(2)\n              const cols = this.image.columns * zoom\n              const rows = this.image.rows * zoom\n\n              let myCanvas = document.createElement('canvas')\n              myCanvas = this.cropCanvas(canvas, \n                Math.round(canvas.width / 2 - cols / 2), \n                Math.round(canvas.height / 2 - rows / 2), \n                cols, rows)   \n\n              let a = document.createElement(\"a\")\n              a.href = myCanvas.toDataURL(`image/${type}`)\n              a.download = `${this.filename}.${type}`    \n              document.body.appendChild(a) // Required for this to work in FireFox\n              a.click()           \n\n            } else { // store image into sandbox file system\n              const element = this.dicomImage\n              const viewport = cornerstone.getViewport(element)\n              const canvas = document.getElementsByClassName('cornerstone-canvas')[this.props.activeDcmIndex]\n              const zoom = viewport.scale.toFixed(2)\n              const cols = this.image.columns * zoom\n              const rows = this.image.rows * zoom\n\n              let myCanvas = document.createElement('canvas')\n              myCanvas = this.cropCanvas(canvas, \n                Math.round(canvas.width / 2 - cols / 2), \n                Math.round(canvas.height / 2 - rows / 2), \n                cols, rows)           \n              \n              blobUtil.canvasToBlob(myCanvas, `image/${type}`).then(blob => {\n                blobUtil.blobToArrayBuffer(blob).then(arrayBuffer => {\n                  const name = `${getFileName(this.filename)}-MPR-${this.mprPlane}`     \n                  let newName = name\n                  let counter = 1\n                  let done = false             \n                  do {\n                      let filename = `${newName}.${type}`\n                      const checkName = this.props.fsCurrentList.find(e => e.name === filename)\n                      if (checkName === undefined) {\n                          fs.transaction('rw', fs.files, async () => {\n                              await fs.files.add({\n                                  parent: this.props.fsCurrentDir,\n                                  name: filename,\n                                  type: type,\n                                  size: arrayBuffer.byteLength,\n                                  data: arrayBuffer\n                              })\n                          }).then(() => {\n                            this.props.makeFsRefresh()\n                          })\n                          done = true\n                      } else {\n                          newName = `${name} - ${counter}`\n                          counter++\n                      }\n                  } while (!done)\n                })\n              })\n            }  \n          break\n        }\n        case 'cine': {\n          this.setState({ visibleCinePlayer: !this.state.visibleCinePlayer })\n          break\n        }\n        case 'reset': {\n          this.reset()\n          break\n        }\n        case 'removetool': {\n          //console.log('removetool index: ', opt)\n          const element = this.dicomImage\n          cornerstoneTools.removeToolState(element, this.measurements[opt].tool, this.measurements[opt].data)\n          cornerstone.updateImage(element)\n          //this.props.measurementRemoveStore(opt)\n          this.measurementRemove(opt)\n          this.props.setActiveMeasurements(this.measurements)\n          break\n        }  \n        case 'removetools': {   \n          const element = this.dicomImage\n          // for each measurement remove it \n          this.measurements.forEach(measure => {\n            cornerstoneTools.clearToolState(element, measure.tool)         \n          })\n          cornerstone.updateImage(element)\n          this.measurementClear()\n          // also remove all measurements from db\n          db.measurement.where('sopinstanceuid').equals(this.sopInstanceUid).delete()\n          this.props.setActiveMeasurements(this.measurements)\n          break\n        }  \n        case 'savetools': {\n          // first, remove eventually previous measurements from db\n          db.measurement.where('sopinstanceuid').equals(this.sopInstanceUid).delete()\n          // then save all the current measurements\n          this.measurements.forEach(measure => {\n            try {\n              db.measurement.add({\n                sopinstanceuid: this.sopInstanceUid, \n                tool: measure.tool,\n                note: measure.note,\n                data: measure.data\n              })\n            } catch(error) {\n              console.error(error)\n            }                       \n          })\n          break\n        }\n        default: {\n          break\n        }\n      }\n    } \n\n    cropCanvas = (canvas, x, y, width, height) => {\n      //console.log(`canvas: ${canvas.width}, ${canvas.height}`)\n      //console.log(`x, y: ${x}, ${y}`)\n      //console.log(`width, height: ${width}, ${height}`)\n\n      // create a temp canvas\n      const newCanvas = document.createElement('canvas')\n      // set its dimensions\n      newCanvas.width = width\n      newCanvas.height = height\n      // draw the canvas in the new resized temp canvas \n      newCanvas.getContext('2d').drawImage(canvas, x, y, width, height, 0, 0, width, height)\n      return newCanvas\n    }\n\n    changeTool = (toolName, value) => {\n      //console.log('change tool, value: ', toolName, value)\n\n      switch (toolName) {\n        case 'Wwwc':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Wwwc', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Wwwc')\n          }\n          break  \n        case 'Pan':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Pan', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Pan')\n          }\n          break    \n        case 'Zoom':\n          if (value === 1) {\n            cornerstoneTools.setToolActive(isMobile ? 'ZoomTouchPinch' : 'Zoom', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive(isMobile ? 'ZoomTouchPinch' : 'Zoom')\n          }\n          break                             \n        case 'Length':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Length', isMobile ? { isTouchActive: true } : { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Length')\n          }\n          break   \n        case 'Probe':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Probe', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Probe')\n          }\n          break        \n        case 'Angle':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Angle', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Angle')\n          }          \n          break   \n        case 'Magnify':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Magnify', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Magnify')\n          }          \n          break        \n        case 'EllipticalRoi':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('EllipticalRoi', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('EllipticalRoi')\n          }\n          break   \n        case 'RectangleRoi':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('RectangleRoi', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('RectangleRoi')\n          }\n          break\n        case 'FreehandRoi':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('FreehandRoi', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('FreehandRoi')\n          }\n          break     \n        default:\n            break\n        }  \n    }\n\n    runCinePlayer = (cmdName) => {\n      //console.log('this.state.frame: ', this.state.frame)\n      const element = this.dicomImage\n      switch (cmdName) {\n        case 'firstframe': {\n          let frame = 1\n          this.setState({frame: frame})\n          scrollToIndex(element, 0)\n          break\n        }\n        case 'previousframe': {\n          if (this.state.frame > 1) {\n            let frame = this.state.frame-1\n            this.setState({frame: frame})     \n            scrollToIndex(element, frame-1)       \n          }\n          break\n        }\n        case 'play': {\n          cornerstoneTools.playClip(element, 30)\n          this.setState({inPlay: true})\n          break\n        }\n        case 'pause': {\n            cornerstoneTools.stopClip(element)\n            this.setState({inPlay: false})\n          break\n        }\n        case 'nextframe': {\n          if (this.state.frame < this.numberOfFrames) {\n            let frame = this.state.frame+1\n            this.setState({frame: frame})            \n            scrollToIndex(element, frame-1)\n          }\n          break  \n        }\n        case 'lastframe': {\n          let frame = this.numberOfFrames\n          this.setState({frame: frame})   \n          scrollToIndex(element, frame-1)      \n          break    \n        }                       \n        default:\n          break\n      }\n    }\n\n    reset = () => {\n      const element = this.dicomImage\n      const defaultViewport = cornerstone.getDefaultViewportForImage(element, this.image)\n      let viewport = cornerstone.getViewport(element)\n      viewport.voi.windowWidth = defaultViewport.voi.windowWidth\n      viewport.voi.windowCenter = defaultViewport.voi.windowCenter\n      viewport.invert = false\n      cornerstone.setViewport(element, viewport)\n    }\n\n    // -------------------------------------------------------------------------------------------- MPR\n    //#region MPR\n\n    mprPlanePosition = () => {\n      try {\n        if (!this.isDicom) return this.mprPlane\n        //console.log('DicomViewer - mprPlanePosition - files: ', this.files)\n        //console.log('DicomViewer - mprPlanePosition - image: ', this.image)\n        const image = this.files[0].image\n        const imageOrientation = image.data.string('x00200037').split('\\\\')\n        let v = new Array(6).fill(0)\n        v[0] = parseFloat(imageOrientation[0]) // the x direction cosines of the first row X\n        v[1] = parseFloat(imageOrientation[1]) // the y direction cosines of the first row X\n        v[2] = parseFloat(imageOrientation[2]) // the z direction cosines of the first row X\n        v[3] = parseFloat(imageOrientation[3]) // the x direction cosines of the first column Y\n        v[4] = parseFloat(imageOrientation[4]) // the y direction cosines of the first column Y\n        v[5] = parseFloat(imageOrientation[5]) // the z direction cosines of the first column Y    \n        v = v.map((x) => Math.round(x))\n        let p = [v[1]*v[5] - v[2]*v[4], v[2]*v[3] - v[0]*v[5], v[0]*v[4] - v[1]*v[3]] // cross product of X x Y\n        p = p.map((x) => Math.abs(x))\n        if (p[0] === 1) {\n          this.mprPlane = 'sagittal'\n        } else if (p[1] === 1) {\n          this.mprPlane = 'coronal'\n        } else if (p[2] === 1) {\n          this.mprPlane = 'axial'\n        }\n      } catch(error) { // it's not possible to build MPR\n        this.mprPlane = ''\n      } \n      //console.log('DicomViewer - mprPlanePosition - mprPlane: ', this.mprPlane)\n      return this.mprPlane \n    }\n\n    transpose = (matrix) => {\n      return Object.keys(matrix[0]).map(colNumber => matrix.map(rowNumber => rowNumber[colNumber]));\n    }\n\n    mprRenderYZPlane = (filename, origin, x, mprData) => {\n      if (this.volume === null) return\n      \n      const files = this.files === null ? this.props.files : this.files\n\n      this.sliceIndex = x\n      \n      this.filename = filename\n      cornerstone.disable(this.dicomImage)\n      //console.log(`mprRenderYZPlane, origin: ${origin}, x: ${x}`)\n      //console.log('mprRenderYZPlane, volume: ', this.volume)\n\n      if (origin === 'sagittal') \n        this.mprPlane = 'coronal'\n      else if (origin === 'axial') \n        this.mprPlane = 'sagittal'\n      else\n        this.mprPlane = 'sagittal'\n\n      this.xSize = files[0].columns\n      this.ySize = files[0].rows \n      this.zSize = mprData.zDim\n\n      const i = Math.round(x / this.xSize * files.length)\n      this.originImage = files[i].image\n\n      if (origin === 'sagittal') {\n        let xoffset = Math.floor(this.xSize / 2) - Math.floor(this.zSize / 2)\n        let plane = new Int16Array(this.xSize * this.ySize)\n        for (let y = 0; y < this.ySize; y++) \n          for (let z = 0; z < this.zSize; z++) \n            plane[z + this.ySize * y + xoffset] = this.volume[z][x + this.ySize * y]        \n        this.loadImageFromCustomObject(this.xSize, this.ySize, plane)\n\n      } else if (origin === 'coronal') {\n        let xoffset = Math.floor(this.xSize / 2) - Math.floor(this.zSize / 2)\n        let plane = new Int16Array(this.xSize * this.ySize)\n        for (let y = 0; y < this.ySize; y++) \n          for (let z = 0; z < this.zSize; z++) \n            plane[z + this.ySize * y + xoffset] = this.volume[z][x + this.ySize * y]        \n        this.loadImageFromCustomObject(this.xSize, this.ySize, plane)\n\n      } else { // axial\n        const yzPlane = this.mprBuildYZPlane(x)\n        this.loadImageFromCustomObject(this.ySize, this.zSize, yzPlane)\n      }\n    }\n\n    mprBuildYZPlane = (x) => {\n      //console.log(`mprBuildYZPlane, ySize: ${this.ySize}, zSize: ${this.zSize} `)\n      let plane = new Int16Array(this.ySize * this.zSize)\n      for (var y = 0; y < this.ySize; y++) \n        for (var z = 0; z < this.zSize; z++) \n          plane[y + this.ySize * z] = this.volume[z][x + this.ySize * y]\n      //console.log('mprBuildYZPlane, plane: ', plane)\n      return plane\n    }\n\n    mprRenderXZPlane = (filename, origin, y, mprData) => {\n      if (this.volume === null) return\n\n      const files = this.files === null ? this.props.files : this.files\n\n      this.sliceIndex = y\n\n      this.filename = filename\n      cornerstone.disable(this.dicomImage)\n      //console.log(`mprRenderXZPlane, origin: ${origin}, y: ${y}`)\n      //console.log('mprRenderXZPlane, volume: ', this.volume)\n\n      if (origin === 'sagittal') \n        this.mprPlane = 'axial'\n      else if (origin === 'axial') \n        this.mprPlane = 'coronal'\n      else\n        this.mprPlane = 'axial'\n\n      this.xSize = files[0].columns\n      this.ySize = files[0].rows\n      this.zSize = mprData.zDim\n\n      const i = Math.trunc(y / this.ySize * files.length)\n      this.originImage = files[i].image\n\n      if (origin === 'sagittal') {\n        let xoffset = Math.floor(this.xSize / 2) - Math.floor(this.zSize / 2)\n        let plane = new Int16Array(this.xSize * this.ySize)\n        for (let x = 0; x < this.xSize; x++) \n          for (let z = 0; z < this.zSize; z++)\n            plane[z + this.xSize * x + xoffset] = this.volume[z][x + this.xSize * y] \n        this.loadImageFromCustomObject(this.xSize, this.ySize, plane)\n\n      } else {\n        const xzPlane = this.mprBuildXZPlane(y)\n        this.loadImageFromCustomObject(this.xSize, this.zSize, xzPlane)\n      }\n    }\n  \n    mprBuildXZPlane = (y) => {\n      //console.log(`mprBuildXZPlane, xSize: ${this.xSize}, zSize: ${this.zSize} `)\n      let plane = new Int16Array(this.xSize * this.zSize)\n      for (let x = 0; x < this.xSize; x++) \n        for (let z = 0; z < this.zSize; z++)\n          plane[x + this.xSize * z] = this.volume[z][x + this.xSize * y] \n      //console.log('mprBuildXZPlane, plane: ', plane)    \n      return plane\n    }  \n\n    mprIsOrthogonalView = () => {\n      //console.log('mprIsOrthogonalView: ', this.mprPlane)\n      return (this.mprPlane !== '' && this.props.layout[0] === 1 && this.props.layout[1] === 3)\n    }\n\n    //#endregion\n\n\n    dicomImageRef = el => {\n      this.dicomImage = el\n    }\n\n    onImageClick = () => {\n      //console.log('onImageClick: ')\n    }\n\n    getSeriesLength = () => {\n      if (this.props.series === undefined || this.props.series === null || this.props.use !== 'preview') return     \n      return this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index]).length\n    }\n\n    getSeriesDescription = () => {\n      if (this.props.series === undefined || this.props.series === null || !this.useIsPreview) return\n      if (this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index])[this.props.index] === undefined) return\n      return this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index])[this.props.index].series.seriesDescription\n    }\n  \n    isLocalizer = () => {\n      return isLocalizer(this.image)\n    }\n\n    render() {\n      \n      //console.log('DicomViewer render: ', this.props.index)\n\n      //this.props.visible ? document.body.style = 'background: #000000;' : document.body.style = 'background: $md-grey-700;'\n\n      const visible = this.props.visible ? 'visible' : 'hidden'\n      const isOpen = this.useIsPreview ? true : this.props.isOpen[this.props.index]\n      const visibleOpenUrlDlg = this.state.visibleOpenUrlDlg\n      const errorOnOpenImage = this.state.errorOnOpenImage\n      const progress = this.state.progress\n\n      const styleContainer = {\n        width: '100%', \n        height: '100%', \n        border: (this.useIsPreview && this.props.explorerActiveSeriesIndex === this.props.index) || (this.useIsNormal && this.props.activeDcmIndex === this.props.index && (this.props.layout[0] > 1 || this.props.layout[1] > 1)) ? 'solid 1px #AAAAAA' : null,\n        position: 'relative',\n      }\n\n      const styleDicomImage = {\n        width: '100%', \n        height: '100%', \n        position: 'relative',\n      }\n\n      const overlay = getSettingsOverlay() && this.props.overlay\n\n      return ( \n        <div className=\"container\" style={styleContainer} >\n\n          {visibleOpenUrlDlg ? <OpenUrlDlg progress={progress} onClose={this.hideOpenUrlDlg} /> : null}\n\n          <Dialog\n            open={errorOnOpenImage !== null}\n            onClose={this.onErrorOpenImageClose}\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Error on opening image\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                {this.state.errorOnOpenImage}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.onErrorOpenImageClose} autoFocus>\n                Ok\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={this.state.errorOnCors}\n            onClose={this.onErrorCorsClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Error on loading image\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Typography gutterBottom>\n                  CORS or Cross Origin Resource Sharing is a browser security policy \n                  that prevents javascript from loading data from a server with a different base URL \n                  than the server that served up the javascript file. \n                </Typography> \n                <Typography gutterBottom>\n                  See the &nbsp; \n                  <Link href=\"http://enable-cors.org/\" target='_blank' color='textPrimary'>\n                    Enable CORS site\n                  </Link>\n                  &nbsp; for information about CORS.                     \n                </Typography>                                \n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.onErrorCorsClose} autoFocus>\n                Ok\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <div\n            style={{\n              width: '100%', \n              height: '100%', \n              position: \"relative\",\n              color:  this.useIsPreview ? '#AAAAAA' : '#FFFFFF',\n              fontSize: this.useIsPreview ? '0.80em' : '1.00em',\n              textShadow: '1px 1px #000000',\n              visibility: visible\n            }}\n            onContextMenu={() => false}\n            className=\"cornerstone-enabled-image\"\n          >\n            <div \n              ref={this.dicomImageRef} style={styleDicomImage}\n            >\n            </div>\n\n            <div\n              id={`mrtopleft-${this.props.index}`}\n              style={{ position: \"absolute\", top: 0, left: 3, display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n             \n            </div>\n            <div\n              id={`mrtopright-${this.props.index}`}\n              style={{ position: \"absolute\", top: 0, right: 3, display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>\n            <div\n              id={`mrbottomright-${this.props.index}`}\n              style={{ position: \"absolute\", bottom: 0, right: 3, display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              {this.getSeriesLength()}\n            </div>\n            <div\n              id={`mrbottomleft-${this.props.index}`}\n              style={{ position: \"absolute\", bottom: 0, left: 3, display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              {this.getSeriesDescription()}\n            </div>   \n\n            <div\n              id={`mrtopcenter-${this.props.index}`}\n              style={{ position: \"absolute\", top: 0, width: '60px', left: '50%', marginLeft: '0px', display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>\n\n            <div\n              id={`mrleftcenter-${this.props.index}`}\n              style={{ position: \"absolute\", top: '50%', width: '30px', left: 3, marginLeft: '0px', display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>    \n\n            <div\n              id={`mrrightcenter-${this.props.index}`}\n              style={{ position: \"absolute\", top: '50%', width: '30px', right: 3, marginRight: '-20px', display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>                \n\n            <div\n              id={`mrbottomcenter-${this.props.index}`}\n              style={{ position: \"absolute\", bottom: 0, width: '60px', left: '50%', marginLeft: '0px', display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>\n\n            { this.state.visibleCinePlayer && this.numberOfFrames > 1 ? (\n              <div style={{position:\"absolute\", width:'100%', bottom:0, textAlign:'center'}}>\n                <div style={{margin:'0 auto', width:'240px', backgroundColor:'rgba(136, 136, 136, 0.5)'}}>\n                  <CinePlayer runCinePlayer={this.runCinePlayer} inPlay={this.state.inPlay} />  \n                  <div \n                    id={`frameLabel-${this.props.index}`}\n                    style={{ width:230, margin:'0 auto', marginTop:-10, textAlign:\"center\" }}\n                  >\n                    {this.state.frame} / {this.numberOfFrames}\n                  </div> \n                </div>               \n              </div> \n              ) : null\n            }  \n            {/*<div style={{position:\"absolute\", width:'100%', height:'100%', top:0, left:0}}></div>*/}\n          </div>\n        </div>\n      )\n    }\n  }\n  \nconst mapStateToProps = (state) => {\n  return {\n    files: state.files,\n    series: state.series,\n    url: state.url,\n    isOpen: state.isOpen,\n    tool: state.tool,\n    activeDcmIndex: state.activeDcmIndex,\n    activeDcm: state.activeDcm,\n    explorerActiveSeriesIndex: state.explorerActiveSeriesIndex,\n    measurements: state.measurements,\n    layout: state.layout,\n    fsCurrentDir: state.fsCurrentDir,\n    fsCurrentList: state.fsCurrentList,\n    volume: state.volume,\n    //lut: state.lut,\n    //sandboxedFile: state.sandboxedFile,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearingStore: () => dispatch(clearStore()),\n    setIsOpenStore: (value) => dispatch(dcmIsOpen(value)),\n    toolStore: (tool) => dispatch(dcmTool(tool)),\n    setActiveDcm: (dcm) => dispatch(activeDcm(dcm)),\n    setActiveMeasurements: (measurements) => dispatch(activeMeasurements(measurements)),\n    makeFsRefresh: (dcm) => dispatch(doFsRefresh()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DicomViewer)\n","import React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Icon from '@mdi/react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { SETTINGS_DCMHEADER } from '../constants/settings'\r\nimport { toCsv } from '../functions'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n    mdiContentSaveOutline\r\n} from '@mdi/js'\r\n\r\nconst DicomHeader = ({dcmViewer, classes, color}) => {\r\n    let header = []\r\n    header.push({name: 'Transfer Syntax', value: dcmViewer.getTransferSyntax()})\r\n    header.push({name: 'SOP Class', value: dcmViewer.getSopClass()})\r\n    header.push({name: 'SOP Instance UID', value: dcmViewer.getSopInstanceUID()})\r\n    header.push({name: 'Modality', value: dcmViewer.image.data.string('x00080060')})\r\n    header.push({name: 'Manufacturer', value: dcmViewer.image.data.string('x00080070')})\r\n    header.push({name: 'Study Description', value: dcmViewer.image.data.string('x00081030')})\r\n    header.push({name: 'Series Description', value: dcmViewer.image.data.string('x0008103E')})\r\n    header.push({name: 'Patient Name', value: dcmViewer.image.data.string('x00100010')})\r\n    header.push({name: 'Frame Rate', value: dcmViewer.image.data.string('x00082144')})\r\n\r\n    header.push({name: 'MR Acquisition Type', value: dcmViewer.image.data.string('x00180023')})\r\n    header.push({name: 'Slice Thickness', value: dcmViewer.image.data.string('x00180050')})\r\n    header.push({name: 'Spacing Between Slice', value: dcmViewer.image.data.string('x00180088')})\r\n    header.push({name: 'Patient Position', value: dcmViewer.image.data.string('x00185100')})\r\n\r\n    header.push({name: 'Study ID', value: dcmViewer.image.data.string('x00200010')})\r\n    header.push({name: 'Series Number', value: dcmViewer.image.data.string('x00200011')})\r\n    header.push({name: 'Acquisition Number', value: dcmViewer.image.data.string('x00200012')})\r\n    header.push({name: 'Instance Number', value: dcmViewer.image.data.string('x00200013')})\r\n    header.push({name: 'Image Position (Patient)', value: dcmViewer.image.data.string('x00200032')})\r\n    header.push({name: 'Image Orientation (Patient)', value: dcmViewer.image.data.string('x00200037')})\r\n    header.push({name: 'Images in Acquisition', value: dcmViewer.image.data.string('x00201002')}) \r\n    header.push({name: 'Slice Location', value: dcmViewer.image.data.string('x00201041')})        \r\n\r\n    header.push({name: 'Samples per Pixel', value: dcmViewer.image.data.uint16('x00280002')})\r\n    header.push({name: 'Photometric Interpretation', value: dcmViewer.image.data.string('x00280004')})\r\n    header.push({name: 'Number of Frames', value: dcmViewer.image.data.string('x00280008')})\r\n    header.push({name: 'Planar Configuration', value: dcmViewer.getPlanarConfiguration()})\r\n    header.push({name: 'Rows', value: dcmViewer.image.data.uint16('x00280010')})\r\n    header.push({name: 'Columns', value: dcmViewer.image.data.uint16('x00280011')})\r\n    header.push({name: 'Pixel Spacing', value: dcmViewer.image.data.string('x00280030')})\r\n    header.push({name: 'Bits Allocated', value: dcmViewer.image.data.uint16('x00280100')})\r\n    header.push({name: 'Bits Stored', value: dcmViewer.image.data.uint16('x00280101')})\r\n    header.push({name: 'High Bit', value: dcmViewer.image.data.uint16('x00280102')})\r\n    header.push({name: 'Pixel Representation', value: dcmViewer.getPixelRepresentation()})\r\n    header.push({name: 'Window Center', value: dcmViewer.image.data.string('x00281050')})\r\n    header.push({name: 'Window Width', value: dcmViewer.image.data.string('x00281051')})\r\n    header.push({name: 'Rescale Intercept', value: dcmViewer.image.data.string('x00281052')})\r\n    header.push({name: 'Rescale Slope', value: dcmViewer.image.data.string('x00281053')})\r\n    header.push({name: 'Min Stored Pixel Value', value: dcmViewer.image.minPixelValue})\r\n    header.push({name: 'Max Stored Pixel Value', value: dcmViewer.image.maxPixelValue})\r\n\r\n    header.push({name: 'Image Orientation', value: dcmViewer.image.data.string('x00700042')})\r\n    header.push({name: 'Image Horizontal Flip', value: dcmViewer.image.data.string('x00700041')})\r\n\r\n    const listItems = header.map((item, index) => {\r\n        if (item.value !== undefined) \r\n            return (\r\n                <ListItem dense={true} key={index}>\r\n                    <ListItemText primary={item.name} secondary={item.value} />\r\n                </ListItem>\r\n            ) \r\n        else return null\r\n    })\r\n\r\n    const saveHeader = () => {\r\n        let exportAs = localStorage.getItem(SETTINGS_DCMHEADER)\r\n        if (exportAs === null) {\r\n          exportAs = \"json\"\r\n          localStorage.setItem(SETTINGS_DCMHEADER, exportAs)\r\n        }  \r\n    \r\n        let fileData = ''\r\n        \r\n        if (exportAs === 'csv') {\r\n          fileData = toCsv(header)\r\n        } else {\r\n          const obj = header.reduce((o, item) => ({ ...o, [item.name]: item.value}), {})\r\n          fileData = JSON.stringify(obj)\r\n        }\r\n        \r\n        const element = document.createElement(\"a\")\r\n        const file = new Blob([fileData], {type: 'text/plain'})\r\n        element.href = URL.createObjectURL(file)\r\n        element.download = `${dcmViewer.localfile.name}.${exportAs}`\r\n        document.body.appendChild(element) // Required for this to work in FireFox\r\n        element.click()\r\n    }\r\n\r\n    console.log('dcmViewer', dcmViewer)\r\n\r\n    return (\r\n      <PerfectScrollbar>\r\n        <div style={{marginTop: '48px'}}>\r\n          <Toolbar variant=\"dense\">\r\n            <Typography variant=\"subtitle1\" className={classes.title}>\r\n              Dicom Header\r\n            </Typography>\r\n            <div className={classes.grow} />\r\n            <IconButton color=\"inherit\" onClick={saveHeader}>\r\n              <Icon path={mdiContentSaveOutline} size={'1.2rem'} color={color} />\r\n            </IconButton>\r\n          </Toolbar>    \r\n          <div>          \r\n            <List dense={true} component=\"div\">\r\n                {listItems}             \r\n            </List>\r\n          </div>      \r\n        </div>\r\n      </PerfectScrollbar>\r\n    )\r\n}\r\n  \r\nexport default DicomHeader\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport {\r\n  setZippedFile,\r\n} from '../actions/index'\r\n\r\nconst CancelToken = axios.CancelToken\r\nconst source = CancelToken.source()\r\n\r\nclass DownloadZipDlg extends PureComponent {\r\n\r\n  state = {\r\n    loading: 0\r\n  }\r\n\r\n  componentDidMount(previousProps) {\r\n    this.requestDownloadZip()\r\n  }\r\n\r\n  hide = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  cancel = () => {\r\n    source.cancel('Operation canceled by the user.')\r\n    this.hide()\r\n  }\r\n\r\n  requestDownloadZip = () => {\r\n    console.log('this.props.url', this.props.url)\r\n    this.setState({loading: 0})\r\n    axios({\r\n      method: 'get',\r\n      url: this.props.url,\r\n      responseType: 'arraybuffer',\r\n      cancelToken: source.token,\r\n      onDownloadProgress: (progressEvent) => {\r\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n        this.setState({ loading: percentCompleted })\r\n        console.log('loading: ', percentCompleted)\r\n      },\r\n    }).then((response) => {\r\n        console.log('response: ', response)\r\n        this.props.setFsZippedFile(response.data)\r\n        this.hide()\r\n    }).catch((error) => {\r\n      console.log('error: ', error)\r\n    })\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n            open={true}\r\n            onClose={this.hide}\r\n        >\r\n            <DialogTitle>{\"Downloading zip archive...\"}</DialogTitle>\r\n            <DialogContent>\r\n              <LinearProgress variant=\"determinate\" value={this.state.loading} color='secondary' />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFsZippedFile: (file) => dispatch(setZippedFile(file))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DownloadZipDlg)\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport DicomViewer from './DicomViewer'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n    seriesStore,\r\n    filesStore,\r\n    explorer,\r\n    explorerActivePatientIndex,\r\n    explorerActiveStudyIndex,\r\n    explorerActiveSeriesIndex,\r\n  } from '../actions'\r\n\r\nimport {\r\n    groupBy,\r\n} from '../functions'\r\n\r\nconst style = {\r\n    width: '200px', \r\n    padding: '8px 8px 8px 8px', \r\n    marginTop: '40px',\r\n}\r\n\r\nconst styleScrollbar = {\r\n    height: 'calc(100vh - 48px)',\r\n}\r\n\r\nconst styleDicomViewerStack = {\r\n    width: '182px', \r\n    marginTop: '10px',\r\n    marginLeft: '7px',\r\n}\r\n\r\nconst styleDicomViewer = { \r\n    padding: '4px 4px 4px 4px', \r\n}\r\n\r\nconst styles = theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    selectText: {\r\n        fontSize: '0.85em',\r\n    },    \r\n    menuItemText: {\r\n        fontSize: '0.85em',\r\n    },\r\n})\r\n\r\nclass Explorer extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.dicomViewersRefs = []\r\n        this.dicomViewers = []\r\n        for(let i=0; i < 16; i++) {\r\n          this.dicomViewers.push(this.setDcmViewer(i))\r\n        }\r\n      }\r\n\r\n    state = {\r\n        patientName: this.props.explorer.patient.keys[0],\r\n        studies: [],\r\n        study: '',\r\n        series: [],\r\n        seriesActiveIndex: 0,\r\n    }\r\n\r\n    setDcmViewer = (index) => {\r\n        return (\r\n          <div style={styleDicomViewer}>  \r\n            <DicomViewer \r\n                dcmRef={(ref) => {this.dicomViewersRefs[index] = ref}}\r\n                index={index}\r\n                runTool={ref => (this.runTool = ref)} \r\n                changeTool={ref => (this.changeTool = ref)}\r\n                onLoadedImage={this.onLoadedImage}\r\n                onRenderedImage={this.onRenderedImage}\r\n                overlay={true}\r\n                visible={true} \r\n                use='preview'\r\n            />   \r\n          </div> \r\n        )\r\n    }\r\n    \r\n    onLoadedImage = () => {\r\n    \r\n    }\r\n\r\n    onRenderedImage = () => {\r\n\r\n    }\r\n\r\n    getDcmViewerRef = (index) => {\r\n        return this.dicomViewersRefs[index]\r\n    }\r\n\r\n    getDcmViewer = (index) => {\r\n        return this.dicomViewers[index]\r\n    }\r\n\r\n    buildPreviewStack = (rows) => {\r\n        this.dicomviewers = []\r\n        for(let i=0; i < rows; i++) {\r\n            this.dicomviewers.push(\r\n              <div \r\n                key={i} \r\n                onClick={() => this.previewStackClick(i)} \r\n                onTouchStart={() => this.previewStackTouch(i)}\r\n              >\r\n                {this.getDcmViewer(i)}\r\n              </div>        \r\n            )\r\n        }\r\n        \r\n        return (\r\n          <div\r\n            id=\"dicomviewer-grid\"\r\n            style={{\r\n              display: 'grid',\r\n              gridTemplateRows: `repeat(${rows}, ${100 / rows}%)`,\r\n              gridTemplateColumns: `repeat(${1}, ${100}%)`,\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {this.dicomviewers}\r\n          </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log('Explorer - componentDidMount: ')\r\n\r\n        const patientIndex = this.props.explorerActivePatientIndex\r\n        const studyIndex = this.props.explorerActiveStudyIndex\r\n        const patientName = this.props.explorer.patient.keys[patientIndex]\r\n        \r\n        this.setState({patientName: patientName}, () => {\r\n            this.filesListForPatient = this.props.files.filter((a) => {\r\n                return a.patient.patientName === patientName}\r\n            )\r\n            //console.log('filesListForPatient: ', this.filesListForPatient)\r\n            \r\n            this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDateTime)\r\n            let studyKeys = [...this.studyList.keys()]\r\n            if (this.studyList.get(studyKeys[0])[0].study.studyDate === undefined) {\r\n                this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDescription)\r\n                studyKeys = [...this.studyList.keys()]\r\n            }\r\n            this.study = {\r\n              list: this.studyList,\r\n              keys: studyKeys\r\n            }\r\n\r\n            //console.log('this.studyList: ', this.studyList.get(studyKeys[0]))\r\n            //console.log('study: ', this.study)\r\n\r\n            this.seriesList = groupBy(this.studyList.get(studyKeys[0]), a => a.series.seriesNumber) // this.filesListForPatient\r\n            const seriesKeys = [...this.seriesList.keys()]\r\n            \r\n            //console.log('seriesList: ', this.seriesList)\r\n            //console.log('seriesKeys: ', seriesKeys)\r\n\r\n            this.series = {\r\n                seriesList: this.seriesList,\r\n                seriesKeys: seriesKeys\r\n            }\r\n            this.files = this.series.seriesList.get(seriesKeys[0])\r\n            this.props.setSeriesStore(this.series)\r\n\r\n            this.setState({study: this.study.keys[studyIndex], studies: studyKeys, series: seriesKeys}, () => {               \r\n\r\n                //this.props.setSeriesStore(this.series)\r\n\r\n                //this.files = this.series.seriesList.get(this.state.series[0])\r\n\r\n                //this.props.setFilesStore(this.files)\r\n                //this.props.onSelectSeries(this.seriesList.get(seriesKeys[0]))\r\n                this.previewStackClick(0)\r\n            })\r\n\r\n            //this.props.setExplorerActiveSeriesIndex(0) \r\n            \r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log('Explorer - componentDidUpdate: ', this.state.series)\r\n        for(let i=0; i < this.state.series.length; i++) {\r\n            this.dicomViewersRefs[i].runTool('setfiles', this.seriesList.get(this.state.series[i]))\r\n            this.dicomViewersRefs[i].runTool('openimage', 0)\r\n        }\r\n    }\r\n\r\n    handlePatientChange = (event, value) => {\r\n        //console.log('handlePatientChange: ', value)\r\n\r\n        this.patientName = event.target.value\r\n        const patientIndex = value.key\r\n\r\n        //console.log('patientIndex: ', patientIndex)\r\n\r\n        this.filesListForPatient = this.props.allFiles.filter((a) => {\r\n            return a.patient.patientName === this.patientName}\r\n        )\r\n        //console.log('filesListForPatient: ', this.filesListForPatient)\r\n\r\n        this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDateTime)\r\n        const studyKeys = [...this.studyList.keys()]\r\n        this.study = {\r\n          list: this.studyList,\r\n          keys: studyKeys\r\n        }\r\n        //console.log('study: ', this.study)\r\n        \r\n        this.seriesList = groupBy(this.studyList.get(studyKeys[0]), a => a.series.seriesNumber) // this.filesListForPatient\r\n        const seriesKeys = [...this.seriesList.keys()]\r\n\r\n        this.series = {\r\n            seriesList: this.seriesList,\r\n            seriesKeys: seriesKeys\r\n        }\r\n        this.props.setSeriesStore(this.series)\r\n\r\n        this.setState({patientName: this.patientName, study: this.study.keys[0], studies: studyKeys, series: seriesKeys}, () => {\r\n            //for(let i=0; i < this.state.series.length; i++) {\r\n                //const file = this.seriesList.get(this.state.series[i])[0]\r\n                //const index = this.props.allFiles.map(e => e.name).indexOf(file.name)\r\n            //    this.dicomViewersRefs[i].runTool('openimage', 0)\r\n            //}\r\n            //this.series = {\r\n            //    seriesList: this.seriesList,\r\n            //    seriesKeys: this.state.series\r\n            //}\r\n\r\n            /*const explorerData = {\r\n                patient: patientName,\r\n                study: this.study,\r\n                series: series,\r\n            }\r\n\r\n            this.props.setExplorer(explorerData)*/\r\n\r\n            this.props.setExplorerActivePatientIndex(patientIndex)\r\n            //this.props.setSeriesStore(this.series)\r\n\r\n            //this.props.setFilesStore(this.series.seriesList.get(this.state.series[0]))\r\n\r\n            //console.log('handlePatientChange - handlePatientChange: ')\r\n            //this.props.onSelectSeries(this.series.seriesList.get(seriesKeys[0]))\r\n            this.previewStackClick(0)\r\n            //console.log('this.dicomviewers: ', this.dicomviewers[0].props.onClick())\r\n            //this.dicomviewers[0].onClick()\r\n            //this.dicomviewers[0].props.onClick()\r\n        })\r\n    }\r\n\r\n    handleStudyChange = (event, value) => {\r\n        //console.log('handleStudyChange, event: ', event)\r\n        //console.log('handleStudyChange, value: ', value)\r\n\r\n        const studyIndex = value.key\r\n\r\n        this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDateTime)\r\n        let studyKeys = [...this.studyList.keys()]\r\n        if (this.studyList.get(studyKeys[0])[0].study.studyDate === undefined) {\r\n            this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDescription)\r\n            studyKeys = [...this.studyList.keys()]\r\n        }\r\n        this.study = {\r\n          list: this.studyList,\r\n          keys: studyKeys\r\n        }\r\n        \r\n        //console.log('this.studyList: ', this.studyList.get(studyKeys[studyIndex]))\r\n        //console.log('study: ', this.study)\r\n\r\n        this.seriesList = groupBy(this.studyList.get(studyKeys[studyIndex]), a => a.series.seriesNumber) // this.filesListForPatient\r\n        const seriesKeys = [...this.seriesList.keys()]\r\n\r\n        //console.log('seriesList: ', this.seriesList)\r\n        //console.log('seriesKeys: ', seriesKeys)\r\n\r\n        this.series = {\r\n            seriesList: this.seriesList,\r\n            seriesKeys: seriesKeys\r\n        }\r\n        this.props.setSeriesStore(this.series)\r\n\r\n        //this.files = this.seriesList.get(seriesKeys[0])\r\n\r\n        this.setState({study: this.study.keys[studyIndex], studies: studyKeys, series: seriesKeys}, () => {\r\n            //for(let i=0; i < seriesKeys.length; i++) {\r\n            //    console.log('i: ', i)\r\n                //const file = this.seriesList.get(seriesKeys[i])[0]\r\n                //console.log('file: ', file)\r\n                //const index = this.props.allFiles.map(e => e.name).indexOf(file.name)\r\n                //this.dicomViewersRefs[i].runTool('setfiles', this.seriesList.get(seriesKeys[i]))\r\n                //this.dicomViewersRefs[i].runTool('openimage', 0)\r\n            //}\r\n            //this.props.setFilesStore(this.files) \r\n            //this.props.onSelectSeries(this.files) \r\n            //this.props.setExplorerActiveStudyIndex(studyIndex)\r\n            //this.props.onSelectSeries(this.series.seriesList.get(seriesKeys[0]))  \r\n            this.previewStackClick(0)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    previewStackClick = (index) => {\r\n        //console.log('previewStackClick: ', index)\r\n        //console.log('previewStackClick - this.state.seriesActiveIndex: ', this.state.seriesActiveIndex)\r\n        //if (index === this.state.seriesActiveIndex) return\r\n        this.props.setExplorerActiveSeriesIndex(index) \r\n        this.setState({seriesActiveIndex: index}, () => {\r\n            this.props.onSelectSeries(this.series.seriesList.get(this.state.series[index]))\r\n        })\r\n    }\r\n\r\n    previewStackTouch = (index) => {\r\n        //if (index === this.state.seriesActiveIndex) return\r\n        this.props.setExplorerActiveSeriesIndex(index)\r\n        this.setState({seriesActiveIndex: index}, () => {\r\n            this.props.onSelectSeries(this.series.seriesList.get(this.state.series[index]))\r\n        })\r\n    }\r\n\r\n    render() {   \r\n        const { classes } = this.props\r\n    \r\n        //console.log('Explorer render:')\r\n\r\n        return (\r\n            <PerfectScrollbar> \r\n                <div style={styleScrollbar}>\r\n                    <div style={style}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"patient-label\">Patient</InputLabel>\r\n                            <Select\r\n                                className={classes.selectText}\r\n                                labelId=\"patient-select-label\"\r\n                                id=\"patient-select\"\r\n                                value={this.state.patientName}\r\n                                onChange={this.handlePatientChange}\r\n                            >\r\n                                {this.props.explorer.patient.keys.map((patient, index) => (\r\n                                    <MenuItem className={classes.menuItemText} value={patient} key={index}>{patient}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"study-label\">Study</InputLabel>\r\n                            <Select\r\n                                className={classes.selectText}\r\n                                labelId=\"study-select-label\"\r\n                                id=\"study-select\"\r\n                                value={this.state.study}\r\n                                onChange={this.handleStudyChange}\r\n                            >\r\n                                {this.state.studies.map((study, index) => (\r\n                                    // `${studyDate} - ${studyTime}`\r\n                                    <MenuItem className={classes.menuItemText} value={study} key={index}>{study}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        \r\n                        <div style={styleDicomViewerStack}>\r\n                            {\r\n                                this.buildPreviewStack(this.state.series.length)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n          </PerfectScrollbar> \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      files: state.files,\r\n      explorerActivePatientIndex: state.explorerActivePatientIndex,\r\n      explorerActiveStudyIndex: state.explorerActiveStudyIndex,\r\n      explorerActiveSeriesIndex: state.explorerActiveSeriesIndex,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setFilesStore: (files) => dispatch(filesStore(files)),\r\n        setExplorer: (data) => dispatch(explorer(data)),\r\n        setExplorerActivePatientIndex: (index) => dispatch(explorerActivePatientIndex(index)),\r\n        setExplorerActiveStudyIndex: (index) => dispatch(explorerActiveStudyIndex(index)),\r\n        setExplorerActiveSeriesIndex: (index) => dispatch(explorerActiveSeriesIndex(index)),\r\n        setSeriesStore: (series) => dispatch(seriesStore(series)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Explorer))\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport * as cornerstone from \"cornerstone-core\"\r\nimport * as cornerstoneWADOImageLoader from \"cornerstone-wado-image-loader\"\r\nimport {\r\n  //allFilesStore,\r\n  filesStore,\r\n} from '../actions'\r\nimport { \r\n  getDicomPatientName,\r\n  getDicomStudyId,\r\n  getDicomStudyDate,\r\n  getDicomStudyTime,\r\n  getDicomStudyDescription,\r\n  getDicomSeriesDate,\r\n  getDicomSeriesTime,\r\n  getDicomSeriesDescription,\r\n  getDicomSeriesNumber,\r\n  getDicomInstanceNumber,\r\n  getDicomSliceLocation,\r\n  getDicomSliceDistance,\r\n  getDicomRows,\r\n  getDicomColumns,\r\n  getFileNameCorrect,\r\n  dicomDateTimeToLocale,\r\n} from '../functions'\r\n\r\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone\r\n\r\nclass OpenMultipleFilesDlg extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.items = []\r\n    this.count = 0\r\n    this.step = 0\r\n    //this.slicesDistance = []\r\n  }\r\n\r\n  state = {\r\n    progress: 0,\r\n    cancel: false,\r\n  }  \r\n\r\n  componentDidMount() {\r\n    //console.log('OpenMultipleFilesDlg - componentDidMount: ', this.props.files.length)\r\n    this.step = this.props.files.length / 50\r\n    this.nextProgress = this.step\r\n    this.t0 = performance.now()\r\n\r\n    for (let i=0; i<this.props.files.length; i++) {\r\n      const file = this.props.files[i]\r\n      if (this.state.cancel) {\r\n        //this.props.setAllFilesStore(null)\r\n        this.props.setFilesStore(null)\r\n        this.close()\r\n        return\r\n      }\r\n      let imageId = null \r\n      \r\n      if (this.props.origin === 'local')\r\n        imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(file)\r\n      else // it's fs item\r\n        imageId = cornerstoneWADOImageLoader.wadouri.fileManager.addBuffer(file.data)  \r\n\r\n      cornerstone.loadImage(imageId).then((image) => {\r\n\r\n        const patientName = getDicomPatientName(image)\r\n\r\n        const studyId = getDicomStudyId(image)\r\n        const studyDate = getDicomStudyDate(image)\r\n        const studyTime = getDicomStudyTime(image)\r\n        const studyDescription = getDicomStudyDescription(image)\r\n\r\n        const seriesDate = getDicomSeriesDate(image)\r\n        const seriesTime = getDicomSeriesTime(image)\r\n        const seriesDescription = getDicomSeriesDescription(image)        \r\n        const seriesNumber = getDicomSeriesNumber(image)\r\n\r\n        const instanceNumber = getDicomInstanceNumber(image)\r\n        const sliceDistance = getDicomSliceDistance(image)\r\n        const sliceLocation = getDicomSliceLocation(image)  \r\n        const columns = getDicomColumns(image)       \r\n        const rows = getDicomRows(image)\r\n\r\n        const studyDateTime = studyDate === undefined ? undefined : dicomDateTimeToLocale(`${studyDate}.${studyTime}`)\r\n\r\n        let item = null\r\n        if (this.props.origin === 'local')\r\n          \r\n          item = {\r\n            imageId: imageId, \r\n            instanceNumber: instanceNumber, \r\n            name: getFileNameCorrect(file.name), \r\n            image: image, \r\n            rows: rows, \r\n            columns: columns, \r\n            sliceDistance: sliceDistance,\r\n            sliceLocation: sliceLocation,\r\n            patient: {\r\n              patientName: patientName\r\n            },\r\n            study: {\r\n              studyId: studyId,\r\n              studyDate: studyDate,\r\n              studyTime: studyTime,\r\n              studyDateTime: studyDateTime,\r\n              studyDescription: studyDescription\r\n            },\r\n            series: {\r\n              seriesDate: seriesDate,\r\n              seriesTime: seriesTime,\r\n              seriesDescription: seriesDescription,\r\n              seriesNumber: seriesNumber\r\n            }\r\n          }\r\n        else\r\n          item = {\r\n            imageId: imageId, \r\n            instanceNumber: instanceNumber, \r\n            name: file.name, \r\n            image: image, \r\n            rows: rows, \r\n            columns: columns, \r\n            sliceDistance: sliceDistance,\r\n            sliceLocation: sliceLocation,  \r\n            patient: {\r\n              patientName: patientName\r\n            },\r\n            study: {\r\n              studyId: studyId,\r\n              studyDate: studyDate,\r\n              studyTime: studyTime,\r\n              studyDateTime: studyDateTime,\r\n              studyDescription: studyDescription\r\n            },\r\n            series: {\r\n              seriesDate: seriesDate,\r\n              seriesTime: seriesTime,\r\n              seriesDescription: seriesDescription,\r\n              seriesNumber: seriesNumber\r\n            }          \r\n          }\r\n        this.items.push(item)\r\n        this.count++\r\n\r\n        const progress = Math.floor(this.count*(100/this.props.files.length))\r\n        //\r\n        if (progress > this.nextProgress) {\r\n          this.nextProgress += this.step\r\n          this.setState({progress: progress})\r\n        }\r\n        if (this.count === this.props.files.length) {\r\n          this.items.sort((l, r) => {\r\n            return l.instanceNumber - r.instanceNumber\r\n            // return l.sliceDistance - r.sliceDistance\r\n            // return l.sliceLocation - r.sliceLocation\r\n          })\r\n          this.t1 = performance.now()\r\n          console.log(`performance load image: ${this.t1-this.t0} milliseconds`)\r\n          //this.props.setAllFilesStore(this.items)\r\n          this.props.setFilesStore(this.items)\r\n          this.close()\r\n        }\r\n\t\t\t}, (e) => {\r\n        console.log('Error in reading multiple files: ', e)\r\n        this.count++\r\n      })\r\n      if (this.count === this.props.files.length) {\r\n        \r\n      }   \r\n    }\r\n    //this.close()\r\n  }\r\n\r\n  close = () => {\r\n    //console.log('this.slicesDistance: ', this.slicesDistance)\r\n    this.props.onClose()\r\n  }\r\n\r\n  cancel = () => {\r\n    this.setState({cancel: true}) \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n            open={true}\r\n            onClose={this.close}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Opening multiple files ...\"}</DialogTitle>\r\n            <DialogContent>\r\n              <LinearProgress variant=\"determinate\" value={this.state.progress} color='secondary' />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      //setAllFilesStore: (files) => dispatch(allFilesStore(files)),\r\n      setFilesStore: (files) => dispatch(filesStore(files)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OpenMultipleFilesDlg)\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Icon from '@mdi/react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\n// import {List as ListVirtual} from 'react-virtualized'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver'\r\nimport fs from '../fs/fs'\r\nimport OpenMultipleFilesDlg from './OpenMultipleFilesDlg'\r\nimport {\r\n    getFileExt,\r\n    getFileExtReal,\r\n    getFileName,\r\n    formatBytes,\r\n    getSettingsFsView,\r\n    getFileNameCorrect,\r\n} from '../functions'\r\nimport {\r\n    //setFsCurrentId,\r\n    setFsCurrentDir,\r\n    setFsCurrentList,\r\n    setZippedFile,\r\n    fsFileStore,\r\n} from '../actions'\r\nimport {\r\n    mdiCheck,\r\n    mdiChevronLeft,\r\n    mdiClose,\r\n    mdiContentCopy,\r\n    mdiContentCut,\r\n    mdiContentPaste,\r\n    mdiContentSaveOutline,\r\n    mdiDeleteOutline,\r\n    mdiDotsHorizontal,\r\n    mdiExportVariant, \r\n    mdiFolderOutline,   \r\n    mdiFolderPlusOutline,\r\n    mdiCheckBoxOutline,\r\n    mdiSquareEditOutline,\r\n} from '@mdi/js'\r\n\r\nconst styles = theme => ({\r\n    table: {\r\n        minWidth: 250,\r\n    },\r\n    tableCellText: {\r\n        fontSize: '0.80em',\r\n    },\r\n    toolbarButtons: {\r\n        marginLeft: 'auto',\r\n        marginRight: -20,\r\n    },\r\n    leftButtons: {\r\n        marginLeft: -25,\r\n    },\r\n    textPaper: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 250,\r\n    },\r\n    textInput: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    textButton: {\r\n        padding: 10,\r\n    },\r\n})\r\n\r\nconst styleScrollbar = {\r\n    height: 'calc(100vh - 48px)'\r\n}\r\n\r\nclass FsUI extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.files = []\r\n        this.cut = false\r\n        this.itemsCount = 0\r\n        this.saveAsField = React.createRef()\r\n\r\n      }\r\n\r\n    state = {\r\n        textFieldLabel: '',\r\n        textFieldValue: '',\r\n        selected: [],\r\n        selectedCopy: [],\r\n        visibleTextField: false,\r\n        visibleDeleteDlg: false,\r\n        visibleOthers: false,\r\n        visibleAlreadyExistDlg: false,\r\n        visibleOSaveAsDlg: false,\r\n        visibleWaiting: false,\r\n        visibleOpenMultipleFilesDlg: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fsListDir(this.props.fsCurrentDir)\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        //console.log('componentDidUpdate: ', this.props)\r\n        if (this.props.fsZippedFile !== null) {\r\n            const zip = new JSZip()\r\n            zip.loadAsync(this.props.fsZippedFile).then((contents) => {\r\n                //console.log('zip file contents: ', contents)\r\n                contents.forEach((relativePath, zipEntry) => {\r\n                    //console.log('zipEntry: ', zipEntry)\r\n                    if (zipEntry.dir) { \r\n                        //console.log('dir relativePath: ', relativePath)\r\n                    } else {                  \r\n                        //console.log('file relativePath: ', relativePath)\r\n                        zip.file(relativePath).async('uint8array').then((content) => {\r\n                            this.fsAddItem(relativePath, content)\r\n                        })\r\n                    }\r\n                })\r\n            }).then(() => {\r\n                this.props.setFsZippedFile(null)\r\n                //this.fsListDir(this.props.fsCurrentDir)\r\n            })\r\n        } else {\r\n            //this.fsListDir(this.props.fsCurrentDir)\r\n        }\r\n    }\r\n\r\n    fsBuildParent(parent, name) {\r\n        let newParent = ''\r\n        if (parent === '') {\r\n            if (name !== '') \r\n                newParent = name\r\n        } else {\r\n            if (name !== '') \r\n                newParent = `${parent}/${name}` \r\n            else\r\n                newParent = parent\r\n        }\r\n        return newParent\r\n    }\r\n\r\n    fsAddItem(filename, data) {\r\n        //console.log('fsAddItem filename: ', filename)\r\n        //console.log('fsAddItem data: ', data)\r\n        let components = filename.split('/')\r\n        const name = components.pop()\r\n        const parent = this.fsBuildParent(this.props.fsCurrentDir, components.join('/'))\r\n        //console.log(`add file, parent: ${parent}, name: ${name}`)\r\n        fs.transaction('rw', fs.files, async () => {\r\n            await fs.files.add({\r\n                parent: parent,\r\n                name: name,\r\n                type: getFileExt(name),\r\n                size: data.length,\r\n                data: data\r\n            })             \r\n        }).then(() => {\r\n            // store subdirectory\r\n            while (components.length > 0) {\r\n                const name = components.pop()\r\n                const parent = this.fsBuildParent(this.props.fsCurrentDir, components.join('/'))\r\n                //console.log(`put dir, parent: ${parent}, name: ${name}`)\r\n                fs.transaction('rw', fs.files, async () => {\r\n                    await fs.files.put({\r\n                        parent: parent,\r\n                        name: name,\r\n                        type: 'dir',\r\n                        size: '' \r\n                    }) \r\n                }).then(() => {\r\n                    this.fsListDir(this.props.fsCurrentDir)\r\n                })\r\n            }            \r\n        })\r\n    }\r\n\r\n    fsExistDir(dir, create = true) {\r\n        const item = this.props.fsCurrentList.find(e => e.name === dir)\r\n        if (item !== undefined) {\r\n            if (create) {\r\n                this.fsCreateDir(this.props.fsCurrentDir, dir)\r\n                return true\r\n            } else return false\r\n        } else return false\r\n    }\r\n\r\n    fsListDir(dir) {\r\n        //console.log('fsListDir: ', dir)\r\n        let listItems = []\r\n        fs.transaction('r', fs.files, () => {\r\n            fs.files.where({parent: dir, type: 'dir'}).sortBy('name').then((list) => { // first list all dirs\r\n                listItems = list\r\n            }).then(() => { // after list all files\r\n                fs.files.where({parent: dir}).and(item => item.type !== 'dir').sortBy('name').then((list) => {\r\n                    listItems = listItems.concat(list)\r\n                }).then(() => {\r\n                    this.props.setCurrentList(listItems)\r\n                    setTimeout(() => this.setState({visibleWaiting: false}), 1000)\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    fsCreateDir(parent, name) {\r\n        fs.files.add({parent: parent, name: name, type: 'dir', size: ''}).then(() => { \r\n            this.fsListDir(this.props.fsCurrentDir)\r\n        })\r\n    }\r\n\r\n    doSelectUnselect = () => {\r\n        let newSelected = []\r\n        if (this.state.selected.length > 0) { // unselect the files\r\n            this.setState({selected: newSelected})            \r\n        } else { // select only files not dir\r\n            this.props.fsCurrentList.forEach((item) => {\r\n                if (item.type !== 'dir') {\r\n                    newSelected.push(item.name)\r\n                }\r\n                this.setState({selected: newSelected}, () => {\r\n                    //console.log('this.state.selected: ', this.state.selected)\r\n                })\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    openSelectedFilesRetrieveItems = async () => {\r\n        await fs.transaction('r', fs.files, async () => {\r\n            this.state.selected.forEach( async (name, index) => {\r\n                await fs.files.where({parent: this.props.fsCurrentDir, name: name}).first((item) => {\r\n                    //console.log('item: ', item)\r\n                    if (item !== undefined && item.type !== 'dir') {\r\n                        this.files.push(item)\r\n                    } else if (item.type === 'dir') {\r\n                        fs.files.where('parent').startsWithIgnoreCase(item.name).each((e) => {\r\n                            if (e !== undefined && e.type !== 'dir') {\r\n                                //console.log(' e: ', e) \r\n                                this.files.push(e)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n             })\r\n        })\r\n    }\r\n\r\n    openSelectedFiles = () => {\r\n        if (this.state.selected.length === 0) return\r\n        this.files = []\r\n        this.openSelectedFilesRetrieveItems().then(() => {\r\n            this.setState({visibleOpenMultipleFilesDlg: true})\r\n            this.setState({selected: []})  \r\n        })\r\n    }\r\n\r\n    hideOpenMultipleFilesDlg = () => {\r\n        this.setState({ visibleOpenMultipleFilesDlg: false })\r\n        if (this.props.files.length > 1) {\r\n            this.props.onOpenMultipleFilesCompleted()\r\n        } else this.props.onOpenImage(0)\r\n    }\r\n\r\n    createDir = () => {\r\n        this.setState({textFieldLabel: 'new folder name', visibleTextField: !this.state.visibleTextField})\r\n    }\r\n\r\n    renameItem = () => {\r\n        this.lastSelected = this.state.selected[this.state.selected.length-1]\r\n        this.setState({textFieldLabel: '', textFieldValue: this.lastSelected, visibleTextField: !this.state.visibleTextField})\r\n    }\r\n\r\n    previousDir = () => {\r\n        //console.log('this.state.parentDir: ', this.state.parentDir)\r\n        if (this.props.fsCurrentDir === '') return\r\n        const nextDir = this.props.fsCurrentDir.split('/').slice(0, -1).join('/')\r\n        this.props.setCurrentDir(nextDir)\r\n        this.fsListDir(nextDir)\r\n    }\r\n\r\n    confirmText = (e) => {\r\n        if (this.state.textFieldLabel === '') { // it's a rename\r\n            // check if the new name already exist\r\n            const check = this.props.fsCurrentList.find(e => e.name === this.state.textFieldValue)\r\n            if (check !== undefined) {\r\n                this.setState({visibleAlreadyExistDlg: true})\r\n                return\r\n            }\r\n            const item = this.props.fsCurrentList.find(e => e.name === this.lastSelected)\r\n            if (item !== undefined) {\r\n                if (item.type === 'dir') {\r\n                    const oldParent = this.fsBuildParent(item.parent, item.name)\r\n                    const newParent = this.fsBuildParent(item.parent, this.state.textFieldValue)\r\n                    // rename parent for all subitems\r\n                    fs.transaction('rw', fs.files, async () => {\r\n                        await fs.files.where({parent: oldParent}).each((e) => {\r\n                            fs.transaction('rw', fs.files, async () => { // since is a new primary key then add it as new item \r\n                                await fs.files.add({\r\n                                parent: newParent,\r\n                                name: e.name,\r\n                                type: e.type,\r\n                                size: e.size,\r\n                                data: e.data\r\n                                }).then(() => { // then delete old one\r\n                                    fs.files.where({parent: oldParent}).delete()\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                } \r\n                fs.transaction('rw', fs.files, async () => { // a new primary key, add it as new item \r\n                    await fs.files.add({\r\n                      parent: item.parent,\r\n                      name: this.state.textFieldValue,\r\n                      type: item.type,\r\n                      size: item.size,\r\n                      data: item.data\r\n                    }).then(() => { // then delete old one\r\n                        fs.files.where({parent: item.parent, name: item.name}).delete()\r\n                    })\r\n                })\r\n                this.setState({visibleTextField: false})\r\n                this.fsListDir(this.props.fsCurrentDir)                \r\n            }\r\n        } else { // it's a new directory\r\n            this.setState({visibleTextField: false}, () => {\r\n                this.fsCreateDir(this.props.fsCurrentDir, this.state.textFieldValue)\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelDir = () => {\r\n         this.setState({visibleTextField: false})\r\n    }\r\n\r\n    saveItem = () => {\r\n        //console.log('this.props.localFileStore: ', this.props.localFileStore)\r\n        //console.log('this.props.fsFileStore: ', this.props.fsFileStore)\r\n        //console.log('this.props.activeDcm: ', this.props.activeDcm)\r\n\r\n        if (this.props.localFileStore !== null) {\r\n            const file = this.props.localFileStore\r\n            if (file === null) return\r\n            let reader = new FileReader()\r\n            reader.onload = (event) => {\r\n                let buffer = event.target.result\r\n                const ext = getFileExtReal(file.name)\r\n                //console.log('ext: ', ext)\r\n                const name = getFileName(getFileNameCorrect(file.name))   \r\n                //console.log('name: ', name)\r\n                let newName = name\r\n                let counter = 0\r\n                let done = false             \r\n                do {\r\n                    let filename = ext === '' ? newName : `${newName}.${ext}`\r\n                    const checkName = this.props.fsCurrentList.find(e => e.name === filename)\r\n                    if (checkName === undefined) {\r\n                        fs.transaction('rw', fs.files, async () => {\r\n                            await fs.files.add({\r\n                                parent: this.props.fsCurrentDir,\r\n                                name: filename,\r\n                                type: ext === '' ? getFileExt(name) : ext,\r\n                                size: file.size,\r\n                                data: buffer\r\n                            })\r\n                        }).then(() => {\r\n                            this.fsListDir(this.props.fsCurrentDir)\r\n                        })\r\n                        done = true\r\n                    } else {\r\n                        newName = `${name} - Copy`\r\n                        if (counter > 0) newName = `${newName} (${counter})`\r\n                        counter++\r\n                    }\r\n                } while (!done)\r\n            }\r\n            reader.readAsArrayBuffer(file)\r\n        } else if (this.props.fsFileStore !== null) {\r\n            const file = this.props.fsFileStore\r\n            let buffer = file.data\r\n            const ext = getFileExtReal(file.name)\r\n            const name = getFileName(getFileNameCorrect(file.name))   \r\n            let newName = name\r\n            let counter = 0\r\n            let done = false             \r\n            do {\r\n                let filename = ext === '' ? newName : `${newName}.${ext}`\r\n                const checkName = this.props.fsCurrentList.find(e => e.name === filename)\r\n                if (checkName === undefined) {\r\n                    fs.transaction('rw', fs.files, async () => {\r\n                        await fs.files.add({\r\n                            parent: this.props.fsCurrentDir,\r\n                            name: filename,\r\n                            type: getFileExt(name),\r\n                            size: file.size,\r\n                            data: buffer\r\n                        })\r\n                    }).then(() => {\r\n                        this.fsListDir(this.props.fsCurrentDir)\r\n                    })\r\n                    done = true\r\n                } else {\r\n                    newName = `${name} - Copy`\r\n                    if (counter > 0) newName = `${newName} (${counter})`\r\n                    counter++\r\n                }\r\n            } while (!done)           \r\n        }\r\n    }\r\n\r\n    copyItem = () => {\r\n        let newSelectedCopy = []\r\n        this.state.selected.forEach(name => {\r\n            const item = this.props.fsCurrentList.find(e => e.name === name)\r\n            if (item !== undefined) {\r\n                newSelectedCopy.push({parent: item.parent, name: item.name})\r\n            }\r\n        })\r\n        this.setState({selectedCopy: newSelectedCopy})\r\n    }\r\n\r\n    cutItem = () => {\r\n        let newSelectedCopy = []\r\n        this.state.selected.forEach(name => {\r\n            let item = this.props.fsCurrentList.find(e => e.name === name)\r\n            if (item !== undefined) {\r\n                newSelectedCopy.push({parent: item.parent, name: item.name})\r\n            }\r\n        })\r\n        this.setState({selectedCopy: newSelectedCopy})\r\n        this.cut = true\r\n    }\r\n\r\n    pasteItem = () => {\r\n        //console.log('this.state.selectedCopy: ', this.state.selectedCopy)\r\n        //console.log('this.props.fsCurrentList: ', this.props.fsCurrentList)\r\n        this.state.selectedCopy.forEach(async (selected, index) => {\r\n            await fs.files.where({parent: selected.parent, name: selected.name}).first((item) => {\r\n                if (item !== undefined) {\r\n                    //console.log('item: ', item)\r\n                    if (item.type === 'dir') {\r\n                        // create a new name\r\n                        let counter = 0\r\n                        let done = false\r\n                        let newName = item.name\r\n                        do {\r\n                            let filename = newName\r\n                            const checkName = this.props.fsCurrentList.find(e => e.name === filename)\r\n                            if (checkName === undefined) {\r\n                                done = true\r\n                            } else {\r\n                                newName = `${item.name} - Copy`\r\n                                if (counter > 0) newName = `${newName} (${counter})`\r\n                                counter++\r\n                            }\r\n                        } while (!done)   \r\n                        //console.log('this.props.fsCurrentDir: ', this.props.fsCurrentDir)\r\n                        //console.log('newName: ', newName)\r\n                        // copy the folder\r\n                        fs.files.add({\r\n                            parent: this.props.fsCurrentDir,\r\n                            name: newName,\r\n                            type: item.type,\r\n                            size: item.size,\r\n                            data: item.data\r\n                        })   \r\n                        // copy all subdirs and files\r\n                        const oldParent = this.fsBuildParent(item.parent, item.name) \r\n                        const newParent = this.fsBuildParent(this.props.fsCurrentDir, newName) \r\n                        //console.log('oldParent: ', oldParent)\r\n                        //console.log('newParent: ', newParent)\r\n                        let listItems = []\r\n                        fs.files.where('parent').startsWithIgnoreCase(oldParent).each((e) => {\r\n                            listItems.push(e)\r\n                        }).then(() => {\r\n                            listItems.forEach(e => {\r\n                                //console.log('listItems e: ', e)\r\n                                //const parent = e.parent.replace(oldParent, newParent)\r\n                                //console.log('parent: ', parent)\r\n                                fs.files.add({\r\n                                    parent: newParent,\r\n                                    name: e.name,\r\n                                    type: e.type,\r\n                                    size: e.size,\r\n                                    data: e.data\r\n                                })                          \r\n                            })                            \r\n                        })\r\n                    } else { // it's a file\r\n                        const ext = getFileExtReal(item.name)\r\n                        const name = getFileName(item.name)    \r\n                        let newName = name\r\n                        let counter = 0\r\n                        let done = false             \r\n                        do {\r\n                            let filename = ext === '' ? newName : `${newName}.${ext}`\r\n                            const checkName = this.props.fsCurrentList.find(e => e.name === filename)\r\n                            if (checkName === undefined) {\r\n                                fs.transaction('rw', fs.files, async () => {\r\n                                    await fs.files.add({\r\n                                        parent: this.props.fsCurrentDir,\r\n                                        name: filename,\r\n                                        type: item.type,\r\n                                        size: item.size,\r\n                                        data: item.data\r\n                                    })\r\n                                })\r\n                                done = true\r\n                            } else {\r\n                                newName = `${name} - Copy`\r\n                                if (counter > 0) newName = `${newName} (${counter})`\r\n                                counter++\r\n                            }\r\n                        } while (!done)\r\n                    }\r\n                }\r\n            })\r\n            if (index === this.state.selectedCopy.length-1) {\r\n                if (this.cut) {\r\n                    this.state.selectedCopy.forEach((selected) => {\r\n                        fs.files.where({parent: selected.parent, name: selected.name}).delete()\r\n                    })\r\n                    this.setState({selectedCopy: []})\r\n                    this.cut = false                    \r\n                }\r\n                this.fsListDir(this.props.fsCurrentDir)\r\n            }\r\n        })\r\n        this.setState({selected: []})\r\n    }\r\n\r\n    deleteItem = () => {\r\n        this.state.selected.forEach(name => {\r\n            let item = this.props.fsCurrentList.find(e => e.name === name)\r\n            if (item !== undefined) {\r\n                if (item.type === 'dir') { // delete also all subitems\r\n                    fs.files.where('parent').startsWithIgnoreCase(this.fsBuildParent(item.parent, item.name)).delete()\r\n                }\r\n                fs.files.where({parent: item.parent, name: item.name}).delete().then(() => {\r\n                    this.fsListDir(this.props.fsCurrentDir)\r\n                })\r\n            }\r\n        })\r\n        this.setState({selected: []}) \r\n    }\r\n\r\n    showOthers = () => {\r\n        this.setState({visibleOthers: !this.state.visibleOthers})\r\n    }\r\n\r\n    exportItem = () => {\r\n        if (this.state.selected.length === 0) return\r\n        this.setState({visibleOSaveAsDlg: true})\r\n    }\r\n\r\n    itemClick = (e, row) => {\r\n        //console.log('itemClick: ', row.name)\r\n        const selectedIndex = this.state.selected.indexOf(row.name)\r\n        //console.log('selectedIndex: ', selectedIndex)\r\n        let newSelected = []\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, row.name)\r\n        } else if (selectedIndex >= 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            )\r\n        }\r\n        this.setState({selected: newSelected}, () => {\r\n            //console.log('this.state.selected: ', this.state.selected)\r\n        })\r\n    }\r\n\r\n    itemDoubleClick = (e, item) => {\r\n        if (item.type === 'dir') {\r\n            this.setState({visibleWaiting: true})\r\n            const fsCurrentDir = this.fsBuildParent(item.parent, item.name)\r\n            this.props.setCurrentDir(fsCurrentDir)\r\n            this.fsListDir(fsCurrentDir)\r\n        } else if (item.name === 'DICOMDIR') {\r\n            this.props.onOpenDicomdir(item)\r\n        } else {\r\n            this.props.setFsFileStore(item)\r\n            this.props.onOpen(item)\r\n        }\r\n    }\r\n\r\n    showDeleteDlg = () => {\r\n        this.setState({ visibleDeleteDlg: true })\r\n      }\r\n    \r\n    hideDeleteDlg = () => {\r\n        this.setState({ visibleDeleteDlg: false })\r\n    }\r\n\r\n    confirmDeleteDlg = () => {\r\n        this.hideDeleteDlg()\r\n        this.deleteItem()\r\n    }\r\n\r\n    hideAlreadyExistDlg = () => {\r\n        this.setState({ visibleAlreadyExistDlg: false })\r\n    }  \r\n\r\n    hideSaveAs = () => {\r\n        this.setState({ visibleOSaveAsDlg: false })\r\n    }\r\n\r\n    closeSaveAs = () => {\r\n        const filename = `${this.saveAsField.value}.zip`\r\n        this.setState({ visibleOSaveAsDlg: false }, () => {\r\n            let zip = new JSZip()\r\n            let listItems = []\r\n            fs.files.where('parent').startsWithIgnoreCase(this.props.fsCurrentDir).each((e) => {\r\n                if (this.state.selected.indexOf(e.parent) >= 0 || this.state.selected.indexOf(e.name) >= 0)\r\n                    listItems.push(e)\r\n            }).then(() => {\r\n                listItems.forEach((e) => {\r\n                    if (e.type !== 'dir') {\r\n                        zip.folder(e.parent).file(e.name, e.data)\r\n                    }\r\n                })\r\n                zip.generateAsync({type:\"blob\"}).then(blob => {\r\n                    saveAs(blob, filename)\r\n                })\r\n            })\r\n        })\r\n    }    \r\n\r\n    mouseDown = (e, item) => {\r\n        this.timer = setTimeout(() => { \r\n            this.itemDoubleClick(e, item)\r\n        }, 500)\r\n    }\r\n\r\n    mouseUp = (e) => {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    render() {   \r\n        const { classes } = this.props\r\n        const isSelected = name => this.state.selected.indexOf(name) !== -1\r\n        const visibleTextField = this.state.visibleTextField\r\n        const visibleOthers = this.state.visibleOthers\r\n        const visibleDeleteDlg = this.state.visibleDeleteDlg\r\n        const visibleAlreadyExistDlg = this.state.visibleAlreadyExistDlg\r\n        const visibleOSaveAsDlg = this.state.visibleOSaveAsDlg\r\n        const visibleOpenMultipleFilesDlg = this.state.visibleOpenMultipleFilesDlg\r\n        const visibleWaiting = this.state.visibleWaiting\r\n\r\n        let styleComponent = null\r\n        if (getSettingsFsView() === 'bottom') {\r\n            styleComponent = {marginTop: '0px', height: '275px'}\r\n        } else {\r\n            styleComponent = {marginTop: '48px', width: '350px'}\r\n        }\r\n\r\n        let totalItemsCount = ''\r\n        if (this.state.selected.length > 0)\r\n            totalItemsCount = `(${this.state.selected.length} / ${this.props.fsCurrentList.length} items)`\r\n        else \r\n            totalItemsCount = `(${this.props.fsCurrentList.length} items)`\r\n\r\n        //console.log('this.props.fsCurrentDir: ', this.props.fsCurrentDir)\r\n\r\n        return (\r\n            <PerfectScrollbar>\r\n                <div style={styleScrollbar}> \r\n                    <div style={styleComponent}>\r\n                    { visibleTextField ? \r\n                        <Paper component=\"form\" className={classes.textPaper}>\r\n                            <InputBase\r\n                                autoFocus\r\n                                className={classes.textInput}\r\n                                placeholder={this.state.textFieldLabel}\r\n                                defaultValue={this.state.textFieldValue}\r\n                                onChange={(event) => {\r\n                                    this.setState({textFieldValue: event.target.value})\r\n                                }}\r\n                            />\r\n                            <IconButton className={classes.textButton} onClick={this.confirmText}>\r\n                                <Icon path={mdiCheck} size={'1.2rem'} color={this.props.color} />\r\n                            </IconButton>\r\n                            <IconButton className={classes.textButton} onClick={this.cancelDir}>\r\n                                <Icon path={mdiClose} size={'1.2rem'} color={this.props.color} />\r\n                            </IconButton>                        \r\n                        </Paper>\r\n                    : \r\n                        <div>\r\n\r\n                            <div>\r\n                                <Toolbar variant=\"dense\">\r\n                                    <div className={classes.leftButtons}>\r\n                                    { visibleWaiting ?\r\n                                        <CircularProgress style={{marginLeft: '10px'}} size={20} color=\"secondary\" />\r\n                                    : \r\n                                        <Tooltip title=\"Previous folder\">\r\n                                            <IconButton color=\"inherit\" onClick={this.previousDir} >\r\n                                                <Icon path={mdiChevronLeft} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>       \r\n                                        </Tooltip>                                     \r\n                                    }\r\n                        \r\n                                    </div>\r\n                                    <div className={classes.toolbarButtons}>\r\n                                        <Tooltip title=\"Select/unselect all files\">\r\n                                            <IconButton color=\"inherit\" onClick={this.doSelectUnselect}>\r\n                                                <Icon path={mdiCheckBoxOutline} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>\r\n                                        </Tooltip>    \r\n                                        <Tooltip title=\"Open selected files\">\r\n                                            <IconButton color=\"inherit\" onClick={this.openSelectedFiles}>\r\n                                                <Icon path={mdiFolderOutline} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>\r\n                                        </Tooltip>                            \r\n                                        <Tooltip title=\"Create a new directory\">\r\n                                            <IconButton color=\"inherit\" onClick={this.createDir}>\r\n                                                <Icon path={mdiFolderPlusOutline} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Rename the last selected item\">\r\n                                            <IconButton color=\"inherit\" onClick={this.renameItem}>\r\n                                                <Icon path={mdiSquareEditOutline} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton> \r\n                                        </Tooltip>\r\n\r\n                                        <IconButton color=\"inherit\" onClick={this.showOthers}>\r\n                                            <Icon path={mdiDotsHorizontal} size={'1.2rem'} color={this.props.color} />\r\n                                        </IconButton>                           \r\n                                    </div>            \r\n                                </Toolbar>\r\n                            </div> \r\n\r\n                            { visibleOthers ?\r\n                                <div>\r\n                                    <Toolbar variant=\"dense\">\r\n                                        <div className={classes.toolbarButtons}>\r\n                                            <Tooltip title=\"Move the selected items to the clipboard\">                          \r\n                                                <IconButton color=\"inherit\" onClick={this.cutItem}>\r\n                                                    <Icon path={mdiContentCut} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton> \r\n                                            </Tooltip>  \r\n                                            <Tooltip title=\"Copy the selected items to the clipboard\">\r\n                                                <IconButton color=\"inherit\" onClick={this.copyItem}>\r\n                                                    <Icon path={mdiContentCopy} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Paste clipboard contents to current location\">                             \r\n                                                <IconButton color=\"inherit\" onClick={this.pasteItem}>\r\n                                                    <Icon path={mdiContentPaste} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>   \r\n                                            </Tooltip>  \r\n                                            <Tooltip title=\"Delete the selected items\">    \r\n                                                <IconButton color=\"inherit\" onClick={this.showDeleteDlg}>\r\n                                                    <Icon path={mdiDeleteOutline} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>  \r\n                                            </Tooltip>                                    \r\n                                            <Tooltip title=\"Save the opened image to sandbox file system\"> \r\n                                                <IconButton color=\"inherit\" onClick={this.saveItem}>\r\n                                                    <Icon path={mdiContentSaveOutline} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>      \r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Export the selected items as zipped archive\">\r\n                                                <IconButton color=\"inherit\" onClick={this.exportItem}>\r\n                                                    <Icon path={mdiExportVariant} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>   \r\n                                            </Tooltip>     \r\n                                            {/*<IconButton color=\"inherit\" onClick={this.downloadItem}>\r\n                                                <Icon path={mdiDownload} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>*/}                                     \r\n                                        </div>            \r\n                                    </Toolbar>\r\n                                </div>\r\n                            : null\r\n                            }\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <Typography \r\n                                        type=\"caption text\" \r\n                                        style={{fontSize: '0.75em', marginLeft: '15px', color: 'rgba(146, 146, 146, 1)', float: 'left'}}>\r\n                                            {'/'+this.props.fsCurrentDir+' '}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography \r\n                                        type=\"caption text\" \r\n                                        style={{fontSize: '0.75em', marginRight: '5px', color: 'rgba(146, 146, 146, 1)', float: 'right'}}>\r\n                                            { totalItemsCount }\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>    \r\n\r\n                            { visibleWaiting ?\r\n                                <div style={{marginTop: '20px', position: 'absolute'}}>\r\n                                    <LinearProgress color=\"secondary\" />\r\n                                </div>\r\n                            : null  \r\n                            }\r\n        \r\n                        </div>\r\n                        \r\n                    }\r\n                    \r\n                    <div style={{height: '200px'}}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Name</TableCell>\r\n                                        <TableCell align=\"left\">Type</TableCell>\r\n                                        <TableCell align=\"left\">Size</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.props.fsCurrentList.map((row) => {\r\n                                    const isItemSelected = isSelected(row.name)\r\n                                    return (\r\n                                        <TableRow \r\n                                            key={`${row.parent}/${row.name}`} \r\n                                            role='button' \r\n                                            hover\r\n                                            selected={isItemSelected}\r\n                                            onClick={(e) => {this.itemClick(e, row)}}\r\n                                            onDoubleClick={(e) => {this.itemDoubleClick(e, row)}}\r\n                                            onTouchStart={(e) => this.mouseDown(e, row)} \r\n                                            onTouchEnd={(e) => this.mouseUp(e, row)}\r\n                                            onMouseDown={(e) => this.mouseDown(e, row)} \r\n                                            onMouseUp={(e) => this.mouseUp(e, row)}\r\n                                        >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                            <Typography className={classes.tableCellText}>\r\n                                                {row.name}\r\n                                            </Typography>    \r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{row.type}</TableCell>\r\n                                            <TableCell align=\"left\">{formatBytes(row.size)}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>   \r\n\r\n                    <Dialog\r\n                        open={visibleDeleteDlg}\r\n                        onClose={this.hideDeleteDlg}\r\n                    >\r\n                        <DialogTitle>{\"Are you sure to delete selected items?\"}</DialogTitle>\r\n                        <DialogActions>\r\n                            <Button onClick={this.hideDeleteDlg}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.confirmDeleteDlg} autoFocus>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>    \r\n\r\n                    <Dialog\r\n                        open={visibleAlreadyExistDlg}\r\n                        onClose={this.hideAlreadyExistDlg}\r\n                    >\r\n                        <DialogTitle>{\"An item with this name already exists!\"}</DialogTitle>\r\n                        <DialogActions>\r\n                            <Button onClick={this.hideAlreadyExistDlg} autoFocus>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>    \r\n\r\n                    <Dialog\r\n                        open={visibleOSaveAsDlg}\r\n                    >\r\n                        <DialogTitle>Export archive</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Specify a file name for the archive:\r\n                            </DialogContentText>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"id-open-url\"\r\n                                inputRef={input => (this.saveAsField = input)}\r\n                                fullWidth\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={() => this.hideSaveAs()} >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={() => this.closeSaveAs()}>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>          \r\n\r\n                    {visibleOpenMultipleFilesDlg ? <OpenMultipleFilesDlg onClose={this.hideOpenMultipleFilesDlg} files={this.files} origin={'fs'} /> : null}                    \r\n                </div>\r\n                </div>\r\n            </PerfectScrollbar>\r\n        )\r\n    }              \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      files: state.files,\r\n      localFileStore: state.localFile,\r\n      fsFileStore: state.fsFile,  \r\n      activeDcm: state.activeDcm,\r\n      fsCurrentDir: state.fsCurrentDir,\r\n      fsCurrentList: state.fsCurrentList,\r\n      fsZippedFile: state.fsZippedFile,\r\n      fsRefresh: state.fsRefresh,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentDir: (dir) => dispatch(setFsCurrentDir(dir)),\r\n        setCurrentList: (list) => dispatch(setFsCurrentList(list)),\r\n        setFsZippedFile: (file) => dispatch(setZippedFile(file)),\r\n        setFsFileStore: (file) => dispatch(fsFileStore(file)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FsUI))\r\n","import React, { PureComponent } from 'react'\r\n//import Draggable from 'react-draggable'\r\n//import IconButton from '@material-ui/core/IconButton'\r\nimport Slider from '@material-ui/core/Slider'\r\n//import HighlightOffIcon from '@material-ui/icons/HighlightOff'\r\nimport {connect} from 'react-redux'\r\n//import * as cornerstone from 'cornerstone-core'\r\n// import { import as csTools } from 'cornerstone-tools'\r\n\r\n// const getRGBPixels = csTools('util/getRGBPixels')\r\n\r\nconst HIST_WIDTH = 256\r\nconst HIST_HEIGHT = 128\r\nconst N_BINS = 256\r\n\r\nconst style = {\r\n  width: '273px', \r\n  padding: '8px 8px 8px 8px', \r\n  backgroundColor: '#444444',\r\n}\r\n\r\nconst styleSlider = {\r\n  width: '255px',\r\n  marginTop: '-9px',\r\n}\r\n\r\nconst styleCanvasGradient = {\r\n  marginTop: '-9px',\r\n}\r\n\r\nconst styleTable = {\r\n  borderCollapse: 'collapse',\r\n  fontFamily: 'Courier, monospace',\r\n  fontSize: '67%',\r\n  width: '100%',\r\n}\r\n\r\nconst styleTableTd = {\r\n  tableLayout: 'fixed',\r\n  width: '25%',\r\n}\r\n\r\nclass Histogram extends PureComponent {\r\n    constructor(props) {\r\n      super(props)\r\n      this.canvasHistogram = React.createRef()\r\n      this.canvasGradient = React.createRef()\r\n    }\r\n\r\n    state = {\r\n      activeDrags: 0,\r\n      deltaPosition: {\r\n        x: 0, y: 0\r\n      },\r\n      controlledPosition: {\r\n        x: -400, y: 200\r\n      },\r\n      value: 128,\r\n      histCount: 0,\r\n      valueScale: 0,\r\n      minHist: 0,\r\n      maxHist: 0,\r\n      mean: 0,\r\n      stdDev: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n      //console.log('Histogram - componentDidMount: ')\r\n      //this.image = this.props.activeDcm.image\r\n      //this.element = this.props.activeDcm.element\r\n      //this.isDicom = this.props.activeDcm.isDicom\r\n      //this.pixelData = this.props.activeDcm.image.getPixelData()\r\n      const canvasH = this.canvasHistogram.current\r\n      const ctxH = this.canvasHistogram.current.getContext(\"2d\")\r\n      ctxH.translate(0, canvasH.height)\r\n      ctxH.scale(1, -1)\r\n\r\n      this.updateCanvas()     \r\n    }\r\n    \r\n    componentDidUpdate() {\r\n      //console.log('Histogram - componentDidUpdate: ')\r\n      if (this.props.activeDcm === null) {\r\n        const ctxH = this.canvasHistogram.current.getContext(\"2d\")\r\n        ctxH.clearRect(0, 0, ctxH.canvas.width, ctxH.canvas.height)\r\n        return\r\n      }\r\n      this.updateCanvas() \r\n    }\r\n\r\n    getMousePos(canvas, evt) {\r\n      const rect = canvas.getBoundingClientRect()\r\n      return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n      }\r\n    }\r\n\r\n    getRGBPixelsImage(x, y, width, height) {\r\n      const pixelData = this.props.activeDcm.image.getPixelData()\r\n      const storedPixelData = []\r\n      x = Math.round(x)\r\n      y = Math.round(y)   \r\n      let index = 0\r\n      let spIndex, row, column\r\n    \r\n      for (row = 0; row < height; row++) {\r\n        for (column = 0; column < width; column++) {\r\n          spIndex = ((row + y) * this.props.activeDcm.image.rows + (column + x)) * 4\r\n          const red = pixelData[spIndex]\r\n          const green = pixelData[spIndex + 1]\r\n          const blue = pixelData[spIndex + 2]\r\n          const alpha = pixelData[spIndex + 3]\r\n  \r\n          storedPixelData[index++] = red\r\n          storedPixelData[index++] = green\r\n          storedPixelData[index++] = blue\r\n          storedPixelData[index++] = alpha\r\n        }\r\n      }\r\n      return storedPixelData\r\n    }\r\n\r\n    getPixelsImage(x, y, width, height) {\r\n      const pixelData = this.props.activeDcm.image.getPixelData()\r\n      const storedPixelData = []\r\n      x = Math.round(x)\r\n      y = Math.round(y)   \r\n      let index = 0\r\n      let spIndex, row, column\r\n    \r\n      for (row = 0; row < height; row++) {\r\n        for (column = 0; column < width; column++) {\r\n          spIndex = ((row + y) * this.props.activeDcm.image.rows + (column + x)) \r\n          storedPixelData[index++] = pixelData[spIndex]\r\n        }\r\n      }\r\n      return storedPixelData\r\n    }    \r\n\r\n    getPixel(x, y) {\r\n      let sp = []\r\n      if (this.props.activeDcm.isDicom) {\r\n        if (this.props.activeDcm.image.color) {\r\n          //sp = getRGBPixels(this.element, x, y, 1, 1)\r\n          //sp = cornerstone.getStoredPixels(this.element, x, y, 1, 1)\r\n          sp = this.getRGBPixelsImage(x, y, 1, 1)\r\n        } else {\r\n          // sp = cornerstone.getStoredPixels(this.props.activeDcm.element, x, y, 1, 1)\r\n          sp = this.getPixelsImage(x, y, 1, 1)\r\n        }\r\n      } else {\r\n        sp = this.getRGBPixelsImage(x, y, 1, 1)\r\n      }\r\n      return sp[0]\r\n    }\r\n\r\n    updateCanvas() {\r\n      if (this.props.activeDcm === null) return\r\n      const image = this.props.activeDcm.image\r\n      if (image === null) return\r\n      //const element = this.props.element\r\n      const maxPixelValue = image.maxPixelValue\r\n      const minPixelValue = image.minPixelValue\r\n      //const k = Math.pow(2, this.props.bitsStored)\r\n      const minHist = minPixelValue+image.intercept\r\n      const maxHist = maxPixelValue+image.intercept\r\n      const lenHist = maxHist-minHist+1\r\n      const binSize = lenHist / N_BINS\r\n      let zero256 = Math.floor(Math.abs(minHist) / binSize)\r\n      let stepWW = Math.round(image.windowWidth / binSize / 2)\r\n      let stepWC = Math.round(image.windowCenter / binSize)\r\n\r\n      this.setState({minHist: minHist})\r\n      this.setState({maxHist: maxHist})\r\n      this.binSize = binSize\r\n\r\n      //console.log('activeDcm: ', this.props.activeDcm)\r\n      //console.log('image: ', )\r\n      //console.log('getPixelData: ', image.getPixelData())\r\n      //console.log('columns: ', image.columns)\r\n      //console.log('rows: ', image.rows)\r\n      //console.log('isDicom: ', this.props.activeDcm.isDicom)\r\n      //console.log('bitsStored: ', k)\r\n      //console.log('minHist: ', minHist)\r\n      //console.log('maxHist: ', maxHist)\r\n      //console.log('lenHist: ', lenHist)\r\n      //console.log('binSize: ', binSize)\r\n      //console.log('zeroHist: ', zero256)\r\n      //console.log('stepWW: ', stepWW)\r\n      //console.log('stepWC: ', stepWC)\r\n      //console.log('zero256-stepWW: ', zero256-stepWW)\r\n      //console.log('zero256+stepWW: ', zero256+stepWW)   \r\n      //console.log('image.color: ', image.color)\r\n      //console.log('image.slope: ', image.slope)\r\n      //console.log('image.intercept: ', image.intercept)\r\n\r\n      let m = 0 // the mean\r\n      // build histogram\r\n      let hist = Array(lenHist).fill(0) \r\n      for (let y = 0; y < image.columns; y++) {\r\n        for (let x = 0; x < image.rows; x++) {\r\n          let sp = this.getPixel(x, y)\r\n          let mo = sp * image.slope + image.intercept\r\n          hist[mo-minHist] += 1\r\n          m += mo\r\n        } \r\n      }  \r\n\r\n      m = m / (image.columns * image.rows)\r\n      this.setState({mean: m})  \r\n\r\n      //console.log('hist: ', hist)\r\n      //console.log('mean: ', m)\r\n\r\n      // calculate standard deviation\r\n      let s = 0\r\n      for (let y = 0; y < image.columns; y++)\r\n        for (let x = 0; x < image.rows; x++) {\r\n          let sp = this.getPixel(x, y)\r\n          let mo = sp * image.slope + image.intercept\r\n          s += Math.pow(mo-m, 2)\r\n        }  \r\n      s = Math.sqrt(s / (image.columns * image.rows))\r\n      this.setState({stdDev: s})\r\n\r\n      // binning the histogram \r\n      let hist256 = Array(N_BINS).fill(0) \r\n      let max = 0\r\n\r\n      if (binSize < 1) {\r\n        let binStep = Math.round(N_BINS / lenHist)\r\n        let iHist = 0\r\n        let i = 0\r\n        while (i < N_BINS) {\r\n          for (let j=0; j < binStep; j++) { \r\n            hist256[i] = iHist < lenHist ? hist[iHist] : 0\r\n            if (max < hist256[i]) max = hist256[i]  \r\n            i++\r\n          }   \r\n          iHist++     \r\n        }\r\n\r\n        /*for (let i=0; i < N_BINS; i+=binStep) {\r\n          const k = Math.floor(i)\r\n          //console.log(`i: ${k} `)\r\n          for (let j=0; j < Math.round(binStep); j++) { \r\n            console.log(`i: ${k} - j: ${j} - iHist: ${iHist} - hist[iHist]: ${hist[iHist]}`)\r\n            hist256[k+j] = hist[iHist]\r\n          }\r\n          iHist++\r\n          if (max < hist256[k]) max = hist256[k] \r\n        }*/\r\n      } else {\r\n        let step = 0\r\n        for (let i=0; i < N_BINS; i++) {\r\n          for (let j=step; j < Math.round(step+binSize); j++) {\r\n            if (j >= lenHist) break\r\n            hist256[i] += hist[j]\r\n          }\r\n          if (max < hist256[i]) { max = hist256[i] }\r\n          step = Math.round(step+binSize)\r\n        }        \r\n      }\r\n\r\n      this.hist256 = hist256\r\n\r\n      //console.log('hist256: ', hist256)\r\n      //console.log('max: ', max)\r\n\r\n      if (max / HIST_HEIGHT > 100) max = max / 5\r\n      \r\n      const canvasH = this.canvasHistogram.current\r\n      const ctxH = this.canvasHistogram.current.getContext(\"2d\")\r\n      ctxH.clearRect(0, 0, ctxH.canvas.width, ctxH.canvas.height)\r\n\r\n      canvasH.addEventListener('pointermove', (evt) => {\r\n        const mousePos = this.getMousePos(canvasH, evt)\r\n        this.setState({histCount: hist256[mousePos.x]})\r\n        let p = Math.round(mousePos.x * this.binSize)\r\n        this.setState({valueScale: p+minHist})\r\n      }, true)\r\n\r\n      //console.log('value: ', (m-minHist)/binSize)\r\n      let value = Math.round((m-minHist)/binSize)\r\n      this.setState({value: value})\r\n      this.setState({valueScale: m})\r\n      this.setState({histCount: hist256[value]})\r\n\r\n      // draw WindowWidth area\r\n      ctxH.beginPath()\r\n      ctxH.fillStyle = 'rgba(210, 210, 210, 0.5)'\r\n      ctxH.fillRect(zero256-stepWW+stepWC, 0, stepWW*2, HIST_HEIGHT)\r\n\r\n      // draw histogram\r\n      ctxH.beginPath()\r\n      ctxH.strokeStyle = 'rgba(0, 0, 0, 1.0)'\r\n      for (let i = 0; i < N_BINS; i++) {\r\n        let h = Math.round((hist256[i]/max)*HIST_HEIGHT)\r\n        ctxH.moveTo(i, 0)\r\n        ctxH.lineTo(i, h)\r\n        ctxH.stroke()\r\n      }\r\n      \r\n      // draw WindowCenter cursor\r\n      ctxH.beginPath()\r\n      ctxH.strokeStyle = 'rgba(140, 140, 140, 0.5)'\r\n      ctxH.moveTo(zero256+stepWC, 0)\r\n      ctxH.lineTo(zero256+stepWC, HIST_HEIGHT)\r\n      ctxH.lineWidth = 1\r\n      ctxH.stroke()\r\n          \r\n      let lowX = zero256-stepWW+stepWC\r\n      let highX = zero256+stepWW+stepWC\r\n\r\n      // draw gradient scale\r\n      const canvasG = this.canvasGradient.current\r\n      const ctxG = canvasG.getContext(\"2d\")\r\n\r\n      ctxG.fillStyle = \"#000000\"\r\n      ctxG.fillRect(0, 0, lowX, 10)\r\n\r\n      let grd = ctxG.createLinearGradient(lowX, 0, highX+(lowX < 0 ? lowX : 0), 0)\r\n      grd.addColorStop(0, \"black\")\r\n      grd.addColorStop(1, \"white\")\r\n      ctxG.fillStyle = grd\r\n      ctxG.fillRect(lowX, 0, highX, 10)\r\n    }\r\n        \r\n    handleChangeValue = (event, newValue) => {\r\n      //console.log('newValue: ', newValue)\r\n      //console.log('(newValue*this.binSize)+this.state.minHist: ', (newValue*this.binSize)+this.state.minHist)\r\n      //console.log('this.hist256[newValue]: ', this.hist256[newValue])\r\n      this.setState({value: newValue})\r\n      this.setState({valueScale: (newValue*this.binSize)+this.state.minHist})\r\n      this.setState({histCount: this.hist256[newValue]})\r\n    }\r\n      \r\n    hide = () => {\r\n      this.props.onClose()\r\n    }\r\n\r\n    onDrag = (e, ui) => {\r\n      const {x, y} = this.state.deltaPosition;\r\n      this.setState({\r\n        deltaPosition: {\r\n          x: x + ui.deltaX,\r\n          y: y + ui.deltaY,\r\n        }\r\n      })\r\n    }\r\n  \r\n    onStart = () => {\r\n      this.setState({activeDrags: this.state.activeDrags+1})\r\n    }\r\n  \r\n    onStop = () => {\r\n      this.setState({activeDrags: this.state.activeDrags-1})\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div style={style}>\r\n          <div>\r\n            <canvas \r\n              ref={this.canvasHistogram} \r\n              width={HIST_WIDTH} \r\n              height={HIST_HEIGHT} \r\n              style={{backgroundColor: \"#FFFFFF\", cursor:'crosshair'}} \r\n            />\r\n          </div>  \r\n          <div style={styleCanvasGradient}>\r\n            <canvas ref={this.canvasGradient} width={HIST_WIDTH} height={10} style={{backgroundColor: \"#FFFFFF\"}} />\r\n          </div>\r\n          <div style={styleSlider}>\r\n            <Slider\r\n              value={this.state.value}\r\n              onChange={this.handleChangeValue}\r\n              aria-labelledby=\"continuous-slider\"\r\n              color=\"secondary\"\r\n              min={0}\r\n              max={255}\r\n            />\r\n          </div>\r\n          <div>\r\n            <table style={styleTable}>\r\n              <tbody>\r\n                <tr>\r\n                  <td style={styleTableTd}>min:</td>\r\n                  <td style={styleTableTd}>{this.state.minHist}</td>\r\n                  <td style={styleTableTd}>max:</td>\r\n                  <td style={styleTableTd}>{this.state.maxHist}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>mean:</td>\r\n                  <td>{parseFloat(this.state.mean).toFixed(3)}</td>\r\n                  <td>std dev:</td>\r\n                  <td>{parseFloat(this.state.stdDev).toFixed(3)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>count:</td>\r\n                  <td>{this.state.histCount}</td>\r\n                  <td>value:</td>\r\n                  <td>{parseFloat(this.state.valueScale).toFixed(3)}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activeDcmIndex: state.activeDcmIndex,\r\n    activeDcm: state.activeDcm,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Histogram)\r\n","import React, { PureComponent } from 'react'\r\n\r\nconst styleTable = {\r\n  borderCollapse: 'collapse',\r\n  width: '100px',\r\n  height: '100px',\r\n}\r\n\r\nconst styleTableTd = {\r\n  width: '25px',\r\n  height: '25px',\r\n  border: 'solid 1px black',\r\n}\r\n\r\nclass LayoutTool extends PureComponent {\r\n    constructor(props) {\r\n      super(props)\r\n      this.tableRef = React.createRef()\r\n      this.state = {\r\n        row: this.props.row,\r\n        col: this.props.col,\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.initTable()\r\n    }\r\n\r\n    initTable = () => {\r\n      let row = this.state.row\r\n      let col = this.state.col\r\n      let rows = this.tableRef.current.rows\r\n      for (let i=0; i <= row; i++) {\r\n        for(let j=0; j <= col; j++) {\r\n          rows[i].cells[j].bgColor = '#AAAAAA'\r\n        }\r\n      }\r\n    }\r\n\r\n    cellClick = (e) => {\r\n      let row = e.target.parentNode.rowIndex\r\n      let col = e.target.cellIndex\r\n\r\n      this.setState({row: row, col: col})\r\n\r\n      let rows = this.tableRef.current.rows\r\n      for (let i=0; i <= 3; i++) {\r\n        for(let j=0; j <= 3; j++) {\r\n          rows[i].cells[j].bgColor = '#444444'\r\n        }\r\n      }\r\n      for (let i=0; i <= row; i++) {\r\n        for(let j=0; j <= col; j++) {\r\n          rows[i].cells[j].bgColor = '#AAAAAA'\r\n        }\r\n      }\r\n      this.props.onChange(row+1, col+1)\r\n    }\r\n\r\n    renderTable() {\r\n      const rows = ['', '', '', '']\r\n      return (\r\n        rows.map((row, i) => {\r\n          return (\r\n            <tr key={`${i}`}>\r\n               <td style={styleTableTd} onClick={this.cellClick} />\r\n               <td style={styleTableTd} onClick={this.cellClick} />\r\n               <td style={styleTableTd} onClick={this.cellClick} />\r\n               <td style={styleTableTd} onClick={this.cellClick} />\r\n            </tr>\r\n          )\r\n        })\r\n      )\r\n   }\r\n\r\n    render() {  \r\n      return (\r\n          <div>            \r\n            <table style={styleTable} ref={this.tableRef}>\r\n              <tbody>\r\n                {this.renderTable()}                   \r\n              </tbody>\r\n            </table>\r\n          </div>     \r\n      )\r\n    }\r\n\r\n}\r\n\r\nexport default LayoutTool\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    listItemText:{\r\n        fontSize:'0.9em',\r\n    }\r\n})\r\n\r\nclass MeasureItem extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.noteField = React.createRef()\r\n    \r\n      }\r\n\r\n    state = { \r\n        visibleDlgNote: false,\r\n        visibleDlgDelete: false,\r\n    }\r\n\r\n    showDlgNote = () => {\r\n        this.setState({ visibleDlgNote: true })\r\n    }\r\n    \r\n    hideDlgNote = () => {\r\n        this.setState({ visibleDlgNote: false })\r\n    }\r\n\r\n    showDlgDelete = () => {\r\n        this.setState({ visibleDlgDelete: true })\r\n    }\r\n    \r\n    hideDlgDelete = () => {\r\n        this.setState({ visibleDlgDelete: false })\r\n    }\r\n\r\n    handleOnChangeNote = event => {\r\n        this.setState({ note: event.target.value })\r\n    }\r\n\r\n    confirmNote = (index) => {\r\n        this.hideDlgNote()\r\n        this.props.measurements[index].note = this.noteField.value\r\n    }   \r\n\r\n    confirmDelete = (index) => {\r\n        this.hideDlgDelete()\r\n        this.props.toolRemove(index)\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.showDlgNote()\r\n    }\r\n    \r\n    onDelete = () => {\r\n        this.showDlgDelete()\r\n    }\r\n    \r\n    render() {    \r\n        const { classes } = this.props\r\n\r\n        const item = this.props.item\r\n        let index = this.props.index\r\n        let pText = ''\r\n        let sText = ''\r\n        //console.log('item: ', item)\r\n        switch (item.tool) {\r\n            case 'Length':\r\n                pText = `${item.data.length.toFixed(2)} ${item.data.unit}`\r\n                sText = item.note\r\n                break\r\n            case 'Angle':\r\n                pText = `${item.data.rAngle} °`\r\n                sText = item.note\r\n                break\r\n            case 'EllipticalRoi':\r\n                pText = <div>\r\n                            <div> A: {item.data.cachedStats.area.toFixed(2)} mm² </div>\r\n                            <div> M: {item.data.cachedStats.mean.toFixed(2)} {item.data.unit} </div>\r\n                            <div> SD: {item.data.cachedStats.stdDev.toFixed(2)} {item.data.unit} </div>\r\n                        </div>\r\n                sText = item.note            \r\n                break    \r\n            case 'RectangleRoi':\r\n                pText = <div>\r\n                            <div> A: {item.data.cachedStats.area.toFixed(2)} mm² </div>\r\n                            <div> M: {item.data.cachedStats.mean.toFixed(2)} {item.data.unit} </div>\r\n                            <div> SD: {item.data.cachedStats.stdDev.toFixed(2)} {item.data.unit} </div>\r\n                        </div>\r\n                sText = item.note\r\n                break          \r\n            case 'FreehandRoi':\r\n                //console.log('item: ', item.data.area)\r\n                //if (item.data.area !== undefined) {\r\n                pText = <div>\r\n                            <div> A: {item.data.area.toFixed(2)} mm² </div>\r\n                            <div> M: {item.data.meanStdDev.mean.toFixed(2)} {item.data.unit} </div>\r\n                            <div> SD: {item.data.meanStdDev.stdDev.toFixed(2)} {item.data.unit} </div>\r\n                        </div>\r\n                sText = item.note\r\n                //}\r\n                break                                  \r\n            default:\r\n                break    \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ListItem>\r\n                    <ListItemText classes={{primary:classes.listItemText}} primary={pText} secondary={sText} />\r\n                    <Toolbar>\r\n                        <IconButton edge=\"end\" onClick={() => this.onEdit(index)}>\r\n                            <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" onClick={() => this.onDelete(index)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </ListItem>\r\n                \r\n                { this.state.visibleDlgNote ?\r\n                    <Dialog\r\n                        open={this.state.visibleDlgNote}\r\n                        onClose={this.hideDlgNote}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                    >\r\n                        <DialogTitle id=\"form-dialog-title\">{\"Note for measurement:\"}</DialogTitle>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                ref=\"noteField\"\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"note\"\r\n                                fullWidth\r\n                                defaultValue={this.props.measurements[index].note}\r\n                                inputRef={input => (this.noteField = input)}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.hideDlgNote} >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={() => this.confirmNote(index)} autoFocus>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                : null }\r\n\r\n                <Dialog\r\n                    open={this.state.visibleDlgDelete}\r\n                    onClose={this.hideDlgNote}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete the measurement?\"}</DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.hideDlgDelete}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={() => this.confirmDelete(index)} autoFocus>\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        measurements: state.measurements,\r\n    }\r\n}\r\n\r\n//export default connect(mapStateToProps, )(MeasureItem)\r\nexport default connect(mapStateToProps)(withStyles(styles)(MeasureItem))\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport MeasureItem from './MeasureItem'\r\n\r\nclass Measurements extends PureComponent {\r\n\r\n  state = { \r\n    visibleClearMeasureDlg: false,\r\n  }\r\n\r\n  showClearMeasureDlg = () => {\r\n    this.setState({ visibleClearMeasureDlg: true })\r\n  }\r\n\r\n  hideClearMeasureDlg = () => {\r\n      this.setState({ visibleClearMeasureDlg: false })\r\n  }\r\n\r\n  confirmClearMeasureDlg = () => {\r\n    this.hideClearMeasureDlg()\r\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools')\r\n  }\r\n\r\n  render() {   \r\n    //const classes = this.props.classes\r\n\r\n    return (\r\n      <div>\r\n\r\n        <div>\r\n          { this.props.measurements !== null ?\r\n              this.props.measurements.map((item, index) => {\r\n                  return <MeasureItem item={item} index={index} toolRemove={this.props.toolRemove} key={index} />\r\n              }) \r\n            : null }\r\n        </div>\r\n        \r\n        <Dialog\r\n            open={this.state.visibleClearMeasureDlg}\r\n            onClose={this.hideClearMeasureDlg}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to remove all the measurements?\"}</DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={this.hideClearMeasureDlg}>\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={this.confirmClearMeasureDlg} autoFocus>\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    measurements: state.measurements,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Measurements)\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { \r\n  getSettingsSaveAs, \r\n  setSettingsSaveAs, \r\n  getSettingsSaveInto,\r\n  setSettingsSaveInto,\r\n  getSettingsDcmHeader, \r\n  setSettingsDcmHeader, \r\n  getSettingsOverlay, \r\n  setSettingsOverlay,\r\n  getSettingsFsView,\r\n  setSettingsFsView,\r\n  getSettingsDicomdirView,\r\n  setSettingsDicomdirView,\r\n  getSettingsMprInterpolation,\r\n  setSettingsMprInterpolation,\r\n} from '../functions'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  formLabel: {\r\n    fontSize: '0.85em',\r\n  },\r\n  radioControl: {\r\n    size: 'small',\r\n  },  \r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n    fontSize: '0.95em',\r\n  },\r\n}))\r\n\r\n/*const Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n})*/\r\n\r\nconst Settings = ({ onClose }) => {\r\n  \r\n  let saveAs = getSettingsSaveAs()\r\n  let saveInto = getSettingsSaveInto()\r\n  let exportAs = getSettingsDcmHeader()\r\n  let overlay = getSettingsOverlay()\r\n  let fsView = getSettingsFsView()\r\n  let dicomdirView = getSettingsDicomdirView()\r\n  let mprInterpolation = getSettingsMprInterpolation()\r\n\r\n  //const isIndexedDB = false // 'indexedDB' in window\r\n  \r\n  const handleChangeSaveAs = event => {\r\n    setState({ ...state, 'saveAs': event.target.value })\r\n    setSettingsSaveAs(event.target.value)\r\n  }\r\n  \r\n  const handleChangeSaveInto = event => {\r\n    setState({ ...state, 'saveInto': event.target.value })\r\n    setSettingsSaveInto(event.target.value)\r\n  }\r\n\r\n  const handleChangeExportAs = event => {\r\n    setState({ ...state, 'exportAs': event.target.value })\r\n    setSettingsDcmHeader(event.target.value)\r\n  }\r\n\r\n  const handleChangeOverlay = event => {\r\n    setState({ ...state, 'overlay': event.target.checked })\r\n    setSettingsOverlay(event.target.checked)\r\n  }\r\n\r\n  const handleChangeFsView = event => {\r\n    setState({ ...state, 'fsView': event.target.value })\r\n    setSettingsFsView(event.target.value)\r\n  }\r\n\r\n  const handleChangeDicomdirView = event => {\r\n    setState({ ...state, 'dicomdirView': event.target.value })\r\n    setSettingsDicomdirView(event.target.value)\r\n  }  \r\n\r\n  const handleChangeMprInterpolation = event => {\r\n    setState({ ...state, 'mprInterpolation': event.target.value })\r\n    setSettingsMprInterpolation(event.target.value)\r\n  }  \r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = React.useState({\r\n    saveAs: saveAs,\r\n    saveInto: saveInto,\r\n    exportAs: exportAs,\r\n    overlay: overlay,\r\n    fsView: fsView,\r\n    dicomdirView: dicomdirView,\r\n    mprInterpolation: mprInterpolation,\r\n  })\r\n\r\n  return (\r\n    <Dialog fullScreen open={true} onClose={onClose}> {/* TransitionComponent={Transition} */}\r\n      <AppBar className={classes.appBar} elevation={0}>\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Settings\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <PerfectScrollbar> \r\n      <div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox \r\n                checked={state.overlay} \r\n                onChange={handleChangeOverlay}\r\n                value=\"overlay\" \r\n                size='small'\r\n              />\r\n            }\r\n            label=\"Show overlay Information\"\r\n          />\r\n        </FormControl>\r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Open sandbox file system from:</FormLabel>\r\n          <RadioGroup size='small' aria-label=\"filesystem\" name=\"filesystem\" value={state.fsView} onChange={handleChangeFsView}>\r\n            <FormControlLabel value=\"left\" control={<Radio size='small' />} label=\"left\" />\r\n            <FormControlLabel value=\"right\" control={<Radio size='small' />} label=\"right\" />\r\n            <FormControlLabel value=\"bottom\" control={<Radio size='small' />} label=\"bottom\" />\r\n          </RadioGroup>\r\n        </FormControl>    \r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Open DICOMDIR panel from:</FormLabel>\r\n          <RadioGroup size='small' aria-label=\"dicomdir\" name=\"dicomdir\" value={state.dicomdirView} onChange={handleChangeDicomdirView}>\r\n            <FormControlLabel value=\"left\" control={<Radio size='small' />} label=\"left\" />\r\n            <FormControlLabel value=\"right\" control={<Radio size='small' />} label=\"right\" />\r\n            <FormControlLabel value=\"bottom\" control={<Radio size='small' />} label=\"bottom\" />\r\n          </RadioGroup>\r\n        </FormControl>                    \r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Save screenshot as:</FormLabel>\r\n          <RadioGroup aria-label=\"saveas\" name=\"saveas\" value={state.saveAs} onChange={handleChangeSaveAs}>\r\n            <FormControlLabel value=\"jpeg\" control={<Radio size='small' />} label=\"JPEG\" />\r\n            <FormControlLabel value=\"png\" control={<Radio size='small' />} label=\"PNG\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Save screenshot into:</FormLabel>\r\n          <RadioGroup aria-label=\"saveinto\" name=\"saveinto\" value={state.saveInto} onChange={handleChangeSaveInto}>\r\n            <FormControlLabel value=\"local\" control={<Radio size='small' />} label=\"local file system\" />\r\n            <FormControlLabel value=\"sandbox\" control={<Radio size='small' />} label=\"sandbox file system\" />\r\n          </RadioGroup>\r\n        </FormControl>          \r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Export Dicom header as:</FormLabel>\r\n          <RadioGroup aria-label=\"exportas\" name=\"exportas\" value={exportAs} onChange={handleChangeExportAs}>\r\n            <FormControlLabel value=\"json\" control={<Radio size='small' />} label=\"JSON\" />\r\n            <FormControlLabel value=\"csv\" control={<Radio size='small' />} label=\"CSV\" />\r\n          </RadioGroup>\r\n        </FormControl> \r\n        </div> \r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>MPR interpolation method:</FormLabel>\r\n          <RadioGroup aria-label=\"mprinterpolation\" name=\"mprinterpolation\" value={mprInterpolation} onChange={handleChangeMprInterpolation}>\r\n            <FormControlLabel value=\"no\" control={<Radio size='small' />} label=\"No interpolation (duplicate planes)\" />\r\n            <FormControlLabel value=\"weightedlinear\" control={<Radio size='small' />} label=\"Weighted linear interpolation\" />\r\n          </RadioGroup>\r\n        </FormControl> \r\n        </div>            \r\n      </div>\r\n      </PerfectScrollbar>\r\n    </Dialog>\r\n  )\r\n\r\n}\r\n\r\nexport default Settings\r\n","import React, { PureComponent } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport {connect} from 'react-redux'\nimport AboutDlg from './components/AboutDlg'\nimport Dicomdir from './components/Dicomdir'\nimport DicomViewer from './components/DicomViewer'\nimport DicomHeader from './components/DicomHeader'\nimport DownloadZipDlg from './components/DownloadZipDlg'\nimport Explorer from './components/Explorer'\nimport FsUI from './components/FsUI'\nimport Histogram from './components/Histogram'\nimport LayoutTool from './components/LayoutTool'\nimport Measurements from './components/Measurements'\nimport OpenMultipleFilesDlg from './components/OpenMultipleFilesDlg'\nimport Settings from './components/Settings'\nimport AppBar from '@material-ui/core/AppBar'\nimport Collapse from '@material-ui/core/Collapse'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Icon from '@mdi/react'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Popover from '@material-ui/core/Popover'\nimport Slider from '@material-ui/core/Slider'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport TextField from '@material-ui/core/TextField'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n//import { FixedSizeList } from 'react-window'\n//import {List as ListVirtual} from 'react-virtualized'\nimport 'react-perfect-scrollbar/dist/css/styles.css'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { \n  isMobile, \n  isTablet,\n} from 'react-device-detect'\nimport {\n  clearStore,\n  localFileStore,\n  dcmIsOpen,\n  activeDcm,\n  activeDcmIndex,\n  activeMeasurements,\n  setLayout,\n  dcmTool, \n  setDicomdir,\n  setZippedFile,\n  setVolume,\n  filesStore,\n} from './actions/index'\nimport { \n  log,\n  getDicomPixelSpacing,\n  getDicomSpacingBetweenSlice,\n  getDicomSliceThickness,\n  getDicomSliceLocation,\n  //getFileNameCorrect,\n  getFileExtReal,\n  isInputDirSupported,\n  getSettingsFsView,\n  getSettingsDicomdirView,\n  getSettingsMprInterpolation,\n  groupBy,\n  objectIsEmpty,\n  //getDicomSeriesDescription,\n} from './functions'\nimport { \n  mdiAngleAcute,\n  mdiAnimationOutline,\n  mdiArrowAll,\n  mdiAxisArrow,\n  mdiCamera,\n  mdiChartHistogram,\n  mdiCheck,\n  mdiCheckboxIntermediate,\n  mdiContentSaveOutline,   \n  mdiCursorDefault, \n  mdiCursorPointer,\n  mdiDelete,\n  mdiEllipse,\n  mdiEyedropper,\n  mdiFileCabinet,\n  mdiFileDocument, \n  mdiFileCad, \n  mdiFolder,\n  mdiFolderMultiple,\n  mdiGesture,\n  mdiViewGridPlusOutline,\n  mdiImageEdit,\n  mdiInformationOutline,\n  mdiInvertColors,\n  mdiMagnify,\n  mdiFolderOpen,\n  mdiRefresh,\n  mdiRectangle,\n  mdiRuler,\n  mdiSettings,\n  mdiToolbox,\n  mdiTools,\n  mdiTrashCanOutline, \n  mdiVideo,\n  mdiWeb,\n\n  mdiPlay,\n  mdiPause,\n  mdiSkipBackward,\n  mdiSkipForward,\n  mdiSkipNext,\n  mdiSkipPrevious,\n} from '@mdi/js'\n\nimport './App.css'\n\nimport * as cornerstoneTools from \"cornerstone-tools\"\n\nlog()\n\n//localStorage.setItem(\"debug\", \"cornerstoneTools\")\n\nconst drawerWidth = 240\nconst iconColor = '#FFFFFF'\nlet iconTool = null\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n        backgroundColor: theme.palette.common.black,\n    },\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n\n  title: {\n    flexGrow: 1,\n  },\n\n  appBar: {\n    position: 'relative',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  hide: {\n    display: 'none',\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n\n  // Loads information about the app bar, including app bar height\n  toolbar: theme.mixins.toolbar,\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  listItemText: {\n    fontSize: '0.85em',\n    marginLeft: '-20px'\n  },\n\n})\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.files = []\n    this.folder = null\n    this.file = null\n    this.url = null\n    this.explorer = null\n    this.series = null\n  \n    this.mprData = {}\n    this.mprPlane = ''\n    \n    this.volume = []\n    //this.mprSliceIndex = [0, 0, 0]\n    this.renderedImages = []\n\n    this.fileOpen = React.createRef()\n    this.showFileOpen = this.showFileOpen.bind(this)\n\n    this.openDicomdir = React.createRef()\n    this.showOpenDicomdir = this.showOpenDicomdir.bind(this)\n\n    this.openFolder = React.createRef()\n    this.showOpenFolder = this.showOpenFolder.bind(this)    \n\n    this.openUrlField = React.createRef()\n    \n    this.dicomViewersRefs = []\n    this.dicomViewers = []\n    for(let i=0; i < 16; i++) {\n      this.dicomViewers.push(this.setDcmViewer(i))\n    }\n  }\n\n  state = { \n    anchorElLayout: null,   \n    openMenu: false,\n    openImageEdit: false,\n    openTools: false,\n    openMpr: false,\n    textMessage: '',\n    titleMessage: '',\n    visibleMainMenu: true,\n    visibleHeader: false,\n    visibleSettings: false,\n    visibleToolbar: true,\n    visibleOpenUrl: false,\n    visibleToolbox: false,\n    visibleMeasure: false,\n    visibleClearMeasureDlg: false,\n    visibleAbout: false,\n    visibleDicomdir: false,\n    visibleFileManager: false,\n    visibleZippedFileDlg: false,\n    visibleDownloadZipDlg: false,\n    visibleOpenMultipleFilesDlg: false,\n    toolState: 1,\n    sliceIndex: 0,\n    sliceMax: 1,\n    listOpenFilesScrolling: false,\n    visibleVolumeBuilding: false,\n    visibleMprOrthogonal: false,\n    visibleMprCoronal: false,\n    visibleMprSagittal: false,\n    visibleMprAxial: false,\n    visibleExplorer: false,\n    visibleMessage: false,\n  }\n\n  /*componentDidUpdate() {\n    console.log('App - componentDidUpdate: ', this.props.explorerActiveSeriesIndex)\n\n  }*/\n\n  setDcmViewer = (index) => {\n    return (\n      <DicomViewer \n        dcmRef={(ref) => {this.dicomViewersRefs[index] = ref}}\n        index={index}\n        runTool={ref => (this.runTool = ref)} \n        changeTool={ref => (this.changeTool = ref)}\n        onLoadedImage={this.onLoadedImage}\n        onRenderedImage={this.onRenderedImage}\n        overlay={true}\n        visible={true}\n        use='normal'\n      />   \n    )\n  }\n\n  onLoadedImage = () => {\n    //console.log('App - onLoadedImage: ')\n    //if (this.state.visibleMprOrthogonal) return\n    //this.mprPlane = ''\n    //this.mprPlanePosition()\n    //console.log('App - onLoadedImage - mprPlane: ', this.mprPlane)\n    /*if (!this.state.visibleMprOrthogonal) {\n      if (this.mprPlane === 'sagittal')\n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: true, visibleMprAxial: false, visibleMprCoronal: false})\n      else if (this.mprPlane === 'coronal')\n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: false, visibleMprAxial: false, visibleMprCoronal: true })  \n      else \n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: false, visibleMprAxial: true, visibleMprCoronal: false })\n    }*/\n  }\n\n  onRenderedImage = (index) => {\n    /*\n    if (index < 0) return\n    console.log('App - onRenderedImage: ', index)\n    console.log('App - onRenderedImage, this.renderedImages[index]: ', this.renderedImages)\n    if (this.renderedImages.length >= 2) return\n    this.renderedImages[index] = true\n    let elements = []\n    console.log('App - onRenderedImage, this.props.isOpen: ', this.props.isOpen)\n    for(let i=0; i < 16; i++) {\n      if (this.renderedImages[i] && this.dicomViewersRefs[i] !== undefined) {\n        console.log('i: ', i)\n        console.log('App - dicomImage: ', this.dicomViewersRefs[i].dicomImage)\n        elements.push(this.dicomViewersRefs[i].dicomImage)\n      }\n    }\n    if (elements.length >= 2) {\n      this.addReferenceLinesTool(elements)\n    }\n    */\n  }\n\n  getDcmViewerRef = (index) => {\n    return this.dicomViewersRefs[index]\n  }\n\n  getDcmViewer = (index) => {\n    return this.dicomViewers[index]\n  }\n\n  getActiveDcmViewer = () => {\n    return this.dicomViewersRefs[this.props.activeDcmIndex]\n  }  \n\n  showFileOpen() {\n    this.props.isOpenStore(false)\n    this.fileOpen.current.click()\n  }\n\n  handleOpenLocalFs = (filesSelected) => {\n    //console.log('handleOpenLocalFs: ', filesSelected)\n    if (filesSelected.length > 1) {\n      this.files = filesSelected\n      this.changeLayout(1, 1)\n      this.mprPlane = ''\n      this.volume = []\n      this.setState({sliceIndex: 0,\n                     sliceMax: 1,\n                     visibleMprOrthogonal: false, \n                     visibleMprCoronal: false, \n                     visibleMprSagittal: false, \n                     visibleMprAxial: false}, () => {\n                       this.setState({visibleOpenMultipleFilesDlg: true})\n                     })\n    } else {\n      const file = filesSelected[0]\n      if (file.type === 'application/x-zip-compressed' || file.type === 'application/zip') {\n        this.file = file\n        this.url = null\n        this.setState({visibleZippedFileDlg: true})\n      } else {\n        this.setState({sliceIndex: 0, sliceMax: 1})\n        this.props.setLocalFileStore(file)\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file)      \n      }\n    }\n  }\n\n  handleOpenSandboxFs = (fsItem) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openSandboxFs', fsItem)\n  }\n\n  handleOpenImage = (index) => {\n    //console.log('handleOpenImage : ', index)\n    \n    //this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = this.state.sliceMax\n    this.dicomViewersRefs[this.props.activeDcmIndex].sliceIndex = this.state.sliceIndex\n\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal\n    const visibleMprSagittal = this.state.visibleMprSagittal\n    const visibleMprCoronal = this.state.visibleMprCoronal\n    const visibleMprAxial = this.state.visibleMprAxial\n    const plane = this.mprPlanePosition() // plane of source\n\n    if (visibleMprOrthogonal) {\n      if (this.props.activeDcmIndex === 0) {\n        this.dicomViewersRefs[0].runTool('openimage', index)\n\n      } else if (this.props.activeDcmIndex === 1) {\n        if (plane === 'sagittal') { // then open axial plane in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else if (plane === 'axial') { // then open coronal plane in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else { // plane is coronal, then open axial in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }\n\n      } else if (this.props.activeDcmIndex === 2) {\n        if (plane === 'sagittal') { // then open axial plane in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else if (plane === 'axial') { // then open coronal plane in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else { // plane is coronal, then open axial in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }        \n      }\n\n    } else { \n      if (objectIsEmpty(this.mprData)) { // works on new image\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n      } else if ((plane === 'sagittal' && visibleMprSagittal) ||\n          (plane === 'axial' && visibleMprAxial) ||\n          (plane === 'coronal' && visibleMprCoronal))\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n      else if (plane === 'sagittal' && visibleMprAxial)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)  \n      else if (plane === 'sagittal' && visibleMprCoronal)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)   \n      else if (plane === 'axial' && visibleMprSagittal)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n      else if (plane === 'axial' && visibleMprCoronal)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n      else if (plane === 'coronal' && visibleMprSagittal)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData) \n      else if (plane === 'coronal' && visibleMprAxial)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData) \n      else { // it's not a possible MPR, then open as normal dicom file\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)           \n      }\n    }\n  }\n  \n  handleOpenFileDicomdir = (file) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file)\n  }\n\n  showOpenFolder() {\n    this.openFolder.current.click()\n  }\n\n  showOpenDicomdir() {\n    this.openDicomdir.current.click()\n  }\n\n  handleOpenFolder = (files) => {\n    //console.log('handleOpenFolder: ', files)\n    this.folder = files[0].webkitRelativePath.split('/')[0]\n\n    for (let i=0; i < files.length; i++) {\n      this.files.push(files[i])\n    }\n    this.changeLayout(1, 1)\n    this.mprPlane = ''\n    this.volume = []\n    //for(let i=0; i < 16; i++) \n    //  if (this.dicomViewersRefs[i] !== undefined) {\n    //    // this.dicomViewersRefs[i].runTool('clear')\n    //  }\n    this.setState({sliceIndex: 0,\n                    sliceMax: 1,\n                    visibleMprOrthogonal: false, \n                    visibleMprCoronal: false, \n                    visibleMprSagittal: false, \n                    visibleMprAxial: false}, () => {\n                      \n                    })\n    this.setState({visibleOpenMultipleFilesDlg: true})\n  }\n\n  handleOpenDicomdir = (files) => {\n    this.setState({ visibleDicomdir: false }, () => {\n      let dicomdir = null\n      let datafiles = []\n      for (let i=0; i < files.length; i++) {\n        if (files[i].webkitRelativePath.includes('DICOMDIR')) {\n          dicomdir = files[i]\n        } else {\n          datafiles.push(files[i])\n        }\n      }\n      if (dicomdir !== null) {\n        this.props.setDicomdirStore({origin: 'local', dicomdir: dicomdir, files: datafiles})\n        this.toggleDicomdir()\n      } else {\n        this.setState({titleMessage: 'Warning', textMessage: 'The selected folder does not contains any DICOMDIR file.'}, () => {\n          this.setState({ visibleMessage: true })\n        })\n      }\n    })\n  }\n\n  handleOpenFsDicomdir = (fsItem) => {\n    this.props.setDicomdirStore({origin: 'fs', dicomdir: fsItem, files: []})\n    this.toggleDicomdir()\n  }\n\n  componentDidMount() {\n    // Need to set the renderNode since the drawer uses an overlay\n    //this.dialog = document.getElementById('drawer-routing-example-dialog')\n    window.scrollTo(0, 0)\n  }\n\n\n  showAppBar = () => {\n    window.scrollTo(0, 0)\n  }\n  \n\n  toggleMainMenu = () => {\n    const visibleMainMenu = this.state.visibleMainMenu\n    //const visibleFileManager = this.state.visibleFileManager\n    if (getSettingsFsView() === 'left') {\n      this.setState({ visibleMainMenu: !visibleMainMenu, visibleFileManager: false })\n    } else {\n      this.setState({ visibleMainMenu: !visibleMainMenu })\n    }\n  }\n  \n  showMainMenu = () => {\n    this.setState({ visibleMainMenu: true })\n  }\n\n  hideMainMenu = () => {\n    this.setState({ visibleMainMenu: false })\n  }\n\n  handleVisibility = (visibleMainMenu) => {\n    this.setState({ visibleMainMenu })\n  }\n\n\n  toggleFileManager = () => {\n    if (getSettingsFsView() === 'left') {\n      this.setState({visibleMainMenu: false, visibleFileManager: !this.state.visibleFileManager})\n    } else {\n      //this.setState({visibleFileManager: !this.state.visibleFileManager})\n      const visible = !this.state.visibleFileManager\n      this.setState({ visibleFileManager: visible })\n      if (visible) \n        this.setState({ \n          visibleMeasure: false, \n          visibleHeader: false,\n          visibleToolbox: false, \n          visibleDicomdir: false, \n          visibleExplorer: false\n        })        \n    }\n  }\n  \n  toggleExplorer = () => {\n    const visible = !this.state.visibleExplorer\n    this.setState({ visibleExplorer: visible })\n    if (visible) \n      this.setState({ \n        visibleMeasure: false, \n        visibleHeader: false,\n        visibleToolbox: false, \n        visibleDicomdir: false, \n        visibleFileManager: false\n      })    \n  }\n\n  toggleHeader = () => {\n    const visible = !this.state.visibleHeader\n    this.setState({ visibleHeader: visible })\n    if (visible) \n      this.setState({ \n        visibleMeasure: false, \n        visibleToolbox: false, \n        visibleDicomdir: false, \n        visibleFileManager: false,\n        visibleExplorer: false\n      })    \n  }\n\n\n  toggleToolbox = () => {\n    const visible = !this.state.visibleToolbox\n    this.setState({ visibleToolbox: visible })\n    if (visible) \n      this.setState({ \n        visibleMeasure: false, \n        visibleHeader: false, \n        visibleDicomdir: false, \n        visibleFileManager: false,\n        visibleExplorer: false \n      })\n  }\n\n  saveMeasure = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('savetools')\n  }\n  \n  toggleMeasure = () => {\n    const visible = !this.state.visibleMeasure\n    this.setState({ visibleMeasure: visible })\n    if (visible) \n      this.setState({ \n        visibleToolbox: false, \n        visibleHeader: false, \n        visibleDicomdir: false, \n        visibleFileManager: false,\n        visibleExplorer: false\n      })\n  }\n\n  hideMeasure = () => {\n    this.setState({ visibleMeasure: false })\n  }\n\n  handleVisibilityMeasure = (visibleMeasure) => {\n    this.setState({ visibleMeasure })\n  }\n\n\n  toggleDicomdir = () => {\n    const visible = !this.state.visibleDicomdir\n    this.setState({ visibleDicomdir: visible })\n    if (visible) \n      this.setState({ \n        visibleMeasure: false, \n        visibleToolbox: false, \n        visibleHeader: false, \n        visibleFileManager: false\n      })\n  }\n  \n\n  clearMeasure = () => {\n    this.showClearMeasureDlg()\n  }\n\n  showClearMeasureDlg = () => {\n    this.setState({ visibleClearMeasureDlg: true })\n  }\n\n  hideClearMeasureDlg = () => {\n      this.setState({ visibleClearMeasureDlg: false })\n  }\n\n  confirmClearMeasureDlg = () => {\n    this.hideClearMeasureDlg()\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools')\n  }\n\n\n  showZippedFileDlg = () => {\n    this.setState({ visibleZippedFileDlg: true })\n  }  \n\n  hideZippedFileDlg = () => {\n      this.setState({ visibleZippedFileDlg: false })\n  }\n\n  confirmZippedFileDlg = () => {\n    this.hideZippedFileDlg()\n    this.setState({ visibleFileManager: true }, () => {\n      if (this.url !== null) {\n        this.setState({visibleDownloadZipDlg: true})\n      } else {\n        this.props.setFsZippedFile(this.file)\n      }\n    })\n  }\n\n\n  showAbout = () => {\n    this.setState({ visibleAbout: !this.state.visibleAbout })\n  }\n  \n  showSettings = () => {\n    this.setState({ \n      visibleMainMenu: false, \n      visibleSettings: true, \n      visibleToolbar: false, \n      position: 'right' \n    })\n  }\n\n  hideSettings = () => {\n    this.setState({ \n      visibleMainMenu: true, \n      visibleSettings: false, \n      visibleToolbar: true,\n      visibleFileManager: false,\n      visibleDicomdir: false, \n    })\n  }\n\n  handleVisibilitySettings = (visibleSettings) => {\n    this.setState({ visibleSettings })\n  }\n\n  hideDownloadZipDlg = () => {\n    this.setState({ visibleDownloadZipDlg: false })\n  }\n\n  hideOpenMultipleFilesDlg = () => {\n    this.setState({ visibleOpenMultipleFilesDlg: false })\n    this.openMultipleFilesCompleted()\n  }\n\n  openMultipleFilesCompleted = () => {\n    //console.log('openMultipleFilesCompleted: ', this.props.files)\n\n    if (this.props.files !== null) {\n      this.changeLayout(1, 1)\n\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', 0)\n\n      const sliceMax = this.props.files.length\n\n      this.setState({sliceMax: sliceMax}, () => {\n \n      })\n\n      // check if there are studies and series, if so then prepare Explorer\n      \n      const patientList = groupBy(this.props.files, a => a.patient.patientName)\n      const patientKeys = [...patientList.keys()]\n      const patient = {\n        list: patientList,\n        keys: patientKeys\n      }\n\n      this.explorer = {\n        folder: this.folder,\n        patient: patient,\n        //study: study,\n        //series: series\n      }\n\n      if (sliceMax > 1)\n        this.setState({visibleExplorer: true, visibleFileManager: false})\n    } else {\n      //console.log('openMultipleFilesCompleted, this.props.allFiles: ', this.props.allFiles)\n      //this.setState({titleMessage: 'Warning', textMessage: 'No DICOM files found.'}, () => {\n        //this.setState({ visibleMessage: true })\n      //})\n    }   \n  }\n\n  showOpenUrl = () => {\n    this.setState({ visibleOpenUrl: true })\n  }\n\n  hideOpenUrl = (openDlg) => {\n    this.setState({ visibleOpenUrl: false },\n      () => {\n        if (openDlg) {\n          this.hideMainMenu()\n          this.file = null\n          this.url = this.openUrlField.value\n          //console.log('this.url :', this.url)\n          //const ext = getFileExtReal(this.url)\n          //console.log('ext :', ext)\n          if (getFileExtReal(this.url) === 'zip') {\n            this.setState({visibleZippedFileDlg: true})\n          } else {\n            return this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openurl', this.openUrlField.value)\n          }\n        } \n    })\n  }\n\n  downloadOpenUrl = () => {\n    this.setState({ visibleOpenUrl: false, visibleToolbar: true })\n  }\n  \n  resetImage = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('reset')\n  }\n  \n  saveShot = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('saveas')\n  }\n\n  cinePlayer = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('cine')\n  }\n\n  clear = () => {  \n    this.setState({openImageEdit: false, \n                   openTools: false, \n                   openMpr: false, \n                   visibleToolbox: false, \n                   visibleMeasure: false, \n                   visibleHeader: false, \n                   visibleDicomdir: false})\n    this.changeLayout(1, 1)\n    this.props.setFilesStore(null)\n    this.props.setDicomdirStore(null)\n    this.props.clearingStore()\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n  }\n\n  handleLayout = (event) => {\n    this.setState({anchorElLayout: event.currentTarget})\n  }\n  \n  closeLayout = () => {\n    this.setState({anchorElLayout: null})\n  }\n\n  changeLayout = (row, col) => {\n    // if reduce the grid clear the unused views\n    if (row < this.props.layout[0] || col < this.props.layout[1]) {\n      this.layoutGridClick(0)\n      for(let i=0; i < 4; i++) {\n        for(let j=0; j < 4; j++) {\n          if ((i+1 > row) || (j+1 > col)) {\n            const index = i*4+j\n            if (this.dicomViewersRefs[index] !== undefined) {  \n              //this.dicomViewersRefs[index].runTool('clear')\n            }\n          }\n        }\n      }\n    }\n    this.props.setLayoutStore(row, col)\n  }\n\n  toolExecute = (tool) => {\n    //this.hideMainMenu()\n    switch (tool) {\n      case 'notool': \n        iconTool = null\n        this.setState({toolState: null})\n        break\n      case 'Wwwc':\n        iconTool = mdiArrowAll\n        break\n      case 'Pan':\n        iconTool = mdiCursorPointer\n        break        \n      case 'Zoom':\n        iconTool = mdiMagnify\n        break        \n      case 'Length':\n        iconTool = mdiRuler\n        break       \n      case 'Probe':\n        iconTool = mdiEyedropper\n        break    \n      case 'Angle':\n        iconTool = mdiAngleAcute\n        break   \n      case 'EllipticalRoi':\n        iconTool = mdiEllipse\n        break     \n      case 'RectangleRoi':\n        iconTool = mdiRectangle\n        break\n      case 'FreehandRoi':\n        iconTool = mdiGesture\n        break       \n\n      default:\n          break     \n    }\n    this.props.toolStore(tool)\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool(tool)\n  }\n\n  toolChange = () => {\n    const toolState = 1-this.state.toolState\n    this.setState({toolState: toolState}, () => {\n      this.changeTool.changeTool(this.props.tool, toolState)\n    })\n  }\n\n  toolRemove = (index) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetool', index)\n  }\n\n  toggleOpenMenu = () => {\n    this.setState({openMenu: !this.state.openMenu})\n  } \n\n  toggleImageEdit = () => {\n    this.setState({openImageEdit: !this.state.openImageEdit})\n  }\n\n  toggleTools = () => {\n    this.setState({openTools: !this.state.openTools})\n  } \n\n  toggleMpr = () => {\n    this.setState({openMpr: !this.state.openMpr})\n  } \n\n  layoutGridClick = (index) => {\n    if (isMobile && index === this.props.activeDcmIndex) return\n\n    //console.log('layoutGridClick: ', index)\n    const sliceMax = this.dicomViewersRefs[index].sliceMax\n    const sliceIndex = this.dicomViewersRefs[index].sliceIndex\n    this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex})\n\n    //this.mprSliceIndex[this.props.activeDcmIndex] = sliceIndex\n\n    this.props.setActiveDcmIndex(index)\n\n    if (this.state.visibleMprOrthogonal) {\n      if (index === 0) {\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[0]\n      } else if (index === 1) {\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[1]\n      } else if (index === 2) {\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[2]\n      }\n    }  \n\n    const dcmViewer = this.getDcmViewerRef(index)\n    this.props.setActiveMeasurements(dcmViewer.measurements)\n    this.props.setActiveDcm({image: dcmViewer.image, element: dcmViewer.dicomImage, isDicom: dcmViewer.isDicom})\n  }\n \n  layoutGridTouch = (index) => {\n    if (!isMobile && index === this.props.activeDcmIndex) return\n    \n    const sliceMax = this.dicomViewersRefs[index].sliceMax\n    const sliceIndex = this.dicomViewersRefs[index].sliceIndex\n\n    this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex})\n\n    //this.mprSliceIndex[this.props.activeDcmIndex] = sliceIndex\n\n    this.props.setActiveDcmIndex(index)\n\n    if (this.state.visibleMprOrthogonal) {\n      if (index === 0) {\n        //const sliceMax = this.props.files === null ? 1 : this.props.files.length\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[0]\n\n      } else if (index === 1) {\n        //const sliceMax = this.props.files[0].image.columns\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[1]\n\n      } else if (index === 2) {\n        //const sliceMax = this.props.files[0].image.rows\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[2]\n      }\n    }    \n\n    const dcmViewer = this.getDcmViewerRef(index)\n    this.props.setActiveMeasurements(dcmViewer.measurements)\n    this.props.setActiveDcm({image: dcmViewer.image, element: dcmViewer.dicomImage, isDicom: dcmViewer.isDicom})   \n  }\n\n  buildLayoutGrid = () => {\n    let dicomviewers = []\n    for(let i=0; i < this.props.layout[0]; i++) {\n      for(let j=0; j < this.props.layout[1]; j++) {\n        const styleLayoutGrid = {\n          border: this.props.layout[0] === 1 && this.props.layout[1] === 1 ? 'solid 1px #000000' : 'solid 1px #444444',\n        }\n        const index = i*4+j\n        dicomviewers.push(\n          <div \n            key={index} \n            style={styleLayoutGrid} \n            onClick={() => this.layoutGridClick(index)} \n            onTouchStart={() => this.layoutGridTouch(index)}\n          >\n            {this.getDcmViewer(index)}\n          </div>        \n        )\n      }\n    }\n\n    return (\n      <div\n        id=\"dicomviewer-grid\"\n        style={{\n          display: 'grid',\n          gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%',\n        }}\n      >\n        {dicomviewers}\n      </div>\n    )\n  }\n\n  getFileName = (dcmViewer) => {\n    return dcmViewer.filename\n    /*if (dcmViewer.fsItem !== null) {\n      return dcmViewer.fsItem.name\n    } else if (dcmViewer.localfile !== null) {\n      return getFileNameCorrect(dcmViewer.localfile.name)\n    } else {\n      return dcmViewer.localurl.substring(dcmViewer.localurl.lastIndexOf('/')+1)\n    }*/\n  }\n\n  getStringVisiblePlane = () => {\n    if (this.state.visibleMprOrthogonal) \n      return 'orthogonal'    \n    else if (this.state.visibleMprSagittal) \n      return 'sagittal'\n    else if (this.state.visibleMprAxial) \n      return 'axial'\n    else if (this.state.visibleMprCoronal) \n      return 'coronal'\n  }\n\n  appBarTitle = (classes, isOpen, dcmViewer) => {\n    if (isMobile && !isTablet) {\n      if (isOpen) \n        return null\n      else \n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\n          </Typography>          \n        )\n    } else {\n      if (isOpen) {\n        const plane = this.getStringVisiblePlane()\n        if (this.state.sliceMax > 1 && this.mprPlane !== plane && this.mprPlane !== '') {\n          return (\n            <Typography variant=\"overline\" className={classes.title}>\n              {'MPR '+plane}\n            </Typography>\n          )        \n        }\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            {this.getFileName(dcmViewer)}\n          </Typography>\n        )\n      } else if (this.props.dicomdir !== null) {\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            {this.props.dicomdir.dicomdir.webkitRelativePath}\n          </Typography>\n        )\n      } else\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\n          </Typography>\n        )\n    }\n  }\n\n\n  // ---------------------------------------------------------------------------------------------- REFERENCE LINES\n  // #region REFERENCE LINES\n\n  addReferenceLinesTool = (elements) => {\n    //console.log('App - addReferenceLinesTool: ', elements)\n    if (elements.length < 2) return\n\n    const synchronizer = new cornerstoneTools.Synchronizer(\n      'cornerstonenewimage',\n      cornerstoneTools.updateImageSynchronizer\n    )\n  \n    // These have to be added to our synchronizer before we pass it to our tool\n    for(let i=0; i < elements.length; i++) {\n      synchronizer.add(elements[i])\n    }\n  \n    cornerstoneTools.addTool(cornerstoneTools.ReferenceLinesTool)\n    cornerstoneTools.setToolEnabled('ReferenceLines', {\n      synchronizationContext: synchronizer,\n    })\n  }\n\n  // #endregion \n  \n  // ---------------------------------------------------------------------------------------------- MPR\n  // #region MPR\n\n  getImageOrientationZ = (image) => {\n    const iop = image.data.string('x00200037').split('\\\\') // Image Orientation Patient\n\n    let v = new Array(3).fill(0).map(() => new Array(3).fill(0))\n\n    v[0][0] = parseFloat(iop[0]) // the x direction cosines of the first row X\n    v[0][1] = parseFloat(iop[1]) // the y direction cosines of the first row X\n    v[0][2] = parseFloat(iop[2]) // the z direction cosines of the first row X\n    v[1][0] = parseFloat(iop[3]) // the x direction cosines of the first column Y\n    v[1][1] = parseFloat(iop[4]) // the y direction cosines of the first column Y\n    v[1][2] = parseFloat(iop[5]) // the z direction cosines of the first column Y \n    //console.log('getImageOrientationZ: ', v[1][2])\n    return v[1][2]\n  }\n\n  mprBuildVolume = () => {\n    if (this.volume.length > 0) return\n\n    this.t0 = performance.now()\n\n    const files = this.dicomViewersRefs[0].files\n    const xPixelSpacing = getDicomPixelSpacing(files[0].image, 0)\n    const spacingBetweenSlice = getDicomSpacingBetweenSlice(files[0].image)\n    const sliceThickness = getDicomSliceThickness(files[0].image)\n    const length = files[0].image.getPixelData().length\n    const sliceLocation = getDicomSliceLocation(files[0].image)\n    this.volume = []\n    // see https://stackoverflow.com/questions/58412358/dicom-multiplanar-image-reconstruction\n    this.mprData.zDim = Math.round(files.length * spacingBetweenSlice / xPixelSpacing)\n\n    //console.log('this.mprData.zDim: ', this.mprData.zDim)\n    //console.log('spacingBetweenSlice: ', spacingBetweenSlice)\n    //console.log('sliceThickness: ', sliceThickness)\n    //console.log('xPixelSpacing: ', xPixelSpacing)\n    //console.log('getSliceLocation: ', sliceLocation)\n\n    // If spacing between slices is less than slice thickness, the images are not optimal for 3D reconstruction.\n    // Try an alternative algorithm based on slice distance.\n    let zDimMethod2 = false\n    if (spacingBetweenSlice < sliceThickness && sliceLocation === undefined) {\n      let max = 0\n      let min = 0\n      for(let i=0; i < files.length; i++) {\n        if (files[i].sliceDistance > max)\n          max = files[i].sliceDistance\n        if (files[i].sliceDistance < min)\n          min = files[i].sliceDistance  \n      }\n      this.mprData.zDim = Math.round(Math.abs(max - min) / xPixelSpacing)\n      //console.log('method2, this.mprData.zDim: ', this.mprData.zDim)\n      zDimMethod2 = true\n    }\n    //console.log('this.mprData.zDim: ', this.mprData.zDim)\n\n    if (files.length === this.mprData.zDim) { // slices contiguous\n      for (let i = 0, len = files.length; i < len; i++) {\n        this.volume.push(files[i].image.getPixelData())\n      }\n      \n    } else if (files.length < this.mprData.zDim) { // gap between slices\n      \n      let emptyPlane = new Int16Array(length).fill(0)\n      for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n        this.volume.push(emptyPlane)\n      }\n\n      let order = []\n\n      for (let i = 0; i < files.length; i++) {\n        order.push({iFile: i, instanceNumber: files[i].instanceNumber, sliceDistance: files[i].sliceDistance, sliceLocation: files[i].sliceLocation})\n      }\n      \n      if (zDimMethod2) {\n        // eliminate eventually duplicates\n        order = order.reduce((previous, current) => {\n          let object = previous.filter(object => object.sliceDistance === current.sliceDistance)\n          if (object.length === 0) {\n            previous.push(current)\n          }\n          return previous\n        }, [])\n\n        order.sort((l, r) => {\n          // return r.sliceDistance - l.sliceDistance\n          return l.instanceNumber - r.instanceNumber\n        })     \n        //console.log('order: ', order)     \n      } else {\n        // const reorder = files[0].sliceDistance < files[1].sliceDistance\n        const reorder = files[0].sliceLocation < files[1].sliceLocation\n        if (reorder) {\n          order.sort((l, r) => {\n            // return l.instanceNumber - r.instanceNumber\n            // return r.sliceDistance - l.sliceDistance\n            return r.sliceLocation - l.sliceLocation\n          })\n          //console.log('reorder: ')     \n        }\n      }\n      /*if (this.getImageOrientationZ(files[0].image) < 0) {\n        order.sort((l, r) => {\n          return r.instanceNumber - l.instanceNumber\n          // return r.sliceDistance - l.sliceDistance\n        })     \n        console.log('reorder 2: ')        \n      }*/\n\n      let intervals = [0]\n      this.volume[0] = files[order[0].iFile].image.getPixelData()\n      this.volume[this.mprData.zDim-1] = files[order[order.length-1].iFile].image.getPixelData()  \n      const step = (this.mprData.zDim-2) / (order.length-2)\n      let i = 0\n      for (let k = 1; k <= order.length-2; k++) {  \n          i = Math.ceil(i+step)\n          //console.log(`i: ${i},  k: ${k},  order[k].iFile: ${order[k].iFile}`)\n          this.volume[i] = files[order[k].iFile].image.getPixelData() // order[k-1].iFile\n          intervals.push(i)\n      }\n      intervals.push(this.mprData.zDim-1)\n      //console.log('intervals: ', intervals)\n      \n      //console.log('this.volume: ', this.volume)\n\n      const interpolationMethod = getSettingsMprInterpolation()\n\n      if (interpolationMethod === 'no') {\n        // build missing planes without interpolation, simple duplicate\n        for (let i = 0; i < intervals.length-1; i++) {\n          //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n          for (let j = intervals[i]+1; j <= intervals[i+1]-1; j++) {\n            //console.log(`j: ${j}`)\n            this.volume[j] = this.volume[intervals[i+1]]\n          }\n        }\n\n      } else if (interpolationMethod === 'weightedlinear') {\n        // build the interpolate planes between original planes\n        for (let i = 0; i < intervals.length-1; i++) {\n          //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n          const step = intervals[i+1]-intervals[i]\n\n          for (let j = intervals[i]+1; j < intervals[i+1]; j++) {\n            //console.log(`i: ${i}, intervals[i]: ${intervals[i]}, j: ${j}`)\n\n            let p = new Int16Array(length)\n            const w = (j-intervals[i]) / step\n\n            for (let k = 0; k < length-1; k++) {\n              // simple linear interpolation\n              // const p0 = this.volume[intervals[i]][k]\n              // const p1 = this.volume[intervals[i+1]][k]\n              // p[k] = (p0+p1)/2   \n\n              // weighted linear interpolation\n              const p0 = this.volume[intervals[i]][k] * (1-w)\n              const p1 = this.volume[intervals[i+1]][k] * w\n              p[k] = p0+p1\n\n              // weighted bilinear interpolation\n              /*if (k-1 > 0 && k+1 < length) {\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.5 + this.volume[intervals[i]][k-1] * (1-w) * 0.25 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25 + this.volume[intervals[i+1]][k+1] * w * 0.25\n                p[k] = p0+p1\n              } else if (k-1 < 0) {\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k+1] * w * 0.25\n                p[k] = p0+p1\n              } else { // k+1 > length \n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k-1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25\n                p[k] = p0+p1\n              }*/\n            }\n\n            this.volume[j]= p\n          }\n        }\n      }\n\n      this.t1 = performance.now()\n      console.log(`performance volume building: ${this.t1-this.t0} milliseconds`)\n\n    } else { // overlapping slices\n      this.mprData.zStep = files.length / this.mprData.zDim\n      //console.log('this.mprData.zStep: ', this.mprData.zStep)\n      for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n        const k = Math.round(i*this.mprData.zStep)\n        this.volume.push(files[k].image.getPixelData())\n      }    \n    }\n\n    if (this.state.visibleMprOrthogonal) {\n      this.changeToOrthogonalView()\n\n    } else if (this.state.visibleMprSagittal) {\n      this.changeToSagittalView()\n\n    } else if (this.state.visibleMprCoronal) {\n      this.changeToCoronalView()  \n\n    } else { // axial\n      this.changeToAxialView()\n    }\n  }\n\n  changeToOrthogonalView = () => {  \n    //console.log('changeToOrthogonalView - files: ', this.dicomViewersRefs[0].files)\n    \n    this.changeLayout(1, 3)\n\n    const index = Math.round(this.dicomViewersRefs[0].files.length / 2)\n\n    this.setState({visibleVolumeBuilding: false, sliceIndex: index}, () => {\n      const plane = this.mprPlanePosition()\n\n      if (this.dicomViewersRefs[0].volume === null)\n        this.dicomViewersRefs[0].volume = this.volume\n\n      //this.mprSliceIndex[0] = index  \n      this.dicomViewersRefs[0].runTool('openimage', index)\n\n      if (this.dicomViewersRefs[1].volume === null)\n        this.dicomViewersRefs[1].volume = this.volume\n      const xzIndex = Math.round(this.mprData.zDim / 2) // this.dicomViewersRefs[0].files[index].image.columns\n      //this.mprSliceIndex[1] = xzIndex\n      this.dicomViewersRefs[1].sliceMax = this.mprData.zDim\n      //this.dicomViewersRefs[1].sliceIndex = 0\n      this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, xzIndex, this.mprData)  \n      \n      if (this.dicomViewersRefs[2].volume === null)\n        this.dicomViewersRefs[2].volume = this.volume\n      const yzIndex = Math.round(this.mprData.zDim / 2) // this.dicomViewersRefs[0].files[index].image.rows\n      //this.mprSliceIndex[2] = yzIndex\n      this.dicomViewersRefs[2].sliceMax = this.mprData.zDim\n      //this.dicomViewersRefs[2].sliceIndex = 0\n      this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, yzIndex, this.mprData)      \n    })\n\n  }\n\n  changeToSagittalView = () => {\n    //console.log('changeToSagittalView: ')\n\n    this.changeLayout(1, 1)\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition()\n\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume\n\n        if (plane === 'sagittal') { \n        const sliceMax = this.dicomViewersRefs[0].files === null ? 1 : this.dicomViewersRefs[0].files.length\n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n        })\n      } else if (plane === 'axial') {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })   \n      } else {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }) \n      }      \n    })\n  }\n\n  changeToCoronalView = () => {  \n    this.changeLayout(1, 1)\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition()\n\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume\n\n      if (plane === 'coronal') {\n        const sliceMax = this.dicomViewersRefs[0].files === null ? 1 : this.dicomViewersRefs[0].files.length\n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n        })       \n\n      } else if (plane === 'axial') {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })\n\n      } else { // plane is sagittal\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })  \n      }      \n    })\n  }\n\n  changeToAxialView = () => {  \n    this.changeLayout(1, 1)\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition()\n          \n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume\n\n      if (plane === 'axial') {\n        const sliceMax = this.dicomViewersRefs[0].files === null ? 1 : this.dicomViewersRefs[0].files.length\n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n        })\n        \n\n      } else if (plane === 'sagittal') {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })\n        \n\n      } else {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })             \n      }      \n    })\n  }\n\n  mprPlanePosition = (force = false, index = this.props.activeDcmIndex) => {\n    //console.log('App - mprPlanePosition 1: ', this.mprPlane)\n    if (this.mprPlane === '' || force) {\n      this.mprPlane = this.dicomViewersRefs[index].mprPlanePosition()\n      if (this.mprPlane === 'sagittal')\n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: true, visibleMprAxial: false, visibleMprCoronal: false})\n      else if (this.mprPlane === 'coronal')\n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: false, visibleMprAxial: false, visibleMprCoronal: true })  \n      else \n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: false, visibleMprAxial: true, visibleMprCoronal: false })\n    }\n    return this.mprPlane  \n  }\n\n  mprOrthogonal = () => {\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal\n    if (!visibleMprOrthogonal) {\n      const index = Math.round(this.dicomViewersRefs[0].files.length / 2)\n      this.mprData.plane = {\n        from: this.mprPlane,\n        to: 'orthogonal'\n      }\n      this.setState({sliceIndex: index})\n      this.setState({visibleMprOrthogonal: true, \n                    visibleMprCoronal: false, \n                    visibleMprSagittal: false, \n                    visibleMprAxial: false}, () => {\n        if (this.volume.length === 0) {   \n          this.setState({visibleVolumeBuilding: true}, () => {           \n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)   \n          })\n        } else {\n          this.changeToOrthogonalView()\n        }\n      })\n    }\n  }\n\n  mprSagittal = () => {\n    const visibleMprSagittal = this.state.visibleMprSagittal\n    if (!visibleMprSagittal) {\n      this.mprData.plane = {\n        from: this.mprPlane,\n        to: 'sagittal'\n      }\n      this.setState({visibleMprOrthogonal: false, \n                    visibleMprSagittal: true, \n                    visibleMprCoronal: false, \n                    visibleMprAxial: false}, () => {\n        if (this.volume.length === 0) {   \n          this.setState({visibleVolumeBuilding: true}, () => {           \n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)   \n          })\n        } else {\n          this.changeToSagittalView()\n        }\n      })\n    }\n  }\n    \n  mprCoronal = () => {\n    const visibleMprCoronal = this.state.visibleMprCoronal\n    if (!visibleMprCoronal) {\n      this.mprData.plane = {\n        from: this.mprPlane,\n        to: 'coronal'\n      }\n      this.setState({visibleMprOrthogonal: false, \n                     visibleMprSagittal: false, \n                     visibleMprCoronal: true, \n                     visibleMprAxial: false}, () => {\n        if (this.volume.length === 0) {   \n          this.setState({visibleVolumeBuilding: true}, () => {           \n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)   \n          })\n        } else {\n          this.changeToCoronalView()\n        }\n      })\n    }\n  }\n\n  mprAxial = () => {\n    const visibleMprAxial = this.state.visibleMprAxial\n    if (!visibleMprAxial) {\n      this.mprData.plane = {\n        from: this.mprPlane,\n        to: 'axial'\n      }\n      this.setState({visibleMprOrthogonal: false, \n                     visibleMprSagittal: false, \n                     visibleMprCoronal: false, \n                     visibleMprAxial: true}, () => {\n        if (this.volume.length === 0) {   \n          this.setState({visibleVolumeBuilding: true}, () => {           \n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)   \n          })\n        } else {\n          this.changeToAxialView()\n        }\n      })\n    }\n  }\n\n  // #endregion \n  \n  listOpenFilesFirstFrame = () => {\n    const index = 0\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  }\n\n  listOpenFilesPreviousFrame = () => {\n    let index = this.state.sliceIndex\n    index = index === 0 ? this.state.sliceMax-1 : index-1\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  } \n\n  listOpenFilesNextFrame = () => {\n    let index = this.state.sliceIndex\n    index = index === this.state.sliceMax-1 ? 0 : index+1\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  }  \n\n  listOpenFilesLastFrame = () => {\n    const index = this.state.sliceMax-1\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  }  \n\n  listOpenFilesScrolling = () => {  \n    const scrolling = this.state.listOpenFilesScrolling\n    this.setState({listOpenFilesScrolling: !scrolling}, () => {\n      if (scrolling) {\n        clearInterval(this.timerScrolling)\n      } else {\n        this.timerScrolling = setInterval(() => {\n          this.listOpenFilesNextFrame()\n        }, 500)\n      }      \n    })\n  }\n\n  handleSliceChange = (event, value) => {\n    this.setState({sliceIndex: Math.floor(value)}, () => {\n      let index = this.state.sliceIndex\n      this.props.setLocalFileStore(this.files[index])\n      this.handleOpenImage(index)\n    })\n  }\n\n  explorerOnSelectSeries = (files) => {\n    //console.log('explorerOnSelectSeries: ', files)\n\n    this.files = files\n    this.mprPlane = ''\n\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('setfiles', this.files)\n\n    const sliceMax = this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax // this.files.length\n    const sliceIndex = this.dicomViewersRefs[this.props.activeDcmIndex].sliceIndex\n    this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex})\n    \n    this.mprData = {}\n    this.mprPlane = ''\n\n    this.handleOpenImage(0)\n  }\n\n  render() {\n    //console.log('App render: ')\n\n    const { classes } = this.props\n\n    const primaryClass = {primary:classes.listItemText}\n    const iconSize = '1.2rem'\n    \n    const isOpen = this.props.isOpen[this.props.activeDcmIndex]\n    const isDicomdir = this.props.dicomdir !== null\n    let isMultipleFiles = false\n    if (this.dicomViewersRefs[this.props.activeDcmIndex] === undefined) {\n      isMultipleFiles = false\n    } else {\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].files !== null) \n        isMultipleFiles = this.dicomViewersRefs[this.props.activeDcmIndex].files.length > 1\n      else\n        isMultipleFiles = false\n    }\n\n    const openMenu = this.state.openMenu\n    const openImageEdit = this.state.openImageEdit\n    const openTools = this.state.openTools\n    const openMpr = this.state.openMpr && isMultipleFiles && this.mprPlane !== ''\n    const visibleMainMenu = this.state.visibleMainMenu\n    const visibleHeader = this.state.visibleHeader\n    const visibleSettings = this.state.visibleSettings\n    const visibleAbout = this.state.visibleAbout\n    const visibleMeasure = this.state.visibleMeasure\n    const visibleToolbox = this.state.visibleToolbox\n    const visibleDicomdir = this.state.visibleDicomdir\n    const visibleFileManager = this.state.visibleFileManager\n    const visibleClearMeasureDlg = this.state.visibleClearMeasureDlg\n    const visibleZippedFileDlg = this.state.visibleZippedFileDlg \n    const visibleDownloadZipDlg = this.state.visibleDownloadZipDlg\n    const visibleOpenMultipleFilesDlg = this.state.visibleOpenMultipleFilesDlg\n    const visibleLayout = Boolean(this.state.anchorElLayout)\n    const visibleVolumeBuilding = this.state.visibleVolumeBuilding\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal\n    const visibleMprCoronal = this.state.visibleMprCoronal\n    const visibleMprSagittal = this.state.visibleMprSagittal\n    const visibleMprAxial = this.state.visibleMprAxial\n    const visibleExplorer = this.state.visibleExplorer\n\n    let iconToolColor = this.state.toolState === 1 ? '#FFFFFF' : '#999999'\n\n    const dcmViewer = this.getActiveDcmViewer()\n\n    const sliceMax = this.state.sliceMax\n\n    return (\n      <div>\n        <AppBar className={classes.appBar} position='static' elevation={0}>\n          <Toolbar variant=\"dense\">\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={this.toggleMainMenu}>\n              <MenuIcon />\n            </IconButton>\n            { this.appBarTitle(classes, isOpen, dcmViewer) }\n            \n            <div className={classes.grow} />\n            { !isOpen && !isDicomdir ? (\n              <IconButton onClick={this.showAbout}>\n                <Icon path={mdiInformationOutline} size={iconSize} color={iconColor} />\n              </IconButton> \n             ) : null\n            }            \n            { iconTool !== null && this.props.tool !== null &&  isOpen ? (\n                <IconButton onClick={this.toolChange}>\n                  <Icon path={iconTool} size={iconSize} color={iconToolColor} />\n                </IconButton>\n              ) : null\n            }\n            { isOpen && dcmViewer.numberOfFrames > 1 &&  isOpen ? (\n              <Tooltip title=\"Cine Player\">\n                <IconButton onClick={this.cinePlayer}>\n                  <Icon path={mdiVideo} size={iconSize} color={iconColor} />\n                </IconButton> \n              </Tooltip>\n              ): null\n            }\n            { isOpen ? (\n              <Tooltip title=\"Reset Image\">\n                <IconButton onClick={this.resetImage}>\n                  <Icon path={mdiRefresh} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n             ) : null\n            }\n            { isOpen ? (\n              <Tooltip title=\"Save Screenshot\">\n                <IconButton color=\"inherit\" onClick={this.saveShot}>\n                  <Icon path={mdiCamera} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n             ) : null\n            }\n            { isOpen ? (\n              <Tooltip title=\"Toolbox\">\n                <IconButton color=\"inherit\" onClick={this.toggleToolbox}>\n                  <Icon path={mdiToolbox} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }              \n            { isOpen ? (\n              <Tooltip title=\"Measurements\">\n                <IconButton color=\"inherit\" onClick={this.toggleMeasure}>\n                  <Icon path={mdiFileCad} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }  \n            { isOpen && dcmViewer.isDicom ? (\n              <Tooltip title=\"Dicom Header\">\n                <IconButton color=\"inherit\" onClick={this.toggleHeader}>\n                  <Icon path={mdiFileDocument} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }  \n            { isDicomdir ? (\n              <Tooltip title=\"DICOMDIR\">\n                <IconButton color=\"inherit\" onClick={this.toggleDicomdir}>\n                  <Icon path={mdiFolderOpen} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }    \n            { isOpen && isMultipleFiles ? (\n              <Tooltip title=\"Explorer\">\n                <IconButton color=\"inherit\" onClick={this.toggleExplorer}>\n                  <Icon path={mdiAnimationOutline} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }             \n            { isOpen ? (\n              <Tooltip title=\"Sandbox File Manager\">\n                <IconButton color=\"inherit\" onClick={this.toggleFileManager}>\n                  <Icon path={mdiFileCabinet} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }                        \n          </Toolbar>\n        </AppBar>\n\n        <Drawer \n          variant=\"persistent\"\n          open={visibleMainMenu} \n          style={{position:'relative', zIndex: 1}}\n          onClose={this.toggleMainMenu}\n        >\n          <div className={classes.toolbar}>\n          <PerfectScrollbar>   \n            <List dense={true}>\n              <ListItem button onClick={() => this.showAppBar()}>\n                <ListItemIcon><MenuIcon /></ListItemIcon>\n                <ListItemText primary='Tool Bar' />\n              </ListItem>    \n              <ListItem button onClick={() => this.toggleFileManager()}>\n                <ListItemIcon><Icon path={mdiFileCabinet} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='File Manager' />\n              </ListItem>      \n              \n              <ListItem button onClick={() => this.toggleOpenMenu()}>\n                <ListItemIcon><Icon path={mdiFolderMultiple} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Open ...' />\n                {openMenu ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>                    \n              <Collapse in={openMenu} timeout=\"auto\" unmountOnExit>\n                <List dense={true} component=\"div\">\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.showFileOpen()}>\n                    <ListItemIcon><Icon path={mdiFolder} size={'1.0rem'} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-20px'}}>File</Typography>\n                      } />\n                  </ListItem>\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenUrl()}>\n                    <ListItemIcon><Icon path={mdiWeb} size={'1.0rem'} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-20px'}}>URL</Typography>\n                      } />\n                  </ListItem>\n                  { isInputDirSupported() && !isMobile?\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenFolder()}>\n                    <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-20px'}}>Folder</Typography>\n                      } />\n                  </ListItem>    \n                  : null }                     \n                  { isInputDirSupported() && !isMobile?\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenDicomdir()}>\n                    <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-20px'}}>DICOMDIR</Typography>\n                      } />\n                  </ListItem>    \n                  : null }                                          \n                </List>\n              </Collapse>  \n\n              <ListItem button onClick={() => this.clear()}>\n                <ListItemIcon><Icon path={mdiDelete} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Clear All' />\n              </ListItem>  \n              <ListItem button onClick={this.handleLayout}>\n                <ListItemIcon><Icon path={mdiViewGridPlusOutline} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Layout' />              \n              </ListItem>   \n              <ListItem button onClick={() => this.showSettings()}>\n                <ListItemIcon><Icon path={mdiSettings} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Settings' />\n              </ListItem>                \n              <Divider />\n              <ListItem button onClick={() => this.toggleToolbox()} disabled={!isOpen}>\n                <ListItemIcon><Icon path={mdiChartHistogram} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Histogram' />\n              </ListItem>  \n              <ListItem button onClick={() => this.toggleMpr()} disabled={!isOpen || !isMultipleFiles || this.mprPlane === ''}>\n                <ListItemIcon><Icon path={mdiAxisArrow} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='MPR' />\n                {openMpr ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>              \n              <Collapse in={openMpr} timeout=\"auto\" unmountOnExit>\n                <List dense={true} component=\"div\">\n                  <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprOrthogonal()}>\n                    {visibleMprOrthogonal ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'} color={iconColor} /></ListItemIcon> : null}\n                    <ListItemText \n                      style={visibleMprOrthogonal ? {marginLeft: '-7px'} : {marginLeft: '40px'}} \n                      classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Orthogonal</Typography>\n                      } />\n                  </ListItem>\n                  <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprCoronal()}>\n                    {visibleMprCoronal ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'} color={iconColor} /></ListItemIcon> : null}\n                    <ListItemText \n                      style={visibleMprCoronal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n                      classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Coronal</Typography>\n                      } />\n                  </ListItem>    \n                  <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprSagittal()}>\n                    {visibleMprSagittal ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'} color={iconColor} /></ListItemIcon> : null}  \n                    <ListItemText \n                      style={visibleMprSagittal ? {marginLeft: '-7px'} : {marginLeft: '40px'}} \n                      classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Sagittal</Typography>\n                      } />\n                  </ListItem>    \n                  <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprAxial()}>\n                    {visibleMprAxial ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'} color={iconColor} /></ListItemIcon> : null}  \n                    <ListItemText \n                      style={visibleMprAxial ? {marginLeft: '-7px'} : {marginLeft: '40px'}} \n                      classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Axial</Typography>\n                      } />\n                  </ListItem>                                               \n                </List>\n              </Collapse>  \n              <ListItem button onClick={() => this.toggleImageEdit()} disabled={!isOpen}>\n                <ListItemIcon><Icon path={mdiImageEdit} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Edit' />\n                {openImageEdit ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>          \n              <Collapse in={openImageEdit} timeout=\"auto\" unmountOnExit>\n                <List  dense={true} component=\"div\">\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Invert')}>\n                    <ListItemIcon><Icon path={mdiInvertColors} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary=\"Invert\" />\n                  </ListItem>\n                </List>\n              </Collapse>   \n              <ListItem button onClick={() => this.toggleTools()} disabled={!isOpen}>\n                <ListItemIcon><Icon path={mdiTools} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Tools' />\n                {openTools ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>   \n              <Collapse in={openTools} timeout=\"auto\" unmountOnExit>\n                <List dense={true} component=\"div\">\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('notool')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiCursorDefault} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='No tool' />\n                  </ListItem>         \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Wwwc')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiArrowAll} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='WW/WC' />\n                  </ListItem>  \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Pan')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiCursorPointer} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Pan' />\n                  </ListItem>  \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Zoom')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiMagnify} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Zoom' />\n                  </ListItem>      \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Magnify')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiCheckboxIntermediate} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Magnify' />\n                  </ListItem>       \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Length')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiRuler} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Length' />\n                  </ListItem>        \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Probe')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiEyedropper} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Probe' />\n                  </ListItem> \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Angle')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiAngleAcute} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Angle' />\n                  </ListItem>  \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('EllipticalRoi')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiEllipse} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Elliptical Roi' />\n                  </ListItem>     \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('RectangleRoi')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiRectangle} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Rectangle Roi' />\n                  </ListItem> \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('FreehandRoi')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiGesture} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Freehand Roi' />\n                  </ListItem> \n                </List>\n              </Collapse> \n\n            </List>\n            \n            { isMultipleFiles ?\n              <div>     \n                <Divider />     \n                <div align='center'>\n                  <IconButton onClick={this.listOpenFilesFirstFrame} size='small'>\n                    <Icon path={mdiSkipBackward} size={'1.0rem'} color={iconColor} />\n                  </IconButton>\n                  <IconButton onClick={this.listOpenFilesPreviousFrame} size='small'>\n                      <Icon path={mdiSkipPrevious} size={'1.0rem'} color={iconColor} />\n                  </IconButton>\n                  <IconButton onClick={this.listOpenFilesScrolling} size='small'>\n                    <Icon path={this.state.listOpenFilesScrolling ? mdiPause : mdiPlay} size={'1.0rem'} color={iconColor} />\n                  </IconButton>\n                  <IconButton onClick={this.listOpenFilesNextFrame} size='small'>\n                      <Icon path={mdiSkipNext} size={'1.0rem'} color={iconColor} />\n                  </IconButton>\n                  <IconButton onClick={this.listOpenFilesLastFrame} size='small'>\n                      <Icon path={mdiSkipForward} size={'1.0rem'} color={iconColor} />\n                  </IconButton>                \n                </div>  \n                <div style={{textAlign: 'center'}}>\n                  <Typography type=\"body1\" style={{fontSize: '0.80em'}}>{`${this.state.sliceIndex+1} / ${sliceMax}`}</Typography>\n                </div>  \n                <div style={{width: '130px', margin: 'auto'}}>\n                  <Slider\n                    style={{marginTop: '-4px'}}\n                    value={this.state.sliceIndex}\n                    onChange={this.handleSliceChange}\n                    color=\"secondary\"\n                    min={0}\n                    max={sliceMax-1}\n                    step={100/sliceMax}\n                  />\n                </div>\n              </div> : null\n            }\n          </PerfectScrollbar>   \n          </div>\n        </Drawer>       \n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleHeader}\n          onClose={this.toggleHeader}\n        >\n          { visibleHeader ? <DicomHeader dcmViewer={dcmViewer} classes={classes} color={iconColor} /> : null } \n        </Drawer>\n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleMeasure}\n          onClose={this.toggleMeasure}\n        >\n          <div style={{marginTop: '48px'}}>\n            <Toolbar variant=\"dense\">\n              <Typography variant=\"subtitle1\" className={classes.title}>\n                Measurements&nbsp;&nbsp;\n              </Typography>\n              <div className={classes.grow} />\n              <IconButton color=\"inherit\" onClick={this.saveMeasure} edge=\"end\">\n                <Icon path={mdiContentSaveOutline} size={iconSize} color={iconColor} />\n              </IconButton>\n              <IconButton color=\"inherit\" onClick={this.clearMeasure} edge=\"end\">\n                <Icon path={mdiTrashCanOutline} size={iconSize} color={iconColor} />\n              </IconButton>\n            </Toolbar>\n            <div>  \n              { isOpen ? <Measurements dcmViewer={dcmViewer} toolRemove={this.toolRemove} classes={classes} /> : null } \n            </div>\n          </div>\n        </Drawer>  \n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleToolbox}\n          onClose={this.toggleToolbox}\n        >\n          <div style={{marginTop: '48px'}}>\n            <div>  \n              { isOpen ? <Histogram key={this.getFileName(dcmViewer)} /> : null } \n            </div>\n          </div>\n        </Drawer>          \n\n        <Drawer\n          variant=\"persistent\"\n          anchor={getSettingsDicomdirView()}\n          open={visibleDicomdir}\n          onClose={this.toggleDicomdir}\n        >\n          <div>\n            <div>  \n              {visibleDicomdir ? <Dicomdir onOpenFile={this.handleOpenFileDicomdir} onOpenFs={this.handleOpenSandboxFs} /> : null} \n            </div>\n          </div>\n        </Drawer>   \n\n        <Drawer\n          variant=\"persistent\"\n          anchor={getSettingsFsView()}\n          open={visibleFileManager}\n          onClose={this.toggleFileManager}\n        >\n          <div>\n            <div>\n              {visibleFileManager ? \n                <FsUI \n                  onOpen={this.handleOpenSandboxFs} \n                  onOpenImage={this.handleOpenImage} \n                  onOpenMultipleFilesCompleted={this.openMultipleFilesCompleted}\n                  onOpenDicomdir={this.handleOpenFsDicomdir} \n                  color={iconColor} \n                /> \n              : null}\n            </div>\n          </div>\n        </Drawer>       \n\n        {visibleSettings ? <Settings onClose={this.hideSettings}/> : null}\n\n        {visibleAbout ? <AboutDlg onClose={this.showAbout}/> : null}\n\n        {visibleDownloadZipDlg ? <DownloadZipDlg onClose={this.hideDownloadZipDlg} url={this.url} /> : null}\n\n        {visibleOpenMultipleFilesDlg ? <OpenMultipleFilesDlg onClose={this.hideOpenMultipleFilesDlg} files={this.files} origin={'local'} /> : null}\n\n        <Dialog\n            open={visibleClearMeasureDlg}\n            onClose={this.hideClearMeasureDlg}\n        >\n            <DialogTitle>{\"Are you sure to remove all the measurements?\"}</DialogTitle>\n            <DialogActions>\n                <Button onClick={this.hideClearMeasureDlg}>\n                    Cancel\n                </Button>\n                <Button onClick={this.confirmClearMeasureDlg} autoFocus>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        <Dialog\n            open={visibleZippedFileDlg}\n            onClose={this.hideZippedFileDlg}\n        >\n            <DialogTitle>{\"This is a zipped file, would you import into sandbox file system?\"}</DialogTitle>\n            <DialogActions>\n                <Button onClick={this.hideZippedFileDlg}>\n                    Cancel\n                </Button>\n                <Button onClick={this.confirmZippedFileDlg} autoFocus>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        <Dialog\n            open={this.state.visibleOpenUrl}\n        >\n            <DialogTitle>{\"Open URL\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  Insert an URL to download a DICOM or image file:\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"id-open-url\"\n                    inputRef={input => (this.openUrlField = input)}\n                    fullWidth\n                />\n              </DialogContent>\n            <DialogActions>\n                <Button onClick={() => this.hideOpenUrl(false)} >\n                    Cancel\n                </Button>\n                <Button onClick={() => this.hideOpenUrl(true)} autoFocus>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        <Dialog\n            open={this.state.visibleMessage}\n        >\n            <DialogTitle>{this.state.titleMessage}</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  {this.state.textMessage}\n                </DialogContentText>\n              </DialogContent>\n            <DialogActions>\n                <Button onClick={() => this.setState({visibleMessage: false})} >\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        <Popover\n          id={'id-layout'}\n          open={visibleLayout}\n          anchorEl={this.state.anchorElLayout}\n          onClose={this.closeLayout}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left',\n          }}\n        >\n          <LayoutTool \n            row={this.props.layout[0]-1} \n            col={this.props.layout[1]-1}\n            onChange={this.changeLayout}\n          />  \n        </Popover>        \n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={visibleVolumeBuilding}\n          autoHideDuration={6000}\n          message=\"Volume building, wait please ...\"\n        />\n\n        <div style={{height: 'calc(100vh - 48px)'}}>\n          {this.buildLayoutGrid()}  \n        </div>\n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleExplorer}\n          onClose={this.toggleExplorer}\n        >\n          <div>\n            <div>\n              {visibleExplorer ? \n                <Explorer \n                  explorer={this.explorer}\n                  onSelectSeries={this.explorerOnSelectSeries}\n                  color={iconColor} \n                /> \n              : null}\n            </div>\n          </div>\n        </Drawer>   \n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_open\"\n            style={{ display: \"none\" }}\n            ref={this.fileOpen}\n            onChange={e => this.handleOpenLocalFs(e.target.files)}\n            multiple\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_dicomdir\"\n            style={{ display: \"none\" }}\n            ref={this.openDicomdir}\n            onChange={e => this.handleOpenDicomdir(e.target.files)}\n            webkitdirectory=\"\" mozdirectory=\"\" directory=\"\" multiple\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_folder\"\n            style={{ display: \"none\" }}\n            ref={this.openFolder}\n            onChange={e => this.handleOpenFolder(e.target.files)}\n            webkitdirectory=\"\" mozdirectory=\"\" directory=\"\" multiple\n          />\n        </div>    \n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    localFileStore: state.localFileStore,\n    allFiles: state.allFiles,\n    files: state.files,\n    series: state.series,\n    isOpen: state.isOpen,\n    tool: state.tool,\n    activeDcmIndex: state.activeDcmIndex,\n    explorerActivePatientIndex: state.explorerActivePatientIndex,\n    explorerActiveStudyIndex: state.explorerActiveStudyIndex,\n    explorerActiveSeriesIndex: state.explorerActiveSeriesIndex,\n    measurements: state.measurements,\n    layout: state.layout,\n    dicomdir: state.dicomdir,\n    fsZippedFile: state.fsZippedFile,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearingStore: () => dispatch(clearStore()),\n    setLocalFileStore: (file) => dispatch(localFileStore(file)),\n    toolStore: (tool) => dispatch(dcmTool(tool)),\n    isOpenStore: (value) => dispatch(dcmIsOpen(value)),\n    setActiveDcm: (dcm) => dispatch(activeDcm(dcm)),\n    setActiveDcmIndex: (index) => dispatch(activeDcmIndex(index)),\n    setActiveMeasurements: (measurements) => dispatch(activeMeasurements(measurements)),\n    setLayoutStore: (row, col) => dispatch(setLayout(row, col)),\n    setDicomdirStore: (dicomdir) => dispatch(setDicomdir(dicomdir)),\n    setFsZippedFile: (file) => dispatch(setZippedFile(file)),\n    setVolumeStore: (file) => dispatch(setVolume(file)),\n    setFilesStore: (files) => dispatch(filesStore(files)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from 'redux'\r\nimport storeReducer from '../reducers/index'\r\n\r\nlet initialState = {\r\n    localFile: null,\r\n    fsFile: null,\r\n    //allFiles: null,\r\n    files: null,\r\n    series: null,\r\n    isOpen: new Array(16).fill(false),\r\n    tool: null,\r\n    activeDcmIndex: 0,\r\n    activeDcm: null,\r\n    explorer: null,\r\n    explorerActivePatientIndex: 0,\r\n    explorerActiveStudyIndex: 0,\r\n    explorerActiveSeriesIndex: 0,\r\n    measurements: [],\r\n    layout: [1,1], // first element represents the rows, second the columns\r\n    dicomdir: null,\r\n    fsCurrentDir: '',\r\n    fsCurrentList: [],\r\n    fsZippedFile: null,\r\n    fsRefresh: false,\r\n    volume: null,\r\n}\r\n\r\nconst store = createStore(storeReducer, initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store\r\n","import {\r\n  CLEAR_STORE, \r\n  LOCALFILE_STORE,\r\n  FSFILE_STORE,\r\n  //ALLFILES_STORE,\r\n  FILES_STORE,\r\n  SERIES_STORE,\r\n  DCM_IS_OPEN, \r\n  DCM_TOOL, \r\n  ACTIVE_DCM_INDEX, \r\n  ACTIVE_DCM,\r\n  ACTIVE_MEASUREMENTS,\r\n  EXPLORER_STORE,\r\n  EXPLORER_ACTIVE_PATIENT_INDEX,\r\n  EXPLORER_ACTIVE_STUDY_INDEX,\r\n  EXPLORER_ACTIVE_SERIES_INDEX,\r\n  LAYOUT,\r\n  DICOMDIR,\r\n  FSCURRENTDIR,\r\n  FSCURRENTLIST,\r\n  FSZIPPEDFILE,\r\n  FSREFRESH,\r\n  VOLUME_STORE,\r\n} from '../actions'\r\n\r\nexport default function storeReducer(state={}, action) {\r\n    //console.log('storeReducer: ', action)\r\n    switch(action.type) {\r\n      \r\n      case CLEAR_STORE:\r\n        return {\r\n          localFile: state.localFile,\r\n          fsFile: state.fsFile,\r\n          //allfiles: null,\r\n          files: null, \r\n          series: null,\r\n          isOpen: state.isOpen.map((el, i) => i === state.activeDcmIndex ? false : el),\r\n          tool: null,\r\n          activeDcmIndex: state.activeDcmIndex,\r\n          activeDcm: state.activeDcm,\r\n          explorer: state.explorer,\r\n          explorerActivePatientIndex: state.explorerActivePatientIndex,\r\n          explorerActiveStudyIndex: state.explorerActiveStudyIndex,\r\n          explorerActiveSeriesIndex: state.explorerActiveSeriesIndex,\r\n          measurements: null,\r\n          layout: state.layout,\r\n          dicomdir: state.dicomdir, \r\n          fsCurrentDir: state.fsCurrentDir,\r\n          fsCurrentList: state.fsCurrentList,\r\n          fsZippedFile: null,\r\n          fsRefresh: state.fsRefresh,\r\n          volume: null,\r\n          lut: null,\r\n        }    \r\n\r\n      case LOCALFILE_STORE:\r\n          return {\r\n            ...state,\r\n            localFile: action.localFile,     \r\n            fsFile: null,   \r\n          } \r\n\r\n      case FSFILE_STORE:\r\n          return {\r\n            ...state,\r\n            localFile: null,     \r\n            fsFile: action.fsFile,   \r\n          }\r\n/*\r\n      case ALLFILES_STORE:\r\n          return {\r\n            ...state,\r\n            allFiles: action.allFiles,  \r\n          } \r\n*/\r\n      case FILES_STORE:\r\n          return {\r\n            ...state,\r\n            files: action.files,  \r\n          } \r\n\r\n      case SERIES_STORE:\r\n          return {\r\n            ...state,\r\n            series: action.series,  \r\n          }\r\n\r\n      case DCM_IS_OPEN:\r\n          return {\r\n            ...state,\r\n            isOpen: state.isOpen.map((el, i) => i === action.value.index ? action.value.value : el),    \r\n            measurements: state.measurements,\r\n            layout: state.layout,    \r\n            dicomdir: state.dicomdir,    \r\n            fsCurrentDir: state.fsCurrentDir,\r\n            fsCurrentList: state.fsCurrentList,            \r\n          }    \r\n\r\n      case DCM_TOOL:\r\n          return {\r\n            ...state,\r\n            tool: action.tool,\r\n            measurements: state.measurements,\r\n            layout: state.layout,\r\n            dicomdir: state.dicomdir,\r\n            fsCurrentDir: state.fsCurrentDir,\r\n            fsCurrentList: state.fsCurrentList,  \r\n          }  \r\n\r\n      case ACTIVE_DCM_INDEX:\r\n          return {\r\n            ...state,\r\n            activeDcmIndex: action.activeDcmIndex,\r\n            measurements: state.measurements,\r\n            layout: state.layout,\r\n            dicomdir: state.dicomdir,\r\n            fsCurrentDir: state.fsCurrentDir,\r\n            fsCurrentList: state.fsCurrentList,  \r\n          }  \r\n\r\n      case ACTIVE_DCM:\r\n          return {\r\n            ...state,\r\n            activeDcm: action.activeDcm,\r\n            measurements: state.measurements,\r\n            layout: state.layout,\r\n            dicomdir: state.dicomdir,\r\n            fsCurrentDir: state.fsCurrentDir,\r\n            fsCurrentList: state.fsCurrentList,  \r\n          }            \r\n\r\n      case ACTIVE_MEASUREMENTS:\r\n        return {\r\n          ...state,\r\n          measurements: [...action.measurements],\r\n        }  \r\n\r\n      case EXPLORER_STORE:\r\n        return {\r\n          ...state,\r\n          explorer: action.explorer,\r\n        }  \r\n\r\n      case EXPLORER_ACTIVE_PATIENT_INDEX:\r\n        return {\r\n          ...state,\r\n          explorerActivePatientIndex: action.explorerActivePatientIndex,\r\n        }\r\n\r\n      case EXPLORER_ACTIVE_STUDY_INDEX:\r\n        return {\r\n          ...state,\r\n          explorerActiveStudyIndex: action.explorerActiveStudyIndex,\r\n        }\r\n\r\n      case EXPLORER_ACTIVE_SERIES_INDEX:\r\n        return {\r\n          ...state,\r\n          explorerActiveSeriesIndex: action.explorerActiveSeriesIndex,\r\n        }    \r\n\r\n      case LAYOUT:\r\n            return {\r\n              ...state,\r\n              measurements: state.measurements,\r\n              layout: action.layout,\r\n              dicomdir: state.dicomdir,\r\n              fsCurrentDir: state.fsCurrentDir,\r\n              fsCurrentList: state.fsCurrentList,  \r\n            }  \r\n\r\n      case DICOMDIR:\r\n            return {\r\n              ...state,\r\n              dicomdir: action.dicomdir\r\n            }  \r\n\r\n      case FSCURRENTDIR:\r\n            return {\r\n              ...state,\r\n              fsCurrentDir: action.fsCurrentDir\r\n            }  \r\n\r\n      case FSCURRENTLIST:\r\n            return {\r\n              ...state,\r\n              fsCurrentList: [...action.fsCurrentList]\r\n            }  \r\n\r\n      case FSZIPPEDFILE:\r\n            return {\r\n              ...state,\r\n              fsZippedFile: action.fsZippedFile\r\n            }  \r\n\r\n      case FSREFRESH:\r\n            return {\r\n              ...state,\r\n              fsRefresh: !state.fsRefresh\r\n            }  \r\n\r\n      case VOLUME_STORE:\r\n        return {\r\n          ...state,\r\n          volume: action.volume,        \r\n        }      \r\n\r\n      default:\r\n          return state\r\n    }\r\n  }\r\n  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport WebFontLoader from 'webfontloader'\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nWebFontLoader.load({\n    google: {\n        families: ['Roboto:300,400,500,700', 'Material Icons'],\n    },\n})\n\n//store.subscribe(() => console.log('store updated:', store.getState()));\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiFormControlLabel: {\n            label: {\n                fontSize: '0.85em'\n            },\n        },\n        MuiFormLabel: {\n            root: { \n                '&$focused': {\n                    color:'#CCCCCC',\n                },   \n            }\n         \n        }\n    },\n    palette: {\n        primary: {\n            main: '#004d40',\n        },\n        secondary: {\n            main: '#888888',\n        },\n        type: 'dark',\n    },\n  })\n\n  \nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider theme = { theme }>\n            <App />\n        </MuiThemeProvider>\n    </Provider>, \n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n "],"sourceRoot":""}