{"version":3,"sources":["components/AboutDlg.js","fs/fs.js","functions.js","constants/settings.js","actions/index.js","components/Dicomdir.js","constants/uids.js","components/OpenUrlDlg.js","components/CinePlayer.js","db/db.js","components/DicomViewer.js","components/DicomHeader.js","components/DownloadZipDlg.js","components/Explorer.js","components/OpenMultipleFilesDlg.js","components/FsUI.js","components/Histogram.js","components/LayoutTool.js","components/MeasureItem.js","components/Measurements.js","components/Settings.js","App.js","serviceWorker.js","store/index.js","reducers/index.js","index.js"],"names":["AboutDlg","onClose","linkRepository","Typography","variant","Link","href","target","style","color","version","packageJson","Dialog","open","DialogTitle","disableTypography","DialogContent","List","ListItem","ListItemText","primary","secondary","DialogActions","Button","autoFocus","onClick","fs","Dexie","stores","files","getDicomSliceLocation","image","value","data","string","undefined","parseFloat","groupBy","list","keyGetter","map","Map","forEach","item","key","collection","get","push","set","isInputDirSupported","tmpInput","document","createElement","isUrlImage","url","match","isFileImage","file","includes","isFsFileImage","fsItem","console","log","type","toLowerCase","getFileNameCorrect","filename","isAndroid","isFirefox","getFileExt","getFileName","ext","exec","getFileExtReal","name","replace","getSettingsSaveInto","saveInto","localStorage","getItem","setItem","getSettingsOverlay","overlay","getSettingsFsView","view","isMobile","isTablet","getSettingsDicomdirView","getSettingsMprInterpolation","method","toCsvValue","theValue","t","String","fsFileStore","fsFile","filesStore","dcmIsOpen","dcmTool","tool","activeDcm","dcm","activeMeasurements","measurements","setZippedFile","fsZippedFile","styleScrollbar","height","ExpandIcon","expanded","Dicomdir","props","state","buildData","id","output","images","series","study","patient","slice","reverse","obj","i","unshift","path","number","children","setState","buildOutput","dataset","elements","x00041220","items","e","index","dcmTime","dcmDate","toString","dataSet","Date","substring","toLocaleDateString","year","month","day","split","pop","openDicomdir","reader","FileReader","onload","arrayBuffer","result","byteArray","Uint8Array","dicomParser","err","readAsArrayBuffer","openDicomdirFs","find","x","dicomdir","origin","onOpenFile","components","fsCurrentDir","parent","join","where","first","setFsFileStore","onOpenFs","studyText","this","classes","styleComponent","marginTop","width","button","listItemText","Collapse","in","dense","className","PureComponent","connect","dispatch","withStyles","theme","paddingLeft","spacing","fontSize","uids","OpenUrlDlg","hide","cancel","window","stop","aria-labelledby","LinearProgress","progress","CinePlayer","firstframe","runCinePlayer","previousframe","play","pause","nextframe","lastframe","inPlay","IconButton","mdiPause","size","mdiPlay","margin","mdiSkipBackward","mdiSkipPrevious","mdiSkipNext","mdiSkipForward","db","measurement","scrollToIndex","csTools","cornerstoneTools","cornerstone","cornerstoneMath","cornerstoneFileImageLoader","cornerstoneWebImageLoader","cornerstoneWADOImageLoader","Hammer","DicomViewer","visibleOpenUrlDlg","visibleCinePlayer","errorOnOpenImage","errorOnCors","frame","viewport","onOpenUrl","eventData","detail","percentComplete","showOpenUrlDlg","addEventListener","loadImage","hideOpenUrlDlg","measurementSave","measure","measurementClear","splice","length","measurementRemove","getTransferSyntax","getSopClass","getSopInstanceUID","getPixelRepresentation","uint16","getPlanarConfiguration","onImageLoaded","onLoadedImage","onImageRendered","str","use","getElementById","textContent","mprIsOrthogonalView","mprPlane","charAt","toUpperCase","PatientsName","displayedArea","brhc","y","Math","round","voi","windowWidth","windowCenter","scale","toFixed","isDicom","numberOfFrames","onMeasurementModified","onMeasurementAdded","note","measurementData","setActiveMeasurements","onMeasurementCompleted","setTimeout","onErrorOpenImageClose","onErrorCorsClose","displayImageFromFiles","imageId","element","dicomImage","onNewImage","sopInstanceUid","stack","currentImageIdIndex","imageIds","intString","mprPlanePosition","enableTool","equals","each","runTool","then","setActiveDcm","setIsOpenStore","loadImageFromCanvas","canvas","addCanvas","loadImageFromCustomObject","columns","rows","pixelData","customObj","originImage","addCustom","localfile","localurl","isOpenStore","addBuffer","add","fileManager","error","pos","indexOf","toolName","mouseButtonNumber","WwwcTool","LengthTool","PanTool","ZoomTouchPinchTool","ZoomTool","ProbeTool","EllipticalRoiTool","RectangleRoiTool","FreehandRoiTool","AngleTool","MagnifyTool","StackScrollMouseWheelTool","disableAllTools","opt","sliceMax","mouseButtonMask","isTouchActive","invert","getElementsByClassName","activeDcmIndex","zoom","cols","myCanvas","cropCanvas","a","toDataURL","download","body","appendChild","click","blobUtil","blob","newName","counter","done","fsCurrentList","transaction","async","byteLength","makeFsRefresh","reset","delete","sopinstanceuid","newCanvas","getContext","drawImage","changeTool","cmdName","defaultViewport","imageOrientation","v","Array","fill","p","abs","transpose","matrix","Object","keys","colNumber","rowNumber","mprRenderYZPlane","mprData","volume","sliceIndex","xSize","ySize","zSize","zDim","xoffset","floor","plane","Int16Array","z","yzPlane","mprBuildYZPlane","mprRenderXZPlane","trunc","xzPlane","mprBuildXZPlane","layout","dicomImageRef","el","onImageClick","getSeriesLength","seriesList","seriesKeys","getSeriesDescription","seriesDescription","dcmRef","previousProps","isOpen","visible","styleContainer","border","explorerActiveSeriesIndex","position","DialogContentText","aria-describedby","gutterBottom","textShadow","visibility","onContextMenu","ref","top","left","display","right","bottom","marginLeft","marginRight","textAlign","backgroundColor","React","Component","lut","clearingStore","toolStore","DicomHeader","dcmViewer","header","minPixelValue","maxPixelValue","listItems","Toolbar","title","grow","exportAs","fileData","objArray","cDelimiter","l","row","n","nl","names","sDelimiter","hasOwnProperty","toCsv","reduce","o","JSON","stringify","Blob","URL","createObjectURL","mdiContentSaveOutline","component","source","axios","CancelToken","DownloadZipDlg","loading","requestDownloadZip","responseType","cancelToken","token","onDownloadProgress","progressEvent","percentCompleted","loaded","total","response","setFsZippedFile","catch","padding","styleDicomViewerStack","styleDicomViewer","Explorer","patientName","explorer","studies","seriesActiveIndex","setDcmViewer","dicomViewersRefs","getDcmViewerRef","getDcmViewer","dicomViewers","buildPreviewStack","dicomviewers","previewStackClick","onTouchStart","previewStackTouch","gridTemplateRows","gridTemplateColumns","handlePatientChange","event","patientIndex","filesListForPatient","allFiles","filter","studyList","studyDateTime","studyKeys","seriesNumber","setSeriesStore","setExplorerActivePatientIndex","handleStudyChange","studyIndex","studyDate","studyDescription","setExplorerActiveSeriesIndex","onSelectSeries","explorerActivePatientIndex","explorerActiveStudyIndex","FormControl","formControl","InputLabel","Select","selectText","labelId","onChange","MenuItem","menuItemText","setFilesStore","setExplorer","setExplorerActiveStudyIndex","seriesStore","minWidth","selectEmpty","OpenMultipleFilesDlg","close","count","step","nextProgress","t0","performance","now","setAllFilesStore","getDicomPatientName","studyId","getDicomStudyId","getDicomStudyDate","studyTime","getDicomStudyTime","getDicomStudyDescription","seriesDate","getDicomSeriesDate","seriesTime","getDicomSeriesTime","getDicomSeriesDescription","getDicomSeriesNumber","instanceNumber","getDicomInstanceNumber","sliceDistance","ipp","topLeftCorner","iop","dist","getDicomSliceDistance","sliceLocation","getDicomColumns","getDicomRows","dateTime","date","time","localeDate","dicomDateTimeToLocale","sort","r","t1","allFilesStore","FsUI","textFieldLabel","textFieldValue","selected","selectedCopy","visibleTextField","visibleDeleteDlg","visibleOthers","visibleAlreadyExistDlg","visibleOSaveAsDlg","visibleWaiting","visibleOpenMultipleFilesDlg","doSelectUnselect","newSelected","openSelectedFilesRetrieveItems","startsWithIgnoreCase","openSelectedFiles","hideOpenMultipleFilesDlg","onOpenMultipleFilesCompleted","onOpenImage","createDir","renameItem","lastSelected","previousDir","nextDir","setCurrentDir","fsListDir","confirmText","oldParent","fsBuildParent","newParent","fsCreateDir","cancelDir","saveItem","localFileStore","buffer","copyItem","newSelectedCopy","cutItem","cut","pasteItem","deleteItem","showOthers","exportItem","itemClick","selectedIndex","concat","itemDoubleClick","onOpenDicomdir","onOpen","showDeleteDlg","hideDeleteDlg","confirmDeleteDlg","hideAlreadyExistDlg","hideSaveAs","closeSaveAs","saveAsField","zip","JSZip","folder","generateAsync","saveAs","mouseDown","timer","mouseUp","clearTimeout","itemsCount","createRef","loadAsync","contents","relativePath","zipEntry","dir","content","fsAddItem","put","create","sortBy","and","setCurrentList","totalItemsCount","Paper","textPaper","InputBase","textInput","placeholder","defaultValue","textButton","mdiCheck","mdiClose","leftButtons","CircularProgress","Tooltip","mdiChevronLeft","toolbarButtons","mdiCheckBoxOutline","mdiFolderOutline","mdiFolderPlusOutline","mdiSquareEditOutline","mdiDotsHorizontal","mdiContentCut","mdiContentCopy","mdiContentPaste","mdiDeleteOutline","mdiExportVariant","float","TableContainer","Table","table","TableHead","TableRow","TableCell","align","TableBody","isItemSelected","role","hover","onDoubleClick","onTouchEnd","onMouseDown","onMouseUp","scope","tableCellText","bytes","decimals","k","dm","sizes","pow","formatBytes","TextField","inputRef","input","fullWidth","localFile","fsRefresh","setFsCurrentDir","setFsCurrentList","alignItems","flex","styleSlider","styleCanvasGradient","styleTable","borderCollapse","fontFamily","styleTableTd","tableLayout","Histogram","activeDrags","deltaPosition","controlledPosition","histCount","valueScale","minHist","maxHist","mean","stdDev","handleChangeValue","newValue","binSize","hist256","onDrag","ui","deltaX","deltaY","onStart","onStop","canvasHistogram","canvasGradient","canvasH","current","ctxH","translate","updateCanvas","clearRect","evt","rect","getBoundingClientRect","clientX","clientY","getPixelData","storedPixelData","spIndex","column","red","green","blue","alpha","getRGBPixelsImage","getPixelsImage","intercept","lenHist","zero256","stepWW","stepWC","m","hist","mo","getPixel","slope","s","sqrt","max","binStep","iHist","j","mousePos","getMousePos","beginPath","fillStyle","fillRect","strokeStyle","h","moveTo","lineTo","stroke","lineWidth","lowX","highX","ctxG","grd","createLinearGradient","addColorStop","cursor","Slider","min","LayoutTool","initTable","col","tableRef","cells","bgColor","cellClick","parentNode","rowIndex","cellIndex","renderTable","MeasureItem","visibleDlgNote","visibleDlgDelete","showDlgNote","hideDlgNote","showDlgDelete","hideDlgDelete","handleOnChangeNote","confirmNote","noteField","confirmDelete","toolRemove","onEdit","onDelete","pText","sText","unit","rAngle","cachedStats","area","meanStdDev","edge","Measurements","visibleClearMeasureDlg","showClearMeasureDlg","hideClearMeasureDlg","confirmClearMeasureDlg","useStyles","makeStyles","appBar","formLabel","radioControl","Settings","getSettingsSaveAs","getSettingsDcmHeader","fsView","dicomdirView","mprInterpolation","useState","fullScreen","AppBar","elevation","aria-label","FormControlLabel","control","Checkbox","checked","label","FormLabel","RadioGroup","Radio","iconTool","App","anchorElLayout","openMenu","openImageEdit","openTools","openMpr","textMessage","titleMessage","visibleMainMenu","visibleHeader","visibleSettings","visibleToolbar","visibleOpenUrl","visibleToolbox","visibleMeasure","visibleAbout","visibleDicomdir","visibleFileManager","visibleZippedFileDlg","visibleDownloadZipDlg","toolState","listOpenFilesScrolling","visibleVolumeBuilding","visibleMprOrthogonal","visibleMprCoronal","visibleMprSagittal","visibleMprAxial","visibleExplorer","visibleMessage","getActiveDcmViewer","handleOpenLocalFs","filesSelected","changeLayout","setLocalFileStore","handleOpenSandboxFs","handleOpenImage","isArray","getOwnPropertyNames","handleOpenFileDicomdir","handleOpenFolder","webkitRelativePath","handleOpenDicomdir","datafiles","setDicomdirStore","toggleDicomdir","handleOpenFsDicomdir","showAppBar","scrollTo","toggleMainMenu","showMainMenu","hideMainMenu","handleVisibility","toggleFileManager","toggleExplorer","toggleHeader","toggleToolbox","saveMeasure","toggleMeasure","hideMeasure","handleVisibilityMeasure","clearMeasure","showZippedFileDlg","hideZippedFileDlg","confirmZippedFileDlg","showAbout","showSettings","hideSettings","handleVisibilitySettings","hideDownloadZipDlg","openMultipleFilesCompleted","patientList","patientKeys","showOpenUrl","hideOpenUrl","openDlg","openUrlField","downloadOpenUrl","resetImage","saveShot","cinePlayer","clear","handleLayout","currentTarget","closeLayout","layoutGridClick","setLayoutStore","toolExecute","mdiArrowAll","mdiCursorPointer","mdiMagnify","mdiRuler","mdiEyedropper","mdiAngleAcute","mdiEllipse","mdiRectangle","mdiGesture","toolChange","toggleOpenMenu","toggleImageEdit","toggleTools","toggleMpr","setActiveDcmIndex","layoutGridTouch","buildLayoutGrid","styleLayoutGrid","getStringVisiblePlane","appBarTitle","getImageOrientationZ","mprBuildVolume","xPixelSpacing","getDicomPixelSpacing","spacingBetweenSlice","getDicomSpacingBetweenSlice","sliceThickness","getDicomSliceThickness","zDimMethod2","len","emptyPlane","order","iFile","previous","object","intervals","ceil","interpolationMethod","w","p0","p1","zStep","changeToOrthogonalView","changeToSagittalView","changeToCoronalView","changeToAxialView","xzIndex","yzIndex","force","mprOrthogonal","from","to","mprSagittal","mprCoronal","mprAxial","listOpenFilesFirstFrame","listOpenFilesPreviousFrame","listOpenFilesNextFrame","listOpenFilesLastFrame","scrolling","clearInterval","timerScrolling","setInterval","handleSliceChange","explorerOnSelectSeries","fileOpen","showFileOpen","bind","showOpenDicomdir","openFolder","showOpenFolder","primaryClass","isDicomdir","isMultipleFiles","visibleLayout","Boolean","iconToolColor","menuButton","mdiInformationOutline","mdiVideo","mdiRefresh","mdiCamera","mdiToolbox","mdiFileCad","mdiFileDocument","mdiFolderOpen","mdiAnimationOutline","mdiFileCabinet","Drawer","zIndex","toolbar","ListItemIcon","mdiFolderMultiple","timeout","unmountOnExit","mdiFolder","mdiWeb","mdiDelete","mdiViewGridPlusOutline","mdiSettings","Divider","disabled","mdiChartHistogram","mdiAxisArrow","mdiImageEdit","mdiInvertColors","mdiTools","mdiCursorDefault","mdiCheckboxIntermediate","anchor","mdiTrashCanOutline","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Snackbar","autoHideDuration","message","multiple","webkitdirectory","mozdirectory","directory","setLayout","setDicomdir","setVolumeStore","palette","common","black","flexGrow","root","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","mixins","isLocalhost","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","store","createStore","action","allfiles","__REDUX_DEVTOOLS_EXTENSION__","WebFontLoader","load","google","families","createMuiTheme","overrides","MuiFormControlLabel","MuiFormLabel","main","ReactDOM","render","process","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qvEAqEeA,EAxDE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAIVC,EACF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAChB,kBAACC,EAAA,EAAD,CACIC,KALU,+CAMVC,OAAO,SACPC,MAAO,CAAEC,MAAO,YAHpB,gDAUFC,EACF,kBAACP,EAAA,EAAD,CAAYC,QAAQ,QAAQI,MAAO,CAAEC,MAAO,YACvCE,EAAYD,SAIrB,OACE,6BACE,kBAACE,EAAA,EAAD,CAAQX,QAASA,EAASY,MAAM,GAC5B,kBAACC,EAAA,EAAD,CAAab,QAASA,EAASc,mBAAmB,GAC9C,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,MAApB,SACU,qCADV,YACqC,qCADrC,QAC4D,qCAD5D,UAIJ,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,kBACRC,UAAWnB,KAGnB,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,WACRC,UAAWX,OAK3B,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,WAAS,EAACC,QAASxB,GAA3B,a,8FC1DVyB,EAAK,IAAIC,IAAM,QAErBD,EAAGhB,QAAQ,GAAGkB,OAAO,CACjBC,MAAO,sCAGXH,EAAGb,OAEYa,Q,QCkHR,SAASI,EAAsBC,GAClC,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOI,WAAWJ,GAwFf,SAASK,EAAQC,EAAMC,GAC1B,IAAMC,EAAM,IAAIC,IAUhB,OATAH,EAAKI,SAAQ,SAACC,GACV,IAAMC,EAAML,EAAUI,GAChBE,EAAaL,EAAIM,IAAIF,GACtBC,EAGDA,EAAWE,KAAKJ,GAFhBH,EAAIQ,IAAIJ,EAAK,CAACD,OAKfH,EA0BJ,SAASS,IACZ,IAAIC,EAAWC,SAASC,cAAc,SACtC,MAAI,oBAAqBF,GAClB,iBAAkBA,GAClB,eAAgBA,GAChB,gBAAiBA,GACjB,cAAeA,EAInB,SAASG,EAAWC,GACvB,YAAYnB,IAARmB,GAA6B,OAARA,GACgB,MAAlCA,EAAIC,MAAM,qBAGd,SAASC,EAAYC,GACxB,QAAatB,IAATsB,GAA+B,OAATA,EAAe,OAAO,EAEhD,OAAOA,GADoB,CAAC,aAAc,aACRC,SAASD,EAAI,MAG5C,SAASE,EAAcC,GAE1B,OADAC,QAAQC,IAAI,kBAAmBF,QAChBzB,IAAXyB,GAAmC,OAAXA,IACS,SAA9BA,EAAOG,KAAKC,eAA0D,QAA9BJ,EAAOG,KAAKC,eAGxD,SAASC,EAAmBC,GAC/B,GAAIC,aAAaC,aAED,SADAC,EAAWH,GAEnB,OAAOI,EAAYJ,GAG3B,OAAOA,EAGJ,SAASG,EAAWZ,GACvB,IACMc,EADK,kBACIC,KAAKf,GAAM,GAC1B,YAAYtB,IAARoC,EACO,MAEJA,EAGJ,SAASE,EAAehB,GAC3B,IACMc,EADK,kBACIC,KAAKf,GAAM,GAC1B,YAAYtB,IAARoC,EACO,GAEJA,EAGJ,SAASD,EAAYb,GACxB,IAAMiB,EAAOjB,EAAKkB,QAAQ,YAAa,IACvC,YAAaxC,IAATuC,EACO,GAEJA,EA6BJ,SAASE,IACZ,IAAIC,EAAWC,aAAaC,QCtVC,YD2V7B,OAJiB,OAAbF,IACAA,EAAW,QACbC,aAAaE,QCzVc,WDyVaH,IAEnCA,EAoBJ,SAASI,IACZ,IAAIC,EAAUJ,aAAaC,QC9WC,WDmX5B,OAJgB,OAAZG,IACFA,EAAU,IACVJ,aAAaE,QCjXa,UDiXaE,IAEtB,MAAZA,EAoBJ,SAASC,KACZ,IAAIC,EAAON,aAAaC,QCtYG,UD2Y3B,OAJa,OAATK,IACAA,EAAOC,aAAaC,WAAW,SAAW,QAC1CR,aAAaE,QCzYU,SDyYeI,IAEnCA,EAOJ,SAASG,KACZ,IAAIH,EAAON,aAAaC,QClZS,gBDuZjC,OAJa,OAATK,IACAA,EAAOC,aAAaC,WAAW,SAAW,QAC1CR,aAAaE,QCrZgB,eDqZeI,IAEzCA,EAOJ,SAASI,KACZ,IAAIC,EAASX,aAAaC,QC9ZW,oBDmarC,OAJe,OAAXU,IACAA,EAAS,iBACTX,aAAaE,QCjaoB,mBDiaeS,IAE7CA,EAcX,SAASC,GAAWC,GAChB,IAAIC,SAAWD,EAaf,MARU,cAANC,GAA2B,OAANA,EACZ,GACI,WAANA,EAJM,IAKSD,EAAShB,QAAQ,KAAM,MALhC,QAOSkB,OAAOF,GAAUhB,QAAQ,KAAM,MAPxC,IE7bd,IAoCMmB,GAAc,SAACrC,GACxB,MAAO,CACHM,KApCoB,kBAqCpBgC,OAAQtC,IAWHuC,GAAa,SAACnE,GACvB,MAAO,CACHkC,KAhDmB,cAiDnBlC,MAAOA,IAWFoE,GAAY,SAACjE,GACtB,MAAO,CACH+B,KA5DmB,cA6DnB/B,MAAOA,IAIFkE,GAAU,SAACC,GACpB,MAAO,CACHpC,KAlEgB,WAmEhBoC,KAAMA,IAWDC,GAAY,SAACC,GACtB,MAAO,CACHtC,KA9EkB,aA+ElBqC,UAAWC,IAINC,GAAqB,SAACC,GAC/B,MAAO,CACHxC,KApF2B,sBAqF3BwC,aAAcA,IA4DTC,GAAgB,SAAC/C,GAC1B,MAAO,CACHM,KA1IoB,eA2IpB0C,aAAchD,ICzHhBiD,GAAiB,CACrBC,OAAQ,sBAGJC,GAAa,SAAC,GAAD,SAAGC,SAA0B,kBAAC,IAAD,MAAqB,kBAAC,IAAD,OAE/DC,G,YACF,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAIRC,MAAQ,CACN/E,KAAM,GACN4E,SAAU,IAPO,EAiBnBI,UAAY,WAAgB,IAAfC,EAAc,uDAAT,KACZC,EAAS,EAAKA,OACP,OAAPD,IACFC,EAAOD,GAAIL,UAAYM,EAAOD,GAAIL,UAEpC,IAAIO,EAAS,GACTC,EAAS,GACTC,EAAQ,GACRC,EAAU,GACdJ,EAAOK,QAAQC,UAAU/E,SAAQ,SAACgF,EAAKC,GACrB,UAAZD,EAAI9E,IACNwE,EAAOQ,QAAQ,CAACV,GAAIQ,EAAIR,GAAItE,IAAK8E,EAAI9E,IAAKiF,KAAMH,EAAIG,KAAM7F,MAAO0F,EAAI1F,QAChD,WAAZ0F,EAAI9E,KACbyE,EAAOO,QAAQ,CAACV,GAAIQ,EAAIR,GAAItE,IAAK8E,EAAI9E,IAAKkF,OAAQJ,EAAII,OAAQ9F,MAAO0F,EAAI1F,MAAO6E,SAAUa,EAAIb,SAAUkB,SAAUX,IAClHA,EAAS,IACY,UAAZM,EAAI9E,KAEb0E,EAAMM,QAAQ,CAACV,GAAIQ,EAAIR,GAAItE,IAAK8E,EAAI9E,IAAKZ,MAAO0F,EAAI1F,MAAO6E,SAAUa,EAAIb,SAAUkB,SAAUV,IAC7FA,EAAS,IACY,YAAZK,EAAI9E,MACb2E,EAAQK,QAAQ,CAACV,GAAIQ,EAAIR,GAAItE,IAAK8E,EAAI9E,IAAKZ,MAAO0F,EAAI1F,MAAO6E,SAAUa,EAAIb,SAAUkB,SAAUT,IAC/FA,EAAQ,OAGZ,EAAKU,SAAS,CAAC/F,KAAMsF,KAzCJ,EA4CnBU,YAAc,SAACC,GAEb,IAAIjG,EAAOiG,EAAQC,SAASC,UAAUC,MAClClB,EAAS,GAqBb,OApBIlF,GACAA,EAAKS,SAAQ,SAAC4F,EAAGC,GACf,IH4GmBC,EANGC,EGtGhBvB,EAAKqB,EAAMG,WACjB,GAAsC,YAAlCJ,EAAEK,QAAQzG,OAAO,aAEjBiF,EAAOpE,KAAK,CAACmE,GAAIA,EAAItE,IAAK,UAAWZ,MAAOsG,EAAEK,QAAQzG,OAAO,aAAc2E,UAAU,SAClF,GAAsC,UAAlCyB,EAAEK,QAAQzG,OAAO,aAA0B,CAElD,IAAMF,EAAK,WHgGOyG,EGhGiBH,EAAEK,QAAQzG,OAAO,aHiGnD,IAAI0G,KAAKH,EAAQI,UAAU,EAAG,GAAG,IAAIJ,EAAQI,UAAU,EAAG,GAAG,IAAIJ,EAAQI,UAAU,IACxEC,wBAAmB3G,EAAW,CAAE4G,KAAM,UAAWC,MAAO,QAASC,IAAK,aGlGvE,eHsGIT,EGtGuEF,EAAEK,QAAQzG,OAAO,cHuG9F2G,UAAU,EAAG,GAAG,IAAIL,EAAQK,UAAU,EAAG,GAAG,IAAIL,EAAQK,UAAU,EAAG,IGtG9E1B,EAAOpE,KAAK,CAACmE,GAAIA,EAAItE,IAAK,QAASZ,MAAOA,EAAO6E,UAAU,QAClB,WAAlCyB,EAAEK,QAAQzG,OAAO,aAExBiF,EAAOpE,KAAK,CAACmE,GAAIA,EAAItE,IAAK,SAAUkF,OAAQQ,EAAEK,QAAQzG,OAAO,aAAcF,MAAOsG,EAAEK,QAAQzG,OAAO,aAAc2E,UAAU,IAClF,UAAlCyB,EAAEK,QAAQzG,OAAO,cAExBiF,EAAOpE,KAAK,CAACmE,GAAIA,EAAItE,IAAK,QAASiF,KAAMS,EAAEK,QAAQzG,OAAO,aAAayC,QAAQ,MAAO,KAAM3C,MAAOsG,EAAEK,QAAQzG,OAAO,aAAagH,MAAM,MAAMC,MAAOtC,UAAU,OAKjKM,GApEU,EAuEnBiC,aAAe,SAAC3F,GACZ,IAAI4F,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAC9F,GACf,IAAI+F,EAAcH,EAAOI,OACrBC,EAAY,IAAIC,WAAWH,GAE3BtB,EAAU,KACVf,EAAS,GACb,IACIe,EAAU0B,aAAuBF,GACjCvC,EAAS,EAAKc,YAAYC,GAC5B,MAAM2B,GACsB,oBAAfA,EAAIlB,UACXxB,EAAS,EAAKc,YAAY4B,EAAIlB,UAGtC,EAAKxB,OAASA,EACd,EAAKF,aAGPoC,EAAOS,kBAAkBrG,IA3FV,EA8FnBsG,eAAiB,SAACnG,GAChB,IAAI8F,EAAY,IAAIC,WAAW/F,EAAO3B,MAClCiG,EAAU,KACVf,EAAS,GACb,IACEe,EAAU0B,aAAuBF,GACjCvC,EAAS,EAAKc,YAAYC,GAC1B,MAAM2B,GACoB,oBAAfA,EAAIlB,UACbxB,EAAS,EAAKc,YAAY4B,EAAIlB,UAGlC,EAAKxB,OAASA,EACd,EAAKF,aA3GY,EA8GnBxF,QAAU,SAACyF,GACT,IAAMQ,EAAM,EAAKP,OAAO6C,MAAK,SAAAC,GAAC,OAAIA,EAAE/C,KAAOA,KAC3C,GAAgB,UAAZQ,EAAI9E,IACN,GAAmC,UAA/B,EAAKmE,MAAMmD,SAASC,OAAoB,CAC1C,IAAM1G,EAAO,EAAKsD,MAAMmD,SAASrI,MAAMmI,MAAK,SAAAC,GAAC,OAAIA,EAAEvF,OAASgD,EAAI1F,SAChE,EAAK+E,MAAMqD,WAAW3G,OACjB,CACL,IAAI4G,EAAa3C,EAAIG,KAAKqB,MAAM,KAC1BxE,EAAO2F,EAAWlB,MACxBkB,EAAWzC,QAAQ,EAAKb,MAAMuD,cAC9B,IAAMC,EAASF,EAAWG,KAAK,KAC/B9I,EAAGG,MAAM4I,MAAM,CAACF,OAAQA,EAAQ7F,KAAMA,IAAOgG,OAAM,SAAC/H,GAClD,EAAKoE,MAAM4D,eAAehI,GAC1B,EAAKoE,MAAM6D,SAASjI,WAIxB,EAAKsE,UAAUC,IA/HA,EAmInB2D,UAAY,SAACvD,GAEX,OAAOA,EAAMtF,OAnIb,EAAKmF,OAAS,KAFG,E,iFAWoB,UAA/B2D,KAAK/D,MAAMmD,SAASC,OACtBW,KAAK1B,aAAa0B,KAAK/D,MAAMmD,SAASA,UAEtCY,KAAKf,eAAee,KAAK/D,MAAMmD,SAASA,Y,+BA0HpC,IAAD,OACCa,EAAYD,KAAK/D,MAAjBgE,QAEJC,EAAiB,KAOrB,OALIA,EAD8B,WAA9BzF,KACiB,CAAC0F,UAAW,MAAOtE,OAAQ,SAE3B,CAACsE,UAAW,OAAQC,MAAO,SAI9C,kBAAC,IAAD,KACA,yBAAK1K,MAAOkG,IACZ,yBAAKlG,MAAOwK,GAEV,kBAAC/J,EAAA,EAAD,KACG6J,KAAK9D,MAAM/E,KAAKO,KAAI,WAAiB+F,GAAjB,IAAMhB,EAAN,yBACnB,kBAAC,WAAD,CAAU3E,IAAK2F,GACb,kBAACrH,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAKA,QAAQ8F,EAAQL,MACnD,kBAAC/F,EAAA,EAAD,CAAcC,QAASmG,EAAQvF,MAAOX,UAAWkG,EAAQ3E,IAAKmI,QAAS,CAAC3J,QAAQ2J,EAAQK,aAAc/J,UAAU0J,EAAQK,gBACxH,kBAAC,GAAD,CAAYvE,SAAUU,EAAQV,YAEhC,kBAACwE,EAAA,EAAD,CAAUC,GAAI/D,EAAQV,UACnBU,EAAQQ,SAASvF,KAAI,SAAA8E,GAAK,OACzB,kBAAC,WAAD,CAAU1E,IAAK0E,EAAMJ,IACnB,kBAAChG,EAAA,EAAD,CAAU0B,IAAK0E,EAAMJ,GAAIiE,QAAM,EAACI,OAAK,EAAC9J,QAAS,kBAAM,EAAKA,QAAQ6F,EAAMJ,KAAKsE,UAAWT,EAAQzD,OAC9F,kBAACnG,EAAA,EAAD,CAAcC,QAAS,EAAKyJ,UAAUvD,GAAQjG,UAAWiG,EAAM1E,IAAKmI,QAAS,CAAC3J,QAAQ2J,EAAQK,aAAc/J,UAAU0J,EAAQK,gBAC9H,kBAAC,GAAD,CAAYvE,SAAUS,EAAMT,YAE9B,kBAACwE,EAAA,EAAD,CAAUC,GAAIhE,EAAMT,UACjBS,EAAMS,SAASvF,KAAI,SAAA6E,GAAM,OACxB,kBAAC,WAAD,CAAUzE,IAAKyE,EAAOH,IACpB,kBAAChG,EAAA,EAAD,CAAU0B,IAAKyE,EAAOH,GAAIiE,QAAM,EAACI,OAAK,EAAC9J,QAAS,kBAAM,EAAKA,QAAQ4F,EAAOH,KAAKsE,UAAWT,EAAQ1D,QAChG,kBAAClG,EAAA,EAAD,CAAcC,QAAO,UAAKiG,EAAOrF,MAAZ,aAAsBqF,EAAOS,OAA7B,KAAwCzG,UAAWgG,EAAOzE,IAAKmI,QAAS,CAAC3J,QAAQ2J,EAAQK,aAAc/J,UAAU0J,EAAQK,gBAC9I,kBAAC,GAAD,CAAYvE,SAAUS,EAAMT,YAE9B,kBAACwE,EAAA,EAAD,CAAUC,GAAIjE,EAAOR,UAClBQ,EAAOU,SAASvF,KAAI,SAAA4E,GAAM,OACzB,kBAAClG,EAAA,EAAD,CAAU0B,IAAKwE,EAAOF,GAAIiE,QAAM,EAACI,OAAK,EAAC9J,QAAS,kBAAM,EAAKA,QAAQ2F,EAAOF,KAAKsE,UAAWT,EAAQ3D,QAChG,kBAACjG,EAAA,EAAD,CAAcC,QAASgG,EAAOpF,MAAOX,UAAW+F,EAAOxE,IAAKmI,QAAS,CAAC3J,QAAQ2J,EAAQK,aAAc/J,UAAU0J,EAAQK,2C,GAhLjIK,iBAiNRC,gBAbS,SAAC1E,GACrB,MAAO,CACLkD,SAAUlD,EAAMkD,SAChBI,aAActD,EAAMsD,iBAIC,SAACqB,GAC1B,MAAO,CACLhB,eAAgB,SAAClH,GAAD,OAAUkI,EAAS7F,GAAYrC,QAIpCiI,CAA6CE,aAtO7C,SAAAC,GAAK,MAAK,CACvBvE,MAAO,CACLwE,YAAaD,EAAME,QAAQ,IAE7B1E,OAAQ,CACNyE,YAAaD,EAAME,QAAQ,IAE7B3E,OAAQ,CACN0E,YAAaD,EAAME,QAAQ,IAE7BX,aAAa,CACXY,SAAS,aA2N+CJ,CAAmB9E,K,oHC5OlEmF,GAAO,CAClB,oBAAoB,yBACpB,oBAAoB,+DACpB,sBAAsB,4BACtB,yBAAyB,qCACzB,sBAAsB,mCACtB,yBAAyB,4FACzB,yBAAyB,kHACzB,yBAAyB,0CACzB,yBAAyB,sEACzB,yBAAyB,sEACzB,yBAAyB,sEACzB,yBAAyB,sEACzB,yBAAyB,+CACzB,yBAAyB,yDACzB,yBAAyB,0DACzB,yBAAyB,0DACzB,yBAAyB,oEACzB,yBAAyB,oEACzB,yBAAyB,kEACzB,yBAAyB,kEACzB,yBAAyB,qDACzB,yBAAyB,qDACzB,yBAAyB,wJACzB,yBAAyB,qCACzB,yBAAyB,kDACzB,yBAAyB,8CACzB,yBAAyB,8BACzB,yBAAyB,qEACzB,yBAAyB,qDACzB,yBAAyB,kBACzB,yBAAyB,0BACzB,0BAA0B,kCAC1B,0BAA0B,kCAC1B,0BAA0B,4CAC1B,0BAA0B,0DAC1B,0BAA0B,yDAC1B,0BAA0B,yDAC1B,0BAA0B,mDAC1B,sBAAsB,eACtB,wBAAwB,8BACxB,wBAAwB,eACxB,uBAAuB,kCACvB,wBAAwB,2CACxB,wBAAwB,6BACxB,wBAAwB,6BACxB,wBAAwB,6BACxB,wBAAwB,8BACxB,wBAAwB,iCACxB,wBAAwB,8BACxB,wBAAwB,iCACxB,wBAAwB,gCACxB,yBAAyB,+BACzB,yBAAyB,gCACzB,yBAAyB,8BACzB,yBAAyB,oCACzB,yBAAyB,mCACzB,yBAAyB,mCACzB,yBAAyB,mCACzB,yBAAyB,mCACzB,yBAAyB,uCACzB,wBAAwB,iCACxB,wBAAwB,6CACxB,sBAAsB,sCACtB,sBAAsB,iCACtB,sBAAsB,4CACtB,sBAAsB,yCACtB,oBAAoB,uDACpB,uBAAuB,0CACvB,yBAAyB,6CACzB,uBAAuB,oDACvB,yBAAyB,uDACzB,qBAAqB,qCACrB,uBAAuB,wCACvB,qBAAqB,6CACrB,uBAAuB,gDACvB,sBAAsB,qBACtB,uBAAuB,+BACvB,wBAAwB,iCACxB,0BAA0B,kDAC1B,0BAA0B,uDAC1B,0BAA0B,gDAC1B,0BAA0B,gDAC1B,0BAA0B,iDAC1B,0BAA0B,8CAC1B,0BAA0B,uDAC1B,0BAA0B,2DAC1B,0BAA0B,kDAC1B,0BAA0B,uDAC1B,0BAA0B,qDAC1B,0BAA0B,yDAC1B,oBAAoB,wBACpB,wBAAwB,+BACxB,wBAAwB,2BACxB,wBAAwB,sCACxB,0BAA0B,kCAC1B,0BAA0B,2CAC1B,wBAAwB,kDACxB,0BAA0B,iEAC1B,yBAAyB,sBACzB,yBAAyB,iCACzB,yBAAyB,oBACzB,6BAA6B,4CAC7B,yBAAyB,uBACzB,6BAA6B,+CAC7B,yBAAyB,8CACzB,2BAA2B,6DAC3B,yBAAyB,wBACzB,yBAAyB,6BACzB,yBAAyB,wCACzB,2BAA2B,oDAC3B,yBAAyB,qCACzB,yBAAyB,6CACzB,yBAAyB,2CACzB,yBAAyB,uDACzB,yBAAyB,mDACzB,yBAAyB,yCACzB,yBAAyB,wDACzB,yBAAyB,0CACzB,yBAAyB,2BACzB,2BAA2B,8BAC3B,4BAA4B,qCAC5B,8BAA8B,iDAC9B,gCAAgC,+CAChC,8BAA8B,6DAC9B,gCAAgC,2DAChC,8BAA8B,4DAC9B,gCAAgC,0DAChC,4BAA4B,mBAC5B,8BAA8B,4BAC9B,8BAA8B,6CAC9B,4BAA4B,iDAC5B,8BAA8B,uCAC9B,4BAA4B,mBAC5B,8BAA8B,4BAC9B,8BAA8B,0BAC9B,8BAA8B,kCAC9B,8BAA8B,6CAC9B,4BAA4B,2CAC5B,4BAA4B,qCAC5B,8BAA8B,2BAC9B,8BAA8B,6BAC9B,4BAA4B,kCAC5B,8BAA8B,yDAC9B,8BAA8B,6DAC9B,8BAA8B,6DAC9B,8BAA8B,yDAC9B,4BAA4B,uCAC5B,4BAA4B,qCAC5B,8BAA8B,qCAC9B,gCAAgC,+BAChC,gCAAgC,+BAChC,gCAAgC,kCAChC,gCAAgC,+BAChC,gCAAgC,6CAChC,gCAAgC,qCAChC,gCAAgC,iCAChC,gCAAgC,kCAChC,gCAAgC,+BAChC,6BAA6B,4CAC7B,6BAA6B,uCAC7B,+BAA+B,0DAC/B,+BAA+B,sDAC/B,+BAA+B,6DAC/B,+BAA+B,yDAC/B,+BAA+B,uDAC/B,+BAA+B,mCAC/B,iCAAiC,4BACjC,+BAA+B,wCAC/B,iCAAiC,6BACjC,+BAA+B,sDAC/B,iCAAiC,sCACjC,iCAAiC,sCACjC,iCAAiC,qCACjC,iCAAiC,2DACjC,iCAAiC,yDACjC,+BAA+B,8EAC/B,+BAA+B,4EAC/B,6BAA6B,iCAC7B,6BAA6B,yBAC7B,6BAA6B,mBAC7B,+BAA+B,+BAC/B,+BAA+B,4BAC/B,+BAA+B,0CAC/B,+BAA+B,uBAC/B,+BAA+B,+BAC/B,6BAA6B,mCAC7B,+BAA+B,4BAC/B,+BAA+B,mCAC/B,+BAA+B,qCAC/B,+BAA+B,iDAC/B,iCAAiC,8BACjC,mCAAmC,iCACnC,iCAAiC,+BACjC,mCAAmC,kCACnC,iCAAiC,iDACjC,iCAAiC,gCACjC,mCAAmC,mCACnC,mCAAmC,6CACnC,mCAAmC,8CACnC,mCAAmC,oCACnC,mCAAmC,sCACnC,mCAAmC,2EACnC,mCAAmC,iEACnC,iCAAiC,0CACjC,+BAA+B,kCAC/B,+BAA+B,sCAC/B,+BAA+B,mCAC/B,+BAA+B,6CAC/B,+BAA+B,qCAC/B,+BAA+B,wCAC/B,+BAA+B,wCAC/B,+BAA+B,wCAC/B,+BAA+B,mDAC/B,+BAA+B,gEAC/B,+BAA+B,mCAC/B,+BAA+B,iCAC/B,+BAA+B,oCAC/B,+BAA+B,qCAC/B,+BAA+B,sCAC/B,+BAA+B,6CAC/B,gCAAgC,wBAChC,gCAAgC,sBAChC,gCAAgC,2BAChC,gCAAgC,8BAChC,gCAAgC,wBAChC,gCAAgC,wBAChC,gCAAgC,6BAChC,gCAAgC,wCAChC,gCAAgC,uBAChC,gCAAgC,kCAChC,gCAAgC,gDAChC,gCAAgC,uBAChC,gCAAgC,+BAChC,gCAAgC,2BAChC,gCAAgC,2BAChC,8BAA8B,6CAC9B,gCAAgC,8CAChC,8BAA8B,yCAC9B,8BAA8B,6BAC9B,8BAA8B,mCAC9B,gCAAgC,mBAChC,gCAAgC,kBAChC,gCAAgC,2BAChC,gCAAgC,oCAChC,gCAAgC,kBAChC,gCAAgC,qCAChC,gCAAgC,sCAChC,gCAAgC,sBAChC,gCAAgC,wCAChC,gCAAgC,yBAChC,kCAAkC,uDAClC,kCAAkC,qDAClC,gCAAgC,wCAChC,gCAAgC,uBAChC,gCAAgC,uBAChC,gCAAgC,0CAChC,gCAAgC,6BAChC,gCAAgC,yCAChC,8BAA8B,uDAC9B,8BAA8B,uDAC9B,8BAA8B,sDAC9B,8BAA8B,qDAC9B,8BAA8B,qDAC9B,8BAA8B,oDAC9B,8BAA8B,uEAC9B,8BAA8B,uEAC9B,8BAA8B,sEAC9B,8BAA8B,0CAC9B,8BAA8B,yCAC9B,8BAA8B,sDAC9B,yBAAyB,6CACzB,yBAAyB,+DACzB,2BAA2B,8DAC3B,2BAA2B,+DAC3B,2BAA2B,+DAC3B,yBAAyB,+CACzB,2BAA2B,0DAC3B,2BAA2B,yDAC3B,2BAA2B,gDAC3B,2BAA2B,sEAC3B,6BAA6B,4DAC7B,6BAA6B,6DAC7B,6BAA6B,4DAC7B,6BAA6B,6DAC7B,2BAA2B,uCAC3B,6BAA6B,gDAC7B,2BAA2B,oDAC3B,6BAA6B,0CAC7B,6BAA6B,2CAC7B,6BAA6B,0CAC7B,6BAA6B,2CAC7B,2BAA2B,wCAC3B,2BAA2B,uCAC3B,2BAA2B,8BAC3B,2BAA2B,6CAC3B,2BAA2B,oDAC3B,2BAA2B,6CAC3B,2BAA2B,2BAC3B,2BAA2B,4CAC3B,2BAA2B,4CAC3B,2BAA2B,2CAC3B,2BAA2B,wBAC3B,2BAA2B,yCAC3B,2BAA2B,yCAC3B,2BAA2B,wCAC3B,yBAAyB,0CACzB,yBAAyB,qCACzB,2BAA2B,mCAC3B,2BAA2B,oDAC3B,2BAA2B,oDAC3B,2BAA2B,mDAC3B,2BAA2B,oCAC3B,2BAA2B,qDAC3B,2BAA2B,qDAC3B,2BAA2B,oDAC3B,2BAA2B,iCAC3B,2BAA2B,kDAC3B,2BAA2B,kDAC3B,2BAA2B,iDAC3B,sBAAsB,qBACtB,sBAAsB,yCACtB,sBAAsB,iCACtB,yBAAyB,kBACzB,yBAAyB,mBACzB,yBAAyB,oBACzB,yBAAyB,6BACzB,yBAAyB,uBACzB,yBAAyB,kBACzB,yBAAyB,eACzB,yBAAyB,kCACzB,yBAAyB,0BACzB,0BAA0B,4BAC1B,0BAA0B,2BAC1B,0BAA0B,gBAC1B,0BAA0B,YAC1B,0BAA0B,gBAC1B,0BAA0B,oBAC1B,0BAA0B,sBAC1B,0BAA0B,yBAC1B,0BAA0B,8BAC1B,0BAA0B,8BAC1B,0BAA0B,sBAC1B,0BAA0B,0CAC1B,0BAA0B,oCAC1B,0BAA0B,iBAC1B,0BAA0B,mBAC1B,0BAA0B,0BAC1B,0BAA0B,uBAC1B,0BAA0B,0BAC1B,0BAA0B,iCAC1B,0BAA0B,yBAC1B,0BAA0B,+BAC1B,0BAA0B,6BAC1B,yBAAyB,yBACzB,yBAAyB,mBACzB,yBAAyB,kCACzB,yBAAyB,cACzB,yBAAyB,iBACzB,yBAAyB,yBACzB,yBAAyB,qBACzB,yBAAyB,0BACzB,uBAAuB,8B,UChVVC,G,2MAhCbC,KAAO,WACL,EAAKpF,MAAM9G,W,EAGbmM,OAAS,WACPC,OAAOC,OACP,EAAKH,Q,wEAIL,OACE,6BACE,kBAACvL,EAAA,EAAD,CACIC,MAAM,EACNZ,QAAS6K,KAAKqB,KACdI,kBAAgB,sBAEhB,kBAACzL,EAAA,EAAD,CAAaoG,GAAG,sBAAsB,wBACtC,kBAAClG,EAAA,EAAD,KACE,kBAACwL,GAAA,EAAD,CAAgBpM,QAAQ,cAAc4B,MAAO8I,KAAK/D,MAAM0F,SAAUhM,MAAM,eAE1E,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKsB,QAAtB,iB,GAxBSX,iB,qCC+DViB,G,2MAvDXC,WAAa,WACT,EAAK5F,MAAM6F,cAAc,e,EAG7BC,cAAgB,WACZ,EAAK9F,MAAM6F,cAAc,kB,EAG7BE,KAAO,WACH,EAAK/F,MAAM6F,cAAc,S,EAG7BG,MAAQ,WACJ,EAAKhG,MAAM6F,cAAc,U,EAG7BI,UAAY,WACR,EAAKjG,MAAM6F,cAAc,c,EAG7BK,UAAY,WACR,EAAKlG,MAAM6F,cAAc,c,wEAIzB,IAAIE,EAAO,KAUX,OAJIA,EALChC,KAAK/D,MAAMmG,OAKL,kBAACC,GAAA,EAAD,CAAY1L,QAASqJ,KAAKiC,OACrB,kBAAC,KAAD,CAAMlF,KAAMuF,KAAUC,KAAM,SAAU5M,MAnC5C,aA8BC,kBAAC0M,GAAA,EAAD,CAAY1L,QAASqJ,KAAKgC,MACrB,kBAAC,KAAD,CAAMjF,KAAMyF,KAASD,KAAM,SAAU5M,MA/B3C,aAuCN,yBAAKD,MAAO,CAAE0K,MAAM,IAAKqC,OAAO,WAC5B,kBAACJ,GAAA,EAAD,CAAY1L,QAASqJ,KAAK6B,YACtB,kBAAC,KAAD,CAAM9E,KAAM2F,KAAiBH,KAAM,SAAU5M,MAzC/C,aA2CF,kBAAC0M,GAAA,EAAD,CAAY1L,QAASqJ,KAAK+B,eACtB,kBAAC,KAAD,CAAMhF,KAAM4F,KAAiBJ,KAAM,SAAU5M,MA5C/C,aA8CDqM,EACD,kBAACK,GAAA,EAAD,CAAY1L,QAASqJ,KAAKkC,WACtB,kBAAC,KAAD,CAAMnF,KAAM6F,KAAaL,KAAM,SAAU5M,MAhD3C,aAkDF,kBAAC0M,GAAA,EAAD,CAAY1L,QAASqJ,KAAKmC,WACtB,kBAAC,KAAD,CAAMpF,KAAM8F,KAAgBN,KAAM,SAAU5M,MAnD9C,kB,GAEOgL,iBCbnBmC,GAAK,IAAIjM,IAAM,SAErBiM,GAAGlN,QAAQ,GAAGkB,OAAO,CACjBiM,YAAa,+BAGjBD,GAAG/M,OAEY+M,UCmCTE,GAAgBC,kBAAQ,sBAsC9BC,YAA0BC,YAAcA,GACxCD,YAA0BE,gBAAkBA,GAC5CC,YAAoCF,YAAcA,GAClDG,YAAmCH,YAAcA,GACjDI,YAAoCJ,YAAcA,GAElDI,YAAoCzE,YAAcA,EAClDoE,YAA0BM,OAASA,KACnCN,U,IAMMO,G,YACF,WAAYxH,GAAQ,IAAD,8BACjB,4CAAMA,KAsBRC,MAAQ,CACNwH,mBAAmB,EACnB/B,SAAU,KACVgC,mBAAmB,EACnBC,iBAAkB,KAClBC,aAAa,EACbC,MAAO,EACP1B,QAAQ,EACR2B,SAAU,MA/BO,EAmEnBC,UAAY,SAACxG,GACX,IAAMyG,EAAYzG,EAAE0G,OACpB,EAAKhH,SAAS,CAAEyE,SAAUsC,EAAUE,mBArEnB,EAwEnBC,eAAiB,SAAC5L,GAChB,EAAK0E,SAAS,CAAEwG,mBAAmB,IAAQ,WACzCP,UAAmBkB,iBAAiB,+BAAgC,EAAKL,WACzE,EAAKM,eAAUjN,EAAWmB,OA3EX,EA+EnB+L,eAAiB,WACf,EAAKrH,SAAS,CAAEwG,mBAAmB,EAAO/B,SAAU,QAhFnC,EAmFnB6C,gBAAkB,SAACC,GACjB,EAAKhJ,aAAaxD,KAAKwM,IApFN,EAuFnBC,iBAAmB,WACjB,EAAKjJ,aAAakJ,OAAO,EAAG,EAAKlJ,aAAamJ,SAxF7B,EA2FnBC,kBAAoB,SAACpH,GAEnB,EAAKhC,aAAakJ,OAAOlH,EAAO,IA7Ff,EAgGnBqH,kBAAoB,WAClB,IAAM5N,EAAQ,EAAKD,MAAME,KAAKC,OAAO,aACrC,OAAOF,EAAQ,KAAOiK,GAAKjK,GAAS,KAlGnB,EAqGnB6N,YAAc,WACZ,IAAM7N,EAAQ,EAAKD,MAAME,KAAKC,OAAO,aACrC,OAAOF,EAAQ,KAAOiK,GAAKjK,GAAS,KAvGnB,EA0GnB8N,kBAAoB,WAElB,OADc,EAAK/N,MAAME,KAAKC,OAAO,cA3GpB,EA+GnB6N,uBAAyB,WACvB,IAAM/N,EAAQ,EAAKD,MAAME,KAAK+N,OAAO,aACrC,QAAc7N,IAAVH,EACJ,OAAOA,GAAmB,IAAVA,EAAc,cAAgB,cAlH7B,EAqHnBiO,uBAAyB,WACvB,IAAMjO,EAAQ,EAAKD,MAAME,KAAK+N,OAAO,aACrC,QAAc7N,IAAVH,EACJ,OAAOA,GAAmB,IAAVA,EAAc,WAAa,aAxH1B,EA2HnBkO,cAAgB,SAAC5H,GAEf,EAAKvB,MAAMoJ,iBA7HM,EAiInBC,gBAAkB,SAAC9H,GAKjB,IRMqB+H,EQNfxB,EAAWZ,eAAwB3F,EAAE/H,QA0F3C,GAtFuB,YAAnB,EAAKwG,MAAMuJ,KAYe,WAAnB,EAAKvJ,MAAMuJ,MACpBnN,SAASoN,eAAT,oBACe,EAAKxJ,MAAMwB,QACxBiI,YAAc,EAAKC,sBAAL,eRZRtO,KADWkO,EQawC,EAAKK,URXzD,GAEAL,EAAIM,OAAO,GAAGC,cAAgBP,EAAI7I,MAAM,IQS/B,UAAiE,EAAKqJ,cAEtF1N,SAASoN,eAAT,qBACgB,EAAKxJ,MAAMwB,QACzBiI,YAFF,UAEmB3B,EAASiC,cAAcC,KAAK9G,EAF/C,YAEoD4E,EAASiC,cAAcC,KAAKC,GAEhF7N,SAASoN,eAAT,uBACkB,EAAKxJ,MAAMwB,QAC3BiI,YAFF,iBAE0BS,KAAKC,MAAMrC,EAASsC,IAAIC,aAFlD,YAEkEH,KAAKC,MAAMrC,EAASsC,IAAIE,eAE1FlO,SAASoN,eAAT,wBACmB,EAAKxJ,MAAMwB,QAC5BiI,YAFF,gBAEyBS,KAAKC,MAAgC,IAA1BrC,EAASyC,MAAMC,QAAQ,IAF3D,KAIApO,SAASoN,eAAT,sBACiB,EAAKxJ,MAAMwB,QAC1BiI,YAFF,GAGArN,SAASoN,eAAT,yBACoB,EAAKxJ,MAAMwB,QAC7BiI,YAFF,GAGArN,SAASoN,eAAT,uBACkB,EAAKxJ,MAAMwB,QAC3BiI,YAFF,GAGArN,SAASoN,eAAT,wBACmB,EAAKxJ,MAAMwB,QAC5BiI,YAFF,GAIsB,aAAlB,EAAKE,UACPvN,SAASoN,eAAT,sBACiB,EAAKxJ,MAAMwB,QAC1BiI,YAFF,IAGArN,SAASoN,eAAT,yBACoB,EAAKxJ,MAAMwB,QAC7BiI,YAFF,IAGArN,SAASoN,eAAT,uBACkB,EAAKxJ,MAAMwB,QAC3BiI,YAFF,IAGArN,SAASoN,eAAT,wBACmB,EAAKxJ,MAAMwB,QAC5BiI,YAFF,KAI2B,UAAlB,EAAKE,UACdvN,SAASoN,eAAT,sBACiB,EAAKxJ,MAAMwB,QAC1BiI,YAFF,IAGArN,SAASoN,eAAT,yBACoB,EAAKxJ,MAAMwB,QAC7BiI,YAFF,IAGArN,SAASoN,eAAT,uBACkB,EAAKxJ,MAAMwB,QAC3BiI,YAFF,IAGArN,SAASoN,eAAT,wBACmB,EAAKxJ,MAAMwB,QAC5BiI,YAFF,KAI2B,YAAlB,EAAKE,WACdvN,SAASoN,eAAT,sBACiB,EAAKxJ,MAAMwB,QAC1BiI,YAFF,IAGArN,SAASoN,eAAT,yBACoB,EAAKxJ,MAAMwB,QAC7BiI,YAFF,IAGArN,SAASoN,eAAT,uBACkB,EAAKxJ,MAAMwB,QAC3BiI,YAFF,IAGArN,SAASoN,eAAT,wBACmB,EAAKxJ,MAAMwB,QAC5BiI,YAFF,MAMA,EAAKgB,SAAW,EAAKxK,MAAMyH,mBAAqB,EAAKgD,eAAiB,IACxEtO,SAASoN,eAAT,qBACgB,EAAKxJ,MAAMwB,QACzBiI,YAFF,UAEmB,EAAKxJ,MAAM4H,MAF9B,cAEyC,EAAK6C,gBAC1C,EAAKzK,MAAMkG,QAAQ,CACrB,IAAI0B,EAAQ,EAAK5H,MAAM4H,QAAU,EAAK6C,eAAiB,EAAI,EAAKzK,MAAM4H,MAAM,EAC5E,EAAK5G,SAAS,CAAC4G,MAAOA,MAtOT,EA2OnB8C,sBAAwB,SAACpJ,KA3ON,EAgPnBqJ,mBAAqB,SAACrJ,GAEpB,GAAwB,UAApB,EAAKvB,MAAMZ,KAAf,CACA,IAAMoJ,EAAU,CACdpJ,KAAM,EAAKY,MAAMZ,KACjByL,KAAM,GACN3P,KAAMqG,EAAE0G,OAAO6C,iBAEjB,EAAKvC,gBAAgBC,GACrB,EAAKxI,MAAM+K,sBAAsB,EAAKvL,gBAzPrB,EA4PnBwL,uBAAyB,SAACzJ,GAExB,IAAMiH,EAAU,CACdpJ,KAAM,EAAKY,MAAMZ,KACjByL,KAAM,GACN3P,KAAMqG,EAAE0G,OAAO6C,iBAEO,gBAApB,EAAK9K,MAAMZ,KACb6L,YAAW,WACT,EAAK1C,gBAAgBC,GACrB,EAAKxI,MAAM+K,sBAAsB,EAAKvL,gBACrC,MAEH,EAAK+I,gBAAgBC,GACrB,EAAKxI,MAAM+K,sBAAsB,EAAKvL,gBA1QvB,EA8QnB0L,sBAAwB,WACtB,EAAKjK,SAAS,CAAC0G,iBAAkB,QA/QhB,EAkRnBwD,iBAAmB,WACjB,EAAKlK,SAAS,CAAC2G,aAAa,KAnRX,EAoTnBwD,sBAAwB,SAAC5J,GAIvB,IAAM1G,EAAuB,OAAf,EAAKA,MAAiB,EAAKkF,MAAMlF,MAAQ,EAAKA,MAItDE,EAAQF,EAAM0G,GAAOxG,MACrBqQ,EAAUvQ,EAAM0G,GAAO6J,QAC7B,EAAKlO,SAAWrC,EAAM0G,GAAO7D,KAE7B,IAAM2N,EAAU,EAAKC,WACrBD,EAAQlD,iBAAiB,sBAAuB,EAAKoD,YACrDF,EAAQlD,iBAAiB,2BAA4B,EAAKiB,iBAC1DiC,EAAQlD,iBAAiB,mCAAoC,EAAKwC,oBAClEU,EAAQlD,iBAAiB,sCAAuC,EAAKuC,uBACrEW,EAAQlD,iBAAiB,uCAAwC,EAAK4C,wBACtE9D,UAAmBoE,GAEnB,EAAKtQ,MAAQA,EAEb,EAAKyP,SAAU,EAEf,EAAKX,aAAe9O,EAAME,KAAKC,OAAO,aACtC,EAAKsQ,eAAiB,EAAK1C,oBAE3B,IAAI2C,EAAQ,CAAEC,oBAAqB,EAAGC,SAAU,IAEhD,GADA,EAAKlB,eAAiB1P,EAAME,KAAK2Q,UAAU,aACvC,EAAKnB,eAAiB,EAAG,CAE3B,IADA,IAAIkB,EAAW,GACPhL,EAAE,EAAGA,EAAI,EAAK8J,iBAAkB9J,EACtCgL,EAAS5P,KAAKqP,EAAU,UAAUzK,GAEpC8K,EAAME,SAAWA,EAGnB1E,gBAAyBoE,EAAStQ,GAElC,EAAK8Q,mBAEL,EAAKC,aAED,EAAKrB,eAAiB,IACxBzD,wBAAsCqE,EAAS,CAAC,QAAS,aACzDrE,gBAA8BqE,EAAS,QAASI,GAChD,EAAKzK,SAAS,CAAC4G,MAAO,KAIxBhB,GAAGC,YAAYpD,MAAM,kBAAkBsI,OAAO,EAAKP,gBAAgBQ,MAAK,SAAAzD,GAEtE,EAAKD,gBAAgBC,GACrBvB,gBAA8BqE,EAAS9C,EAAQpJ,KAAMoJ,EAAQtN,MAC7D,EAAKgR,QAAQ1D,EAAQpJ,MACrB8H,eAAwBoE,GACxBrE,kBAAgCuB,EAAQpJ,SACvC+M,MAAK,WACiB,WAAnB,EAAKnM,MAAMuJ,MACb,EAAKvJ,MAAM+K,sBAAsB,EAAKvL,cACtC,EAAKQ,MAAMoM,aAAa,CAACpR,MAAO,EAAKA,MAAOsQ,QAAS,EAAKC,WAAYd,QAAS,EAAKA,UACpF,EAAKzK,MAAMqM,eAAe,CAAC7K,MAAO,EAAKxB,MAAMwB,MAAOvG,OAAO,SAjX9C,EAyXnBqR,oBAAsB,SAACC,GAGrB,IAAMjB,EAAU,EAAKC,WACrBD,EAAQlD,iBAAiB,sBAAuB,EAAKoD,YACrDF,EAAQlD,iBAAiB,2BAA4B,EAAKiB,iBAC1DiC,EAAQlD,iBAAiB,mCAAoC,EAAKwC,oBAClEU,EAAQlD,iBAAiB,sCAAuC,EAAKuC,uBACrEW,EAAQlD,iBAAiB,uCAAwC,EAAK4C,wBACtE9D,UAAmBoE,GAEnB,IAAMD,EAAUjE,eAAuCoF,UAAUD,GAEjErF,aAAsBmE,GAASc,MAAK,SAAAnR,GAMlC,EAAKA,MAAQA,EAEb,EAAKyP,SAAU,EAEfvD,gBAAyBoE,EAAStQ,GAElC,EAAK+Q,aAGL,EAAK/L,MAAMqM,eAAe,CAAC7K,MAAO,EAAKxB,MAAMwB,MAAOvG,OAAO,OAO1D,SAACsG,GACFzE,QAAQC,IAAI,QAASwE,GACrB,EAAKN,SAAS,CAAC0G,iBAAkB,oCA9ZlB,EAkanB8E,0BAA4B,SAACC,EAASC,EAAMC,GAG1C,IAAMtB,EAAU,EAAKC,WACrBD,EAAQlD,iBAAiB,sBAAuB,EAAKoD,YACrDF,EAAQlD,iBAAiB,2BAA4B,EAAKiB,iBAC1DiC,EAAQlD,iBAAiB,mCAAoC,EAAKwC,oBAClEU,EAAQlD,iBAAiB,sCAAuC,EAAKuC,uBACrEW,EAAQlD,iBAAiB,uCAAwC,EAAK4C,wBACtE9D,UAAmBoE,GAEnB,IAAIuB,EAAY,CACdF,KAAMA,EACND,QAASA,EACTE,UAAWA,EACX5R,MAAO,EAAK8R,aAGRzB,EAAUjE,eAAuC2F,UAAUF,GAEjE3F,aAAsBmE,GAASc,MAAK,SAAAnR,GAGlC,EAAKA,MAAQA,EAEb,EAAKyP,SAAU,EAEfvD,gBAAyBoE,EAAStQ,GAIlC,EAAKgF,MAAMqM,eAAe,CAAC7K,MAAO,EAAKxB,MAAMwB,MAAOvG,OAAO,OAE1D,SAACsG,GACFzE,QAAQC,IAAI,QAASwE,GACrB,EAAKN,SAAS,CAAC0G,iBAAkB,oCArclB,EAycnBU,UAAY,SAAC2E,GAAgD,IAArCzQ,EAAoC,4DAAhCnB,EAAWyB,EAAqB,4DAAdzB,EAK5C,QAAkBA,IAAd4R,QAAmC5R,IAARmB,QAAgCnB,IAAXyB,EAApD,MAEezB,IAAXyB,EACF,EAAKA,OAASA,OACSzB,IAAd4R,EACT,EAAKA,UAAYA,EAEjB,EAAKC,SAAW1Q,EAGlB,IAAM+O,EAAU,EAAKC,WAErBD,EAAQlD,iBAAiB,sBAAuB,EAAKoD,YACrDF,EAAQlD,iBAAiB,2BAA4B,EAAKiB,iBAC1DiC,EAAQlD,iBAAiB,mCAAoC,EAAKwC,oBAClEU,EAAQlD,iBAAiB,sCAAuC,EAAKuC,uBACrEW,EAAQlD,iBAAiB,uCAAwC,EAAK4C,wBAEtE,IAAIK,OAAUjQ,EAEd8L,UAAmBoE,GAEnB,IAAIhF,EAAO,OAEOlL,IAAd4R,GAA2B1Q,EAAWC,GAExC2K,aAAsB3K,GAAK4P,MAAK,SAAAnR,GAG9B,EAAKsN,iBAEL,EAAKtN,MAAQA,EAEb,EAAKyP,SAAU,EAEfvD,gBAAyBoE,EAAStQ,GAElC,EAAK+Q,aAEL,EAAK/L,MAAMoM,aAAa,CAACpR,MAAO,EAAKA,MAAOsQ,QAAS,EAAKC,WAAYd,QAAS,EAAKA,UACpF,EAAKzK,MAAMkN,aAAY,MAEtB,SAAC3L,GACFzE,QAAQC,IAAI,QAASwE,GACrB,EAAKN,SAAS,CAAC0G,iBAAkB,iDAGXvM,IAAd4R,GAA2BvQ,EAAYuQ,SAA2B5R,IAAXyB,GAAwBD,EAAcC,IAErGwO,OADajQ,IAAXyB,EACQuK,eAAuC+F,UAAUtQ,EAAO3B,MAExDkM,eAAuCgG,IAAIJ,GAEvD9F,aAAsBmE,GAASc,MAAK,SAAAnR,GAClC8B,QAAQC,IAAI,gCAAiC/B,GAE7C,EAAKA,MAAQA,EACb,EAAKyP,SAAU,EACf,EAAKX,aAAe,GAEpB5C,gBAAyBoE,EAAStQ,GAElC,EAAK+Q,aAEL,EAAK/L,MAAMoM,aAAa,CAACpR,MAAO,EAAKA,MAAOsQ,QAAS,EAAKC,WAAYd,QAAS,EAAKA,UAEpF,EAAKzK,MAAMqM,eAAe,CAAC7K,MAAO,EAAKxB,MAAMwB,MAAOvG,OAAO,OAE1D,SAACsG,GACFzE,QAAQC,IAAI,QAASwE,GACrB,EAAKN,SAAS,CAAC0G,iBAAkB,mDAKpBvM,IAAXyB,GACFwO,EAAU/D,WAAmC+F,YAAYF,UAAUtQ,EAAO3B,MAC1E,EAAKiC,SAAWN,EAAOc,KACvB2I,EAAOzJ,EAAOyJ,WACSlL,IAAd4R,GACT3B,EAAU/D,WAAmC+F,YAAYD,IAAIJ,GAC7D,EAAK7P,SAAW6P,EAAUrP,KAC1B2I,EAAO0G,EAAU1G,MAEjB+E,EAAU,WAAW9O,EAKvB2K,qBAA8BmE,GAASc,MAAK,SAAAnR,GAM1C,EAAKsN,iBAEL,EAAKtN,MAAQA,EAEb,EAAKyP,SAAU,EAEf,EAAKX,aAAe9O,EAAME,KAAKC,OAAO,aACtC,EAAKsQ,eAAiB,EAAK1C,oBAE3B,IAAI2C,EAAQ,CAAEC,oBAAqB,EAAGC,SAAU,IAEhD,GADA,EAAKlB,eAAiB1P,EAAME,KAAK2Q,UAAU,aACvC,EAAKnB,eAAiB,EAAG,CAE3B,IADA,IAAIkB,EAAW,GACPhL,EAAE,EAAGA,EAAI,EAAK8J,iBAAkB9J,EACtCgL,EAAS5P,KAAKqP,EAAU,UAAUzK,GAEpC8K,EAAME,SAAWA,EAGnB1E,gBAAyBoE,EAAStQ,GAIlC,EAAK+Q,aAED,EAAKrB,eAAiB,IACxBzD,wBAAsCqE,EAAS,CAAC,QAAS,aACzDrE,gBAA8BqE,EAAS,QAASI,GAEhD,EAAKzK,SAAS,CAAC4G,MAAO,KAIxBhB,GAAGC,YAAYpD,MAAM,kBAAkBsI,OAAO,EAAKP,gBAAgBQ,MAAK,SAAAzD,GAGtE,EAAKD,gBAAgBC,GACrBvB,gBAA8BqE,EAAS9C,EAAQpJ,KAAMoJ,EAAQtN,MAC7D,EAAKgR,QAAQ1D,EAAQpJ,MACrB8H,eAAwBoE,GACxBrE,kBAAgCuB,EAAQpJ,SACvC+M,MAAK,WAEN,EAAKnM,MAAM+K,sBAAsB,EAAKvL,cACtC,EAAKQ,MAAMoM,aAAa,CAACzO,KAAM,EAAKR,SAAUmJ,KAAMA,EAAMtL,MAAO,EAAKA,MAAOsQ,QAAS,EAAKC,WAAYd,QAAS,EAAKA,UACrH,EAAKzK,MAAMqM,eAAe,CAAC7K,MAAO,EAAKxB,MAAMwB,MAAOvG,OAAO,UAG5D,SAACsG,GACFzE,QAAQC,IAAI,QAASwE,GACrB,EAAK+G,iBAEL,IAAMgF,EAAQ/L,EAAE+L,MAAM3L,WACtB,GAAc,4BAAV2L,EACF,EAAKrM,SAAS,CAAC2G,aAAa,QACvB,CACL,IAAM2F,EAAMD,EAAME,QAAQ,KAC1B,EAAKvM,SAAS,CAAC0G,iBAAkB4F,EAAM,EAAIhM,EAAE+L,MAAQA,EAAMxL,UAAUyL,EAAI,YAtmB9D,EA4mBnBxB,WAAa,SAAC0B,EAAUC,GAEtB,IAAMC,EAAW1G,YACX2G,EAAa3G,cACb4G,EAAU5G,WACV6G,EAAqB7G,sBACrB8G,EAAW9G,YACX+G,EAAY/G,aACZgH,EAAoBhH,qBACpBiH,EAAmBjH,oBACnBkH,EAAkBlH,mBAClBmH,EAAYnH,aACZoH,EAAcpH,eACdqH,EAA4BrH,6BAElCA,WAAyBoH,GACzBpH,WAAyBmH,GACzBnH,WAAyB0G,GACzB1G,WAAyB2G,GACzB3G,WAAyB4G,GACzB5G,WAAyB6G,GACzB7G,WAAyB8G,GACzB9G,WAAyB+G,GACzB/G,WAAyBgH,GACzBhH,WAAyBiH,GACzBjH,WAAyBkH,GACzBlH,WAAyBqH,IAtoBR,EA2oBnBC,gBAAkB,WAChBtH,kBAAgC,UAChCA,kBAAgC,OAChCA,kBAAgC,WAChCA,kBAAgC,SAChCA,kBAAgC,gBAChCA,kBAAgC,QAChCA,kBAAgC,kBAChCA,kBAAgC,SAChCA,kBAAgC,iBAChCA,kBAAgC,eAChCA,kBAAgC,0BAtpBf,EAypBnBiF,QAAU,SAACuB,EAAUe,GAMnB,OAHI,EAAKvO,MAAMkG,QACb,EAAKN,cAAc,SAEb4H,GACN,IAAK,WACH,EAAK3S,MAAQ0T,EACb,EAAKC,SAAW,EAAK3T,MAAM6N,OAC3B,MAEF,IAAK,YACHzB,WAAoB,EAAKqE,YACzB,EAAKH,sBAAsBoD,GAC3B,MAEF,IAAK,cACHtH,WAAoB,EAAKqE,YACzB,EAAKlD,UAAUmG,GACf,MAEF,IAAK,gBACHtH,WAAoB,EAAKqE,YAEzB,EAAKlD,eAAUjN,OAAWA,EAAWoT,GACrC,MAEF,IAAK,UACH,EAAKrG,eAAeqG,GACpB,MAEF,IAAK,QACH,EAAKvN,SAAS,CAAEyG,mBAAmB,IACnC,EAAKiC,SAAW,GAEhB,EAAK7O,MAAQ,KACb,EAAKkF,MAAMqM,eAAe,CAAC7K,MAAO,EAAKxB,MAAMwB,MAAOvG,OAAO,IAC3DiM,WAAoB,EAAKqE,YACzB,MAEF,IAAK,SACH,EAAKgD,kBAoEL,MAEF,IAAK,OACHtH,iBAA+B,OAAQ,CAAEyH,gBAAiB,IAC1D,MAEF,IAAK,MACHzH,iBAA+B,MAAO,CAAEyH,gBAAiB,IACzD,MAEF,IAAK,OACHzH,iBAA+B3I,WAAW,iBAAmB,OAAQ,CAAEoQ,gBAAiB,IACxF,MAEF,IAAK,SACHzH,iBAA+B,SAAU3I,WAAW,CAAEqQ,eAAe,GAAS,CAAED,gBAAiB,IACjG,MAEF,IAAK,QACDzH,iBAA+B,QAAS,CAAEyH,gBAAiB,IAC7D,MAEF,IAAK,gBACHzH,iBAA+B,gBAAiB,CAAEyH,gBAAiB,IACnE,MAEF,IAAK,eACHzH,iBAA+B,eAAgB,CAAEyH,gBAAiB,IAClE,MAEF,IAAK,QACHzH,iBAA+B,QAAS,CAAEyH,gBAAiB,IAC3D,MAEF,IAAK,UACHzH,iBAA+B,UAAW,CAAEyH,gBAAiB,IAC7D,MAEF,IAAK,cACHzH,iBAA+B,cAAe,CAAEyH,gBAAiB,IACjE,MAEF,IAAK,SACH,IAAMpD,EAAU,EAAKC,WACfzD,EAAWZ,eAAwBoE,GACzCxD,EAAS8G,QAAU9G,EAAS8G,OAC5B1H,eAAwBoE,EAASxD,GACjC,MAEF,IAAK,SACD,IAAI9K,EAAOe,aAAaC,QP15BL,UO25BnB,GAA8B,UAA1BH,IAAmC,CAErC,IAAMyN,EAAU,EAAKC,WACfzD,EAAWZ,eAAwBoE,GACnCiB,EAASnQ,SAASyS,uBAAuB,sBAAsB,EAAK7O,MAAM8O,gBAC1EC,EAAOjH,EAASyC,MAAMC,QAAQ,GAC9BwE,EAAO,EAAKhU,MAAM0R,QAAUqC,EAC5BpC,EAAO,EAAK3R,MAAM2R,KAAOoC,EAE3BE,EAAW7S,SAASC,cAAc,UACtC4S,EAAW,EAAKC,WAAW3C,EACzBrC,KAAKC,MAAMoC,EAAOpI,MAAQ,EAAI6K,EAAO,GACrC9E,KAAKC,MAAMoC,EAAO3M,OAAS,EAAI+M,EAAO,GACtCqC,EAAMrC,GAER,IAAIwC,EAAI/S,SAASC,cAAc,KAC/B8S,EAAE5V,KAAO0V,EAASG,UAAT,gBAA4BpS,IACrCmS,EAAEE,SAAF,UAAgB,EAAKlS,SAArB,YAAiCH,GACjCZ,SAASkT,KAAKC,YAAYJ,GAC1BA,EAAEK,YAEG,CACL,IAAMlE,EAAU,EAAKC,WACfzD,EAAWZ,eAAwBoE,GACnCiB,EAASnQ,SAASyS,uBAAuB,sBAAsB,EAAK7O,MAAM8O,gBAC1EC,EAAOjH,EAASyC,MAAMC,QAAQ,GAC9BwE,EAAO,EAAKhU,MAAM0R,QAAUqC,EAC5BpC,EAAO,EAAK3R,MAAM2R,KAAOoC,EAE3BE,EAAW7S,SAASC,cAAc,UACtC4S,EAAW,EAAKC,WAAW3C,EACzBrC,KAAKC,MAAMoC,EAAOpI,MAAQ,EAAI6K,EAAO,GACrC9E,KAAKC,MAAMoC,EAAO3M,OAAS,EAAI+M,EAAO,GACtCqC,EAAMrC,GAER8C,KAAsBR,EAAtB,gBAAyCjS,IAAQmP,MAAK,SAAAuD,GACpDD,KAA2BC,GAAMvD,MAAK,SAAA1J,GACpC,IAAM9E,EAAI,UAAMJ,EAAY,EAAKJ,UAAvB,gBAAwC,EAAKwM,UACnDgG,EAAUhS,EACViS,EAAU,EACVC,GAAO,EAJwC,aAM/C,IAAI1S,EAAQ,UAAMwS,EAAN,YAAiB3S,QAEX5B,IADA,EAAK4E,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAASR,MAE5DxC,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAMsS,IAAI,CACf5J,OAAQ,EAAKxD,MAAMuD,aACnB5F,KAAMR,EACNH,KAAMA,EACNsJ,KAAM7D,EAAYwN,WAClB/U,KAAMuH,KANiB,wCAQ5B0J,MAAK,WACN,EAAKnM,MAAMkQ,mBAEbL,GAAO,IAEPF,EAAO,UAAMhS,EAAN,cAAgBiS,GACvBA,MAlBR,GAAI,WAoBMC,SAIlB,MAEF,IAAK,OACH,EAAK5O,SAAS,CAAEyG,mBAAoB,EAAKzH,MAAMyH,oBAC/C,MAEF,IAAK,QACH,EAAKyI,QACL,MAEF,IAAK,aAEH,IAAM7E,EAAU,EAAKC,WACrBtE,mBAAiCqE,EAAS,EAAK9L,aAAagP,GAAKpP,KAAM,EAAKI,aAAagP,GAAKtT,MAC9FgM,eAAwBoE,GAExB,EAAK1C,kBAAkB4F,GACvB,EAAKxO,MAAM+K,sBAAsB,EAAKvL,cACtC,MAEF,IAAK,cACH,IAAM8L,EAAU,EAAKC,WAErB,EAAK/L,aAAa7D,SAAQ,SAAA6M,GACxBvB,kBAAgCqE,EAAS9C,EAAQpJ,SAEnD8H,eAAwBoE,GACxB,EAAK7C,mBAEL5B,GAAGC,YAAYpD,MAAM,kBAAkBsI,OAAO,EAAKP,gBAAgB2E,SACnE,EAAKpQ,MAAM+K,sBAAsB,EAAKvL,cACtC,MAEF,IAAK,YAEHqH,GAAGC,YAAYpD,MAAM,kBAAkBsI,OAAO,EAAKP,gBAAgB2E,SAEnE,EAAK5Q,aAAa7D,SAAQ,SAAA6M,GACxB,IACE3B,GAAGC,YAAYsG,IAAI,CACjBiD,eAAgB,EAAK5E,eACrBrM,KAAMoJ,EAAQpJ,KACdyL,KAAMrC,EAAQqC,KACd3P,KAAMsN,EAAQtN,OAEhB,MAAMoS,GACNxQ,QAAQwQ,MAAMA,SAz6BL,EAo7BnB4B,WAAa,SAAC3C,EAAQrJ,EAAG+G,EAAG9F,EAAOvE,GAMjC,IAAM0Q,EAAYlU,SAASC,cAAc,UAMzC,OAJAiU,EAAUnM,MAAQA,EAClBmM,EAAU1Q,OAASA,EAEnB0Q,EAAUC,WAAW,MAAMC,UAAUjE,EAAQrJ,EAAG+G,EAAG9F,EAAOvE,EAAQ,EAAG,EAAGuE,EAAOvE,GACxE0Q,GAh8BU,EAm8BnBG,WAAa,SAAChD,EAAUxS,GAGtB,OAAQwS,GACN,IAAK,OACW,IAAVxS,EACFgM,iBAA+B,OAAQ,CAAEyH,gBAAiB,IACvC,IAAVzT,GACTgM,kBAAgC,QAElC,MACF,IAAK,MACW,IAAVhM,EACFgM,iBAA+B,MAAO,CAAEyH,gBAAiB,IACtC,IAAVzT,GACTgM,kBAAgC,OAElC,MACF,IAAK,OACW,IAAVhM,EACFgM,iBAA+B3I,WAAW,iBAAmB,OAAQ,CAAEoQ,gBAAiB,IACrE,IAAVzT,GACTgM,kBAAgC3I,WAAW,iBAAmB,QAEhE,MACF,IAAK,SACW,IAAVrD,EACFgM,iBAA+B,SAAU3I,WAAW,CAAEqQ,eAAe,GAAS,CAAED,gBAAiB,IAC9E,IAAVzT,GACTgM,kBAAgC,UAElC,MACF,IAAK,QACW,IAAVhM,EACFgM,iBAA+B,QAAS,CAAEyH,gBAAiB,IACxC,IAAVzT,GACTgM,kBAAgC,SAElC,MACF,IAAK,QACW,IAAVhM,EACFgM,iBAA+B,QAAS,CAAEyH,gBAAiB,IACxC,IAAVzT,GACTgM,kBAAgC,SAElC,MACF,IAAK,UACW,IAAVhM,EACFgM,iBAA+B,UAAW,CAAEyH,gBAAiB,IAC1C,IAAVzT,GACTgM,kBAAgC,WAElC,MACF,IAAK,gBACW,IAAVhM,EACFgM,iBAA+B,gBAAiB,CAAEyH,gBAAiB,IAChD,IAAVzT,GACTgM,kBAAgC,iBAElC,MACF,IAAK,eACW,IAAVhM,EACFgM,iBAA+B,eAAgB,CAAEyH,gBAAiB,IAC/C,IAAVzT,GACTgM,kBAAgC,gBAElC,MACF,IAAK,cACW,IAAVhM,EACFgM,iBAA+B,cAAe,CAAEyH,gBAAiB,IAC9C,IAAVzT,GACTgM,kBAAgC,iBA1gCrB,EAkhCnBpB,cAAgB,SAAC6K,GAEf,IAAMpF,EAAU,EAAKC,WACrB,OAAQmF,GACN,IAAK,aAEH,EAAKzP,SAAS,CAAC4G,MADH,IAEZd,GAAcuE,EAAS,GACvB,MAEF,IAAK,gBACH,GAAI,EAAKrL,MAAM4H,MAAQ,EAAG,CACxB,IAAIA,EAAQ,EAAK5H,MAAM4H,MAAM,EAC7B,EAAK5G,SAAS,CAAC4G,MAAOA,IACtBd,GAAcuE,EAASzD,EAAM,GAE/B,MAEF,IAAK,OACHZ,YAA0BqE,EAAS,IACnC,EAAKrK,SAAS,CAACkF,QAAQ,IACvB,MAEF,IAAK,QACDc,YAA0BqE,GAC1B,EAAKrK,SAAS,CAACkF,QAAQ,IACzB,MAEF,IAAK,YACH,GAAI,EAAKlG,MAAM4H,MAAQ,EAAK6C,eAAgB,CAC1C,IAAI7C,EAAQ,EAAK5H,MAAM4H,MAAM,EAC7B,EAAK5G,SAAS,CAAC4G,MAAOA,IACtBd,GAAcuE,EAASzD,EAAM,GAE/B,MAEF,IAAK,YACH,IAAIA,EAAQ,EAAK6C,eACjB,EAAKzJ,SAAS,CAAC4G,MAAOA,IACtBd,GAAcuE,EAASzD,EAAM,KAzjChB,EAikCnBsI,MAAQ,WACN,IAAM7E,EAAU,EAAKC,WACfoF,EAAkBzJ,8BAAuCoE,EAAS,EAAKtQ,OACzE8M,EAAWZ,eAAwBoE,GACvCxD,EAASsC,IAAIC,YAAcsG,EAAgBvG,IAAIC,YAC/CvC,EAASsC,IAAIE,aAAeqG,EAAgBvG,IAAIE,aAChDxC,EAAS8G,QAAS,EAClB1H,eAAwBoE,EAASxD,IAxkChB,EA6kCnBgE,iBAAmB,WACjB,IACE,IAAK,EAAKrB,QAAS,OAAO,EAAKd,SAG/B,IACMiH,EADQ,EAAK9V,MAAM,GAAGE,MACGE,KAAKC,OAAO,aAAagH,MAAM,MAC1D0O,EAAI,IAAIC,MAAM,GAAGC,KAAK,GAC1BF,EAAE,GAAKxV,WAAWuV,EAAiB,IACnCC,EAAE,GAAKxV,WAAWuV,EAAiB,IACnCC,EAAE,GAAKxV,WAAWuV,EAAiB,IACnCC,EAAE,GAAKxV,WAAWuV,EAAiB,IACnCC,EAAE,GAAKxV,WAAWuV,EAAiB,IACnCC,EAAE,GAAKxV,WAAWuV,EAAiB,IAEnC,IAAII,EAAI,EADRH,EAAIA,EAAEpV,KAAI,SAACyH,GAAD,OAAOgH,KAAKC,MAAMjH,OACjB,GAAG2N,EAAE,GAAKA,EAAE,GAAGA,EAAE,GAAIA,EAAE,GAAGA,EAAE,GAAKA,EAAE,GAAGA,EAAE,GAAIA,EAAE,GAAGA,EAAE,GAAKA,EAAE,GAAGA,EAAE,IAE7D,KADbG,EAAIA,EAAEvV,KAAI,SAACyH,GAAD,OAAOgH,KAAK+G,IAAI/N,OACpB,GACJ,EAAKyG,SAAW,WACE,IAATqH,EAAE,GACX,EAAKrH,SAAW,UACE,IAATqH,EAAE,KACX,EAAKrH,SAAW,SAElB,MAAM2D,GACN,EAAK3D,SAAW,GAGlB,OAAO,EAAKA,UAzmCK,EA4mCnBuH,UAAY,SAACC,GACX,OAAOC,OAAOC,KAAKF,EAAO,IAAI1V,KAAI,SAAA6V,GAAS,OAAIH,EAAO1V,KAAI,SAAA8V,GAAS,OAAIA,EAAUD,UA7mChE,EAgnCnBE,iBAAmB,SAACrU,EAAUiG,EAAQF,EAAGuO,GACvC,GAAoB,OAAhB,EAAKC,OAAT,CAEA,IAAM5W,EAAuB,OAAf,EAAKA,MAAiB,EAAKkF,MAAMlF,MAAQ,EAAKA,MAE5D,EAAK6W,WAAazO,EAElB,EAAK/F,SAAWA,EAChB+J,WAAoB,EAAKqE,YAKvB,EAAK5B,SADQ,aAAXvG,EACc,UAEA,WAIlB,EAAKwO,MAAQ9W,EAAM,GAAG4R,QACtB,EAAKmF,MAAQ/W,EAAM,GAAG6R,KACtB,EAAKmF,MAAQL,EAAQM,KAErB,IAAMnR,EAAIsJ,KAAKC,MAAMjH,EAAI,EAAK0O,MAAQ9W,EAAM6N,QAG5C,GAFA,EAAKmE,YAAchS,EAAM8F,GAAG5F,MAEb,aAAXoI,EAAuB,CAGzB,IAFA,IAAI4O,EAAU9H,KAAK+H,MAAM,EAAKL,MAAQ,GAAK1H,KAAK+H,MAAM,EAAKH,MAAQ,GAC/DI,EAAQ,IAAIC,WAAW,EAAKP,MAAQ,EAAKC,OACpC5H,EAAI,EAAGA,EAAI,EAAK4H,MAAO5H,IAC9B,IAAK,IAAImI,EAAI,EAAGA,EAAI,EAAKN,MAAOM,IAC9BF,EAAME,EAAI,EAAKP,MAAQ5H,EAAI+H,GAAW,EAAKN,OAAOU,GAAGlP,EAAI,EAAK2O,MAAQ5H,GAC1E,EAAKwC,0BAA0B,EAAKmF,MAAO,EAAKC,MAAOK,QAElD,GAAe,YAAX9O,EAAsB,CAG/B,IAFA,IAAI4O,EAAU9H,KAAK+H,MAAM,EAAKL,MAAQ,GAAK1H,KAAK+H,MAAM,EAAKH,MAAQ,GAC/DI,EAAQ,IAAIC,WAAW,EAAKP,MAAQ,EAAKC,OACpC5H,EAAI,EAAGA,EAAI,EAAK4H,MAAO5H,IAC9B,IAAK,IAAImI,EAAI,EAAGA,EAAI,EAAKN,MAAOM,IAC9BF,EAAME,EAAI,EAAKP,MAAQ5H,EAAI+H,GAAW,EAAKN,OAAOU,GAAGlP,EAAI,EAAK2O,MAAQ5H,GAC1E,EAAKwC,0BAA0B,EAAKmF,MAAO,EAAKC,MAAOK,OAElD,CACL,IAAMG,EAAU,EAAKC,gBAAgBpP,GACrC,EAAKuJ,0BAA0B,EAAKoF,MAAO,EAAKC,MAAOO,MA5pCxC,EAgqCnBC,gBAAkB,SAACpP,GAGjB,IADA,IAAIgP,EAAQ,IAAIC,WAAW,EAAKN,MAAQ,EAAKC,OACpC7H,EAAI,EAAGA,EAAI,EAAK4H,MAAO5H,IAC9B,IAAK,IAAImI,EAAI,EAAGA,EAAI,EAAKN,MAAOM,IAC9BF,EAAMjI,EAAI,EAAK4H,MAAQO,GAAK,EAAKV,OAAOU,GAAGlP,EAAI,EAAK2O,MAAQ5H,GAEhE,OAAOiI,GAvqCU,EA0qCnBK,iBAAmB,SAACpV,EAAUiG,EAAQ6G,EAAGwH,GACvC,GAAoB,OAAhB,EAAKC,OAAT,CAEA,IAAM5W,EAAuB,OAAf,EAAKA,MAAiB,EAAKkF,MAAMlF,MAAQ,EAAKA,MAE5D,EAAK6W,WAAa1H,EAElB,EAAK9M,SAAWA,EAChB+J,WAAoB,EAAKqE,YAKvB,EAAK5B,SADQ,aAAXvG,EACc,QACE,UAAXA,EACS,UAEA,QAElB,EAAKwO,MAAQ9W,EAAM,GAAG4R,QACtB,EAAKmF,MAAQ/W,EAAM,GAAG6R,KACtB,EAAKmF,MAAQL,EAAQM,KAErB,IAAMnR,EAAIsJ,KAAKsI,MAAMvI,EAAI,EAAK4H,MAAQ/W,EAAM6N,QAG5C,GAFA,EAAKmE,YAAchS,EAAM8F,GAAG5F,MAEb,aAAXoI,EAAuB,CAGzB,IAFA,IAAI4O,EAAU9H,KAAK+H,MAAM,EAAKL,MAAQ,GAAK1H,KAAK+H,MAAM,EAAKH,MAAQ,GAC/DI,EAAQ,IAAIC,WAAW,EAAKP,MAAQ,EAAKC,OACpC3O,EAAI,EAAGA,EAAI,EAAK0O,MAAO1O,IAC9B,IAAK,IAAIkP,EAAI,EAAGA,EAAI,EAAKN,MAAOM,IAC9BF,EAAME,EAAI,EAAKR,MAAQ1O,EAAI8O,GAAW,EAAKN,OAAOU,GAAGlP,EAAI,EAAK0O,MAAQ3H,GAC1E,EAAKwC,0BAA0B,EAAKmF,MAAO,EAAKC,MAAOK,OAElD,CACL,IAAMO,EAAU,EAAKC,gBAAgBzI,GACrC,EAAKwC,0BAA0B,EAAKmF,MAAO,EAAKE,MAAOW,MA9sCxC,EAktCnBC,gBAAkB,SAACzI,GAGjB,IADA,IAAIiI,EAAQ,IAAIC,WAAW,EAAKP,MAAQ,EAAKE,OACpC5O,EAAI,EAAGA,EAAI,EAAK0O,MAAO1O,IAC9B,IAAK,IAAIkP,EAAI,EAAGA,EAAI,EAAKN,MAAOM,IAC9BF,EAAMhP,EAAI,EAAK0O,MAAQQ,GAAK,EAAKV,OAAOU,GAAGlP,EAAI,EAAK0O,MAAQ3H,GAEhE,OAAOiI,GAztCU,EA4tCnBxI,oBAAsB,WAEpB,MAA0B,KAAlB,EAAKC,UAA4C,IAAzB,EAAK3J,MAAM2S,OAAO,IAAqC,IAAzB,EAAK3S,MAAM2S,OAAO,IA9tC/D,EAmuCnBC,cAAgB,SAAAC,GACd,EAAKtH,WAAasH,GApuCD,EAuuCnBC,aAAe,aAvuCI,EA2uCnBC,gBAAkB,WAChB,QAA0B3X,IAAtB,EAAK4E,MAAMM,QAA8C,OAAtB,EAAKN,MAAMM,QAAsC,YAAnB,EAAKN,MAAMuJ,IAChF,OAAO,EAAKvJ,MAAMM,OAAO0S,WAAWjX,IAAI,EAAKiE,MAAMM,OAAO2S,WAAW,EAAKjT,MAAMwB,QAAQmH,QA7uCvE,EAgvCnBuK,qBAAuB,WACrB,QAA0B9X,IAAtB,EAAK4E,MAAMM,QAA8C,OAAtB,EAAKN,MAAMM,QAAsC,YAAnB,EAAKN,MAAMuJ,UAC2BnO,IAAvG,EAAK4E,MAAMM,OAAO0S,WAAWjX,IAAI,EAAKiE,MAAMM,OAAO2S,WAAW,EAAKjT,MAAMwB,QAAQ,EAAKxB,MAAMwB,OAIhG,OAAO,EAAKxB,MAAMM,OAAO0S,WAAWjX,IAAI,EAAKiE,MAAMM,OAAO2S,WAAW,EAAKjT,MAAMwB,QAAQ,EAAKxB,MAAMwB,OAAOlB,OAAO6S,mBApvCjH,EAAKrY,MAAQ,KACb,EAAKqC,SAAW,GAChB,EAAK6P,UAAY,KACjB,EAAKC,SAAW,KAChB,EAAKpQ,OAAS,KACd,EAAK0O,WAAa,KAClB,EAAKF,QAAU,KACf,EAAKrQ,MAAQ,KACb,EAAKyP,SAAU,EACf,EAAKC,eAAiB,EACtB,EAAKlL,aAAe,GACpB,EAAKoS,MAAQ,EACb,EAAKC,MAAQ,EACb,EAAKC,MAAQ,EACb,EAAKJ,OAAS,KACd,EAAK5E,YAAc,KACnB,EAAKnD,SAAW,GAChB,EAAK8E,SAAW,EAChB,EAAKkD,WAAa,EApBD,E,iFAoCjB5N,KAAK/D,MAAMkM,QAAQnI,MACnBA,KAAK/D,MAAMyQ,WAAW1M,MACtBmD,UAAmBkB,iBAAiB,yBAA0BrE,KAAKoF,gBAEnEiK,EADmBrP,KAAK/D,MAAhBoT,QACDrP,Q,6CAKPA,KAAK/D,MAAMkM,aAAQ9Q,GACnB2I,KAAK/D,MAAMyQ,gBAAWrV,IAEtBgY,EADmBrP,KAAK/D,MAAhBoT,aACDhY,K,yCAGUiY,GAUjB,IAAMC,EAASvP,KAAK/D,MAAMsT,OAAOvP,KAAK/D,MAAMwB,OACxCuC,KAAK/D,MAAM2S,SAAWU,EAAcV,QAAUW,GAChDpM,UAAmBnD,KAAKwH,c,+BAgsC1B,IAAMgI,EAAUxP,KAAK/D,MAAMuT,QAAU,UAAY,SAC3CD,EAASvP,KAAK/D,MAAMsT,OAAOvP,KAAK/D,MAAMwB,OACtCiG,EAAoB1D,KAAK9D,MAAMwH,kBAC/BE,EAAmB5D,KAAK9D,MAAM0H,iBAC9BjC,EAAW3B,KAAK9D,MAAMyF,SAEtB8N,EAAiB,CACrBrP,MAAO,OACPvE,OAAQ,OACR6T,OAA4B,YAAnB1P,KAAK/D,MAAMuJ,KAAqBxF,KAAK/D,MAAM0T,4BAA8B3P,KAAK/D,MAAMwB,OAA8B,WAAnBuC,KAAK/D,MAAMuJ,KAAoBxF,KAAK/D,MAAM8O,iBAAmB/K,KAAK/D,MAAMwB,QAAUuC,KAAK/D,MAAM2S,OAAO,GAAK,GAAK5O,KAAK/D,MAAM2S,OAAO,GAAK,GAAM,oBAAsB,KACzQgB,SAAU,YASNxV,EAAUD,KAAwB6F,KAAK/D,MAAM7B,QAEnD,OACE,yBAAKsG,UAAU,YAAYhL,MAAO+Z,GAE/B/L,EAAoB,kBAAC,GAAD,CAAY/B,SAAUA,EAAUxM,QAAS6K,KAAKuE,iBAAqB,KAExF,kBAACzO,EAAA,EAAD,CACEC,KAA2B,OAArB6N,EACNzO,QAAS6K,KAAKmH,uBAEd,kBAACnR,EAAA,EAAD,CAAaoG,GAAG,sBAAsB,0BACtC,kBAAClG,EAAA,EAAD,KACE,kBAAC2Z,GAAA,EAAD,CAAmBzT,GAAG,4BACnB4D,KAAK9D,MAAM0H,mBAGhB,kBAACpN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKmH,sBAAuBzQ,WAAS,GAAtD,QAMJ,kBAACZ,EAAA,EAAD,CACEC,KAAMiK,KAAK9D,MAAM2H,YACjB1O,QAAS6K,KAAKoH,iBACd3F,kBAAgB,qBAChBqO,mBAAiB,4BAEjB,kBAAC9Z,EAAA,EAAD,CAAaoG,GAAG,sBAAsB,0BACtC,kBAAClG,EAAA,EAAD,KACE,kBAAC2Z,GAAA,EAAD,CAAmBzT,GAAG,4BACpB,kBAAC/G,EAAA,EAAD,CAAY0a,cAAY,GAAxB,6MAKA,kBAAC1a,EAAA,EAAD,CAAY0a,cAAY,GAAxB,eAEE,kBAACxa,EAAA,EAAD,CAAMC,KAAK,0BAA0BC,OAAO,SAASE,MAAM,eAA3D,oBAFF,sCASJ,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKoH,iBAAkB1Q,WAAS,GAAjD,QAMJ,yBACEhB,MAAO,CACL0K,MAAO,OACPvE,OAAQ,OACR+T,SAAU,WACVja,MAA2B,YAAnBqK,KAAK/D,MAAMuJ,IAAoB,UAAY,UACnDtE,SAA6B,YAAnBlB,KAAK/D,MAAMuJ,IAAoB,SAAW,SACpDwK,WAAY,kBACZC,WAAYT,GAEdU,cAAe,kBAAM,GACrBxP,UAAU,6BAEV,yBACEyP,IAAKnQ,KAAK6O,cAAenZ,MA1ET,CACtB0K,MAAO,OACPvE,OAAQ,OACR+T,SAAU,cA2EN,yBACExT,GAAE,oBAAe4D,KAAK/D,MAAMwB,OAC5B/H,MAAO,CAAEka,SAAU,WAAYQ,IAAK,EAAGC,KAAM,EAAGC,QAASf,GAAUnV,EAAU,GAAK,UAIpF,yBACEgC,GAAE,qBAAgB4D,KAAK/D,MAAMwB,OAC7B/H,MAAO,CAAEka,SAAU,WAAYQ,IAAK,EAAGG,MAAO,EAAGD,QAASf,GAAUnV,EAAU,GAAK,UAIrF,yBACEgC,GAAE,wBAAmB4D,KAAK/D,MAAMwB,OAChC/H,MAAO,CAAEka,SAAU,WAAYY,OAAQ,EAAGD,MAAO,EAAGD,QAASf,GAAUnV,EAAU,GAAK,SAErF4F,KAAKgP,mBAER,yBACE5S,GAAE,uBAAkB4D,KAAK/D,MAAMwB,OAC/B/H,MAAO,CAAEka,SAAU,WAAYY,OAAQ,EAAGH,KAAM,EAAGC,QAASf,GAAUnV,EAAU,GAAK,SAEnF4F,KAAKmP,wBAGT,yBACE/S,GAAE,sBAAiB4D,KAAK/D,MAAMwB,OAC9B/H,MAAO,CAAEka,SAAU,WAAYQ,IAAK,EAAGhQ,MAAO,OAAQiQ,KAAM,MAAOI,WAAY,MAAOH,QAASf,GAAUnV,EAAU,GAAK,UAK1H,yBACEgC,GAAE,uBAAkB4D,KAAK/D,MAAMwB,OAC/B/H,MAAO,CAAEka,SAAU,WAAYQ,IAAK,MAAOhQ,MAAO,OAAQiQ,KAAM,EAAGI,WAAY,MAAOH,QAASf,GAAUnV,EAAU,GAAK,UAK1H,yBACEgC,GAAE,wBAAmB4D,KAAK/D,MAAMwB,OAChC/H,MAAO,CAAEka,SAAU,WAAYQ,IAAK,MAAOhQ,MAAO,OAAQmQ,MAAO,EAAGG,YAAa,QAASJ,QAASf,GAAUnV,EAAU,GAAK,UAK9H,yBACEgC,GAAE,yBAAoB4D,KAAK/D,MAAMwB,OACjC/H,MAAO,CAAEka,SAAU,WAAYY,OAAQ,EAAGpQ,MAAO,OAAQiQ,KAAM,MAAOI,WAAY,MAAOH,QAASf,GAAUnV,EAAU,GAAK,UAK3H4F,KAAK9D,MAAMyH,mBAAqB3D,KAAK2G,eAAiB,EACtD,yBAAKjR,MAAO,CAACka,SAAS,WAAYxP,MAAM,OAAQoQ,OAAO,EAAGG,UAAU,WAClE,yBAAKjb,MAAO,CAAC+M,OAAO,SAAUrC,MAAM,QAASwQ,gBAAgB,6BAC3D,kBAAC,GAAD,CAAY9O,cAAe9B,KAAK8B,cAAeM,OAAQpC,KAAK9D,MAAMkG,SAClE,yBACEhG,GAAE,qBAAgB4D,KAAK/D,MAAMwB,OAC7B/H,MAAO,CAAE0K,MAAM,IAAKqC,OAAO,SAAUtC,WAAW,GAAIwQ,UAAU,WAE7D3Q,KAAK9D,MAAM4H,MAJd,MAIwB9D,KAAK2G,kBAI7B,W,GA55CQkK,IAAMC,WAq8CjBlQ,gBAhCS,SAAC1E,GACvB,MAAO,CACLnF,MAAOmF,EAAMnF,MACbwF,OAAQL,EAAMK,OACd/D,IAAK0D,EAAM1D,IACX+W,OAAQrT,EAAMqT,OACdlU,KAAMa,EAAMb,KACZ0P,eAAgB7O,EAAM6O,eACtBzP,UAAWY,EAAMZ,UACjBqU,0BAA2BzT,EAAMyT,0BACjClU,aAAcS,EAAMT,aACpBmT,OAAQ1S,EAAM0S,OACdpP,aAActD,EAAMsD,aACpBuM,cAAe7P,EAAM6P,cACrB4B,OAAQzR,EAAMyR,OACdoD,IAAK7U,EAAM6U,QAKY,SAAClQ,GAC1B,MAAO,CACLmQ,cAAe,kBAAMnQ,ENpgDd,CACH5H,KAzBmB,iBM6hDvBqP,eAAgB,SAACpR,GAAD,OAAW2J,EAAS1F,GAAUjE,KAC9C+Z,UAAW,SAAC5V,GAAD,OAAUwF,EAASzF,GAAQC,KACtCgN,aAAc,SAAC9M,GAAD,OAASsF,EAASvF,GAAUC,KAC1CyL,sBAAuB,SAACvL,GAAD,OAAkBoF,EAASrF,GAAmBC,KACrE0Q,cAAe,SAAC5Q,GAAD,OAASsF,EN93CjB,CACH5H,KAhJiB,kBMkhDV2H,CAA6C6C,I,mBC76C7CyN,GAzGK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,UAAWlR,EAAoB,EAApBA,QAAStK,EAAW,EAAXA,MAClCyb,EAAS,GACbA,EAAOnZ,KAAK,CAAC2B,KAAM,kBAAmB1C,MAAOia,EAAUrM,sBACvDsM,EAAOnZ,KAAK,CAAC2B,KAAM,YAAa1C,MAAOia,EAAUpM,gBACjDqM,EAAOnZ,KAAK,CAAC2B,KAAM,mBAAoB1C,MAAOia,EAAUnM,sBACxDoM,EAAOnZ,KAAK,CAAC2B,KAAM,WAAY1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAClEga,EAAOnZ,KAAK,CAAC2B,KAAM,eAAgB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACtEga,EAAOnZ,KAAK,CAAC2B,KAAM,oBAAqB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC3Ega,EAAOnZ,KAAK,CAAC2B,KAAM,qBAAsB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC5Ega,EAAOnZ,KAAK,CAAC2B,KAAM,eAAgB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACtEga,EAAOnZ,KAAK,CAAC2B,KAAM,aAAc1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAEpEga,EAAOnZ,KAAK,CAAC2B,KAAM,sBAAuB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC7Ega,EAAOnZ,KAAK,CAAC2B,KAAM,kBAAmB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACzEga,EAAOnZ,KAAK,CAAC2B,KAAM,wBAAyB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC/Ega,EAAOnZ,KAAK,CAAC2B,KAAM,mBAAoB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAE1Ega,EAAOnZ,KAAK,CAAC2B,KAAM,WAAY1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAClEga,EAAOnZ,KAAK,CAAC2B,KAAM,gBAAiB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACvEga,EAAOnZ,KAAK,CAAC2B,KAAM,qBAAsB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC5Ega,EAAOnZ,KAAK,CAAC2B,KAAM,kBAAmB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACzEga,EAAOnZ,KAAK,CAAC2B,KAAM,2BAA4B1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAClFga,EAAOnZ,KAAK,CAAC2B,KAAM,8BAA+B1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACrFga,EAAOnZ,KAAK,CAAC2B,KAAM,wBAAyB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC/Ega,EAAOnZ,KAAK,CAAC2B,KAAM,iBAAkB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAExEga,EAAOnZ,KAAK,CAAC2B,KAAM,oBAAqB1C,MAAOia,EAAUla,MAAME,KAAK+N,OAAO,eAC3EkM,EAAOnZ,KAAK,CAAC2B,KAAM,6BAA8B1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACpFga,EAAOnZ,KAAK,CAAC2B,KAAM,mBAAoB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC1Ega,EAAOnZ,KAAK,CAAC2B,KAAM,uBAAwB1C,MAAOia,EAAUhM,2BAC5DiM,EAAOnZ,KAAK,CAAC2B,KAAM,OAAQ1C,MAAOia,EAAUla,MAAME,KAAK+N,OAAO,eAC9DkM,EAAOnZ,KAAK,CAAC2B,KAAM,UAAW1C,MAAOia,EAAUla,MAAME,KAAK+N,OAAO,eACjEkM,EAAOnZ,KAAK,CAAC2B,KAAM,gBAAiB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACvEga,EAAOnZ,KAAK,CAAC2B,KAAM,iBAAkB1C,MAAOia,EAAUla,MAAME,KAAK+N,OAAO,eACxEkM,EAAOnZ,KAAK,CAAC2B,KAAM,cAAe1C,MAAOia,EAAUla,MAAME,KAAK+N,OAAO,eACrEkM,EAAOnZ,KAAK,CAAC2B,KAAM,WAAY1C,MAAOia,EAAUla,MAAME,KAAK+N,OAAO,eAClEkM,EAAOnZ,KAAK,CAAC2B,KAAM,uBAAwB1C,MAAOia,EAAUlM,2BAC5DmM,EAAOnZ,KAAK,CAAC2B,KAAM,gBAAiB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACvEga,EAAOnZ,KAAK,CAAC2B,KAAM,eAAgB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACtEga,EAAOnZ,KAAK,CAAC2B,KAAM,oBAAqB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC3Ega,EAAOnZ,KAAK,CAAC2B,KAAM,gBAAiB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eACvEga,EAAOnZ,KAAK,CAAC2B,KAAM,yBAA0B1C,MAAOia,EAAUla,MAAMoa,gBACpED,EAAOnZ,KAAK,CAAC2B,KAAM,yBAA0B1C,MAAOia,EAAUla,MAAMqa,gBAEpEF,EAAOnZ,KAAK,CAAC2B,KAAM,oBAAqB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAC3Ega,EAAOnZ,KAAK,CAAC2B,KAAM,wBAAyB1C,MAAOia,EAAUla,MAAME,KAAKC,OAAO,eAE/E,IAAMma,EAAYH,EAAO1Z,KAAI,SAACG,EAAM4F,GAChC,YAAmBpG,IAAfQ,EAAKX,MAED,kBAACd,EAAA,EAAD,CAAUqK,OAAO,EAAM3I,IAAK2F,GACxB,kBAACpH,EAAA,EAAD,CAAcC,QAASuB,EAAK+B,KAAMrD,UAAWsB,EAAKX,SAGlD,QA6BhB,OAFA6B,QAAQC,IAAI,YAAamY,GAGvB,kBAAC,IAAD,KACE,yBAAKzb,MAAO,CAACyK,UAAW,SACtB,kBAACqR,GAAA,EAAD,CAASlc,QAAQ,SACf,kBAACD,EAAA,EAAD,CAAYC,QAAQ,YAAYoL,UAAWT,EAAQwR,OAAnD,gBAGA,yBAAK/Q,UAAWT,EAAQyR,OACxB,kBAACrP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAlCjB,WACf,IAAIgb,EAAW3X,aAAaC,QRvEF,YQwET,OAAb0X,IACFA,EAAW,OACX3X,aAAaE,QR1EW,WQ0EiByX,IAG3C,IAAIC,EAAW,GAEf,GAAiB,QAAbD,EACFC,ET6XH,SAAeC,EAAUC,GAC5B,IAAIjV,EACAkV,EAEAnY,EAEAgD,EACAoV,EAEAC,EACAC,EAPAC,EAAQ,GAKR9V,EAAS,GAMT+V,EAAa,IAKjB,IAJ0B,qBAAfN,GAA6C,OAAfA,IACrCA,EAAa,KAGZjV,EAAI,EAAGkV,EAAIF,EAASjN,OAAQ/H,EAAIkV,EAAGlV,GAAK,EAAG,CAI5C,GAFAD,EAAMiV,EAAShV,GACfmV,EAAM,GACI,IAANnV,EAAS,CAET,IAAKjD,KAAQgD,EACLA,EAAIyV,eAAezY,KACnBuY,EAAMla,KAAK2B,GACXoY,GAAO,CACHI,EACAxY,EAAKC,QAAQ,KAAM,MACnBuY,EACAN,GACFpS,KAAK,KAIfrD,GADA2V,EAAMA,EAAIjU,UAAU,EAAGiU,EAAIpN,OAAS,GAMxC,IAFAvI,GAAU,KACV2V,EAAM,GACDC,EAAI,EAAGC,EAAKC,EAAMvN,OAAQqN,EAAIC,EAAID,GAAK,EAGpCA,EAAI,IACJD,GAAOF,GAEXE,GAAOpX,GAJCgC,EADRhD,EAAOuY,EAAMF,KAOjB5V,GAAU2V,EAGd,OAAO3V,ESlbUiW,CAAMlB,OACZ,CACL,IAAMxU,EAAMwU,EAAOmB,QAAO,SAACC,EAAG3a,GAAJ,uBAAmB2a,EAAnB,eAAuB3a,EAAK+B,KAAO/B,EAAKX,UAAS,IAC3E0a,EAAWa,KAAKC,UAAU9V,GAG5B,IAAM2K,EAAUlP,SAASC,cAAc,KACjCK,EAAO,IAAIga,KAAK,CAACf,GAAW,CAAC3Y,KAAM,eACzCsO,EAAQ/R,KAAOod,IAAIC,gBAAgBla,GACnC4O,EAAQ+D,SAAR,UAAsB6F,EAAUlI,UAAUrP,KAA1C,YAAkD+X,GAClDtZ,SAASkT,KAAKC,YAAYjE,GAC1BA,EAAQkE,UAcF,kBAAC,KAAD,CAAM1O,KAAM+V,KAAuBvQ,KAAM,SAAU5M,MAAOA,MAG9D,6BACE,kBAACQ,EAAA,EAAD,CAAMsK,OAAO,EAAMsS,UAAU,OACxBxB,O,qBCnGXyB,GADcC,KAAMC,YACCF,SAErBG,G,2MAEJjX,MAAQ,CACNkX,QAAS,G,EAOX/R,KAAO,WACL,EAAKpF,MAAM9G,W,EAGbmM,OAAS,WACP0R,GAAO1R,OAAO,mCACd,EAAKD,Q,EAGPgS,mBAAqB,WACnBta,QAAQC,IAAI,iBAAkB,EAAKiD,MAAMzD,KACzC,EAAK0E,SAAS,CAACkW,QAAS,IACxBH,KAAM,CACJtY,OAAQ,MACRnC,IAAK,EAAKyD,MAAMzD,IAChB8a,aAAc,cACdC,YAAaP,GAAOQ,MACpBC,mBAAoB,SAACC,GACnB,IAAMC,EAAmBxN,KAAKC,MAA8B,IAAvBsN,EAAcE,OAAgBF,EAAcG,OACjF,EAAK3W,SAAS,CAAEkW,QAASO,IACzB5a,QAAQC,IAAI,YAAa2a,MAE1BvL,MAAK,SAAC0L,GACL/a,QAAQC,IAAI,aAAc8a,GAC1B,EAAK7X,MAAM8X,gBAAgBD,EAAS3c,MACpC,EAAKkK,UACN2S,OAAM,SAACzK,GACRxQ,QAAQC,IAAI,UAAWuQ,O,iFA/BT+F,GAChBtP,KAAKqT,uB,+BAoCL,OACE,6BACE,kBAACvd,EAAA,EAAD,CACIC,MAAM,EACNZ,QAAS6K,KAAKqB,MAEd,kBAACrL,EAAA,EAAD,KAAc,8BACd,kBAACE,EAAA,EAAD,KACE,kBAACwL,GAAA,EAAD,CAAgBpM,QAAQ,cAAc4B,MAAO8I,KAAK9D,MAAMkX,QAASzd,MAAM,eAEzE,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKsB,QAAtB,iB,GAtDaX,iBAsEdC,eAAQ,MANI,SAACC,GAC1B,MAAO,CACLkT,gBAAiB,SAACpb,GAAD,OAAUkI,EAASnF,GAAc/C,QAIvCiI,CAAkCuS,I,wCC/D3Czd,GAAQ,CACV0K,MAAO,QACP6T,QAAS,kBACT9T,UAAW,QAGTvE,GAAiB,CACnBC,OAAQ,sBAGNqY,GAAwB,CAC1B9T,MAAO,QACPD,UAAW,OACXsQ,WAAY,OAGV0D,GAAmB,CACrBF,QAAS,mBAmBPG,G,YACF,WAAYnY,GAAQ,IAAD,uBACf,4CAAMA,KASVC,MAAQ,CACJmY,YAAa,EAAKpY,MAAMqY,SAAS7X,QAAQ6Q,KAAK,GAC9CiH,QAAS,GACT/X,MAAO,GACPD,OAAQ,GACRiY,kBAAmB,GAfJ,EAkBnBC,aAAe,SAAChX,GACZ,OACE,yBAAK/H,MAAOye,IACV,kBAAC,GAAD,CACI9E,OAAQ,SAACc,GAAS,EAAKuE,iBAAiBjX,GAAS0S,GACjD1S,MAAOA,EACP0K,QAAS,SAAAgI,GAAG,OAAK,EAAKhI,QAAUgI,GAChCzD,WAAY,SAAAyD,GAAG,OAAK,EAAKzD,WAAayD,GACtC9K,cAAe,EAAKA,cACpBjL,SAAS,EACToV,SAAS,EACThK,IAAI,cA7BG,EAmCnBH,cAAgB,aAnCG,EAuCnBsP,gBAAkB,SAAClX,GACf,OAAO,EAAKiX,iBAAiBjX,IAxCd,EA2CnBmX,aAAe,SAACnX,GACZ,OAAO,EAAKoX,aAAapX,IA5CV,EA+CnBqX,kBAAoB,SAAClM,GACjB,EAAKmM,aAAe,GACpB,IAF0B,eAElBlY,GACJ,EAAKkY,aAAa9c,KAChB,yBACEH,IAAK+E,EACLlG,QAAS,kBAAM,EAAKqe,kBAAkBnY,IACtCoY,aAAc,kBAAM,EAAKC,kBAAkBrY,KAE1C,EAAK+X,aAAa/X,MAPnBA,EAAE,EAAGA,EAAI+L,EAAM/L,IAAM,EAArBA,GAYR,OACE,yBACET,GAAG,mBACH1G,MAAO,CACL4a,QAAS,OACT6E,iBAAiB,UAAD,OAAYvM,EAAZ,aAAqB,IAAMA,EAA3B,MAChBwM,oBAAoB,UAAD,OAAY,EAAZ,KAAkB,IAAlB,MACnBvZ,OAAQ,OACRuE,MAAO,SAGR,EAAK2U,eAxEK,EA8InBM,oBAAsB,SAACC,EAAOpe,GAG1B,EAAKmd,YAAciB,EAAM7f,OAAOyB,MAChC,IAAMqe,EAAere,EAAMY,IAI3B,EAAK0d,oBAAsB,EAAKvZ,MAAMwZ,SAASC,QAAO,SAACtK,GACnD,OAAOA,EAAE3O,QAAQ4X,cAAgB,EAAKA,eAI1C,EAAKsB,UAAYpe,EAAQ,EAAKie,qBAAqB,SAAApK,GAAC,OAAIA,EAAE5O,MAAMoZ,iBAChE,IAAMC,EAAS,YAAO,EAAKF,UAAUrI,QACrC,EAAK9Q,MAAQ,CACXhF,KAAM,EAAKme,UACXrI,KAAMuI,GAIR,EAAK5G,WAAa1X,EAAQ,EAAKoe,UAAU3d,IAAI6d,EAAU,KAAK,SAAAzK,GAAC,OAAIA,EAAE7O,OAAOuZ,gBAC1E,IAAM5G,EAAU,YAAO,EAAKD,WAAW3B,QAEvC,EAAK/Q,OAAS,CACV0S,WAAY,EAAKA,WACjBC,WAAYA,GAEhB,EAAKjT,MAAM8Z,eAAe,EAAKxZ,QAE/B,EAAKW,SAAS,CAACmX,YAAa,EAAKA,YAAa7X,MAAO,EAAKA,MAAM8Q,KAAK,GAAIiH,QAASsB,EAAWtZ,OAAQ2S,IAAa,WAmB9G,EAAKjT,MAAM+Z,8BAA8BT,GAOzC,EAAKP,kBAAkB,OAtMZ,EA6MnBiB,kBAAoB,SAACX,EAAOpe,GAIxB,IAAMgf,EAAahf,EAAMY,IAEzB,EAAK6d,UAAYpe,EAAQ,EAAKie,qBAAqB,SAAApK,GAAC,OAAIA,EAAE5O,MAAMoZ,iBAChE,IAAIC,EAAS,YAAO,EAAKF,UAAUrI,aACyBjW,IAAxD,EAAKse,UAAU3d,IAAI6d,EAAU,IAAI,GAAGrZ,MAAM2Z,YAC1C,EAAKR,UAAYpe,EAAQ,EAAKie,qBAAqB,SAAApK,GAAC,OAAIA,EAAE5O,MAAM4Z,oBAChEP,EAAS,YAAO,EAAKF,UAAUrI,SAEnC,EAAK9Q,MAAQ,CACXhF,KAAM,EAAKme,UACXrI,KAAMuI,GAMR,EAAK5G,WAAa1X,EAAQ,EAAKoe,UAAU3d,IAAI6d,EAAUK,KAAc,SAAA9K,GAAC,OAAIA,EAAE7O,OAAOuZ,gBACnF,IAAM5G,EAAU,YAAO,EAAKD,WAAW3B,QAKvC,EAAK/Q,OAAS,CACV0S,WAAY,EAAKA,WACjBC,WAAYA,GAEhB,EAAKjT,MAAM8Z,eAAe,EAAKxZ,QAI/B,EAAKW,SAAS,CAACV,MAAO,EAAKA,MAAM8Q,KAAK4I,GAAa3B,QAASsB,EAAWtZ,OAAQ2S,IAAa,WAaxF,EAAK8F,kBAAkB,OA5PZ,EAkQnBA,kBAAoB,SAACvX,GAIjB,EAAKxB,MAAMoa,6BAA6B5Y,GACxC,EAAKP,SAAS,CAACsX,kBAAmB/W,IAAQ,WACtC,EAAKxB,MAAMqa,eAAe,EAAK/Z,OAAO0S,WAAWjX,IAAI,EAAKkE,MAAMK,OAAOkB,SAxQ5D,EA4QnByX,kBAAoB,SAACzX,GAEjB,EAAKxB,MAAMoa,6BAA6B5Y,GACxC,EAAKP,SAAS,CAACsX,kBAAmB/W,IAAQ,WACtC,EAAKxB,MAAMqa,eAAe,EAAK/Z,OAAO0S,WAAWjX,IAAI,EAAKkE,MAAMK,OAAOkB,SA7Q3E,EAAKiX,iBAAmB,GACxB,EAAKG,aAAe,GACpB,IAAI,IAAIhY,EAAE,EAAGA,EAAI,GAAIA,IACnB,EAAKgY,aAAa5c,KAAK,EAAKwc,aAAa5X,IAN5B,S,iFA6EE,IAAD,OAGV0Y,EAAevV,KAAK/D,MAAMsa,2BAC1BL,EAAalW,KAAK/D,MAAMua,yBACxBnC,EAAcrU,KAAK/D,MAAMqY,SAAS7X,QAAQ6Q,KAAKiI,GAErDvV,KAAK9C,SAAS,CAACmX,YAAaA,IAAc,WACtC,EAAKmB,oBAAsB,EAAKvZ,MAAMwZ,SAASC,QAAO,SAACtK,GACnD,OAAOA,EAAE3O,QAAQ4X,cAAgBA,KAIrC,EAAKsB,UAAYpe,EAAQ,EAAKie,qBAAqB,SAAApK,GAAC,OAAIA,EAAE5O,MAAMoZ,iBAChE,IAAIC,EAAS,YAAO,EAAKF,UAAUrI,aACyBjW,IAAxD,EAAKse,UAAU3d,IAAI6d,EAAU,IAAI,GAAGrZ,MAAM2Z,YAC1C,EAAKR,UAAYpe,EAAQ,EAAKie,qBAAqB,SAAApK,GAAC,OAAIA,EAAE5O,MAAM4Z,oBAChEP,EAAS,YAAO,EAAKF,UAAUrI,SAEnC,EAAK9Q,MAAQ,CACXhF,KAAM,EAAKme,UACXrI,KAAMuI,GAMR,EAAK5G,WAAa1X,EAAQ,EAAKoe,UAAU3d,IAAI6d,EAAU,KAAK,SAAAzK,GAAC,OAAIA,EAAE7O,OAAOuZ,gBAC1E,IAAM5G,EAAU,YAAO,EAAKD,WAAW3B,QAKvC,EAAK/Q,OAAS,CACV0S,WAAY,EAAKA,WACjBC,WAAYA,GAEhB,EAAKnY,MAAQ,EAAKwF,OAAO0S,WAAWjX,IAAIkX,EAAW,IACnD,EAAKjT,MAAM8Z,eAAe,EAAKxZ,QAE/B,EAAKW,SAAS,CAACV,MAAO,EAAKA,MAAM8Q,KAAK4I,GAAa3B,QAASsB,EAAWtZ,OAAQ2S,IAAa,WAQxF,EAAK8F,kBAAkB,W,2CAW/B,IAAI,IAAInY,EAAE,EAAGA,EAAImD,KAAK9D,MAAMK,OAAOqI,OAAQ/H,IACvCmD,KAAK0U,iBAAiB7X,GAAGsL,QAAQ,WAAYnI,KAAKiP,WAAWjX,IAAIgI,KAAK9D,MAAMK,OAAOM,KACnFmD,KAAK0U,iBAAiB7X,GAAGsL,QAAQ,YAAa,K,+BA0I5C,IACElI,EAAYD,KAAK/D,MAAjBgE,QAIR,OACI,kBAAC,IAAD,KACI,yBAAKvK,MAAOkG,IACR,yBAAKlG,MAAOA,IACR,kBAAC+gB,GAAA,EAAD,CAAa/V,UAAWT,EAAQyW,aAC5B,kBAACC,GAAA,EAAD,CAAYva,GAAG,iBAAf,WACA,kBAACwa,GAAA,EAAD,CACIlW,UAAWT,EAAQ4W,WACnBC,QAAQ,uBACR1a,GAAG,iBACHlF,MAAO8I,KAAK9D,MAAMmY,YAClB0C,SAAU/W,KAAKqV,qBAEdrV,KAAK/D,MAAMqY,SAAS7X,QAAQ6Q,KAAK5V,KAAI,SAAC+E,EAASgB,GAAV,OAClC,kBAACuZ,GAAA,EAAD,CAAUtW,UAAWT,EAAQgX,aAAc/f,MAAOuF,EAAS3E,IAAK2F,GAAQhB,QAKpF,kBAACga,GAAA,EAAD,CAAa/V,UAAWT,EAAQyW,aAC5B,kBAACC,GAAA,EAAD,CAAYva,GAAG,eAAf,SACA,kBAACwa,GAAA,EAAD,CACIlW,UAAWT,EAAQ4W,WACnBC,QAAQ,qBACR1a,GAAG,eACHlF,MAAO8I,KAAK9D,MAAMM,MAClBua,SAAU/W,KAAKiW,mBAEdjW,KAAK9D,MAAMqY,QAAQ7c,KAAI,SAAC8E,EAAOiB,GAAR,OAEpB,kBAACuZ,GAAA,EAAD,CAAUtW,UAAWT,EAAQgX,aAAc/f,MAAOsF,EAAO1E,IAAK2F,GAAQjB,QAKlF,yBAAK9G,MAAOwe,IAEJlU,KAAK8U,kBAAkB9U,KAAK9D,MAAMK,OAAOqI,gB,GA/TlDjE,iBA6VRC,gBApBS,SAAC1E,GACrB,MAAO,CACLuZ,SAAUvZ,EAAMuZ,SAChBc,2BAA4Bra,EAAMqa,2BAClCC,yBAA0Bta,EAAMsa,yBAChC7G,0BAA2BzT,EAAMyT,8BAIZ,SAAC9O,GACxB,MAAO,CACHqW,cAAe,SAACngB,GAAD,OAAW8J,EAAS3F,GAAWnE,KAC9CogB,YAAa,SAAChgB,GAAD,OAAU0J,ET7SP,SAAC1J,GACrB,MAAO,CACH8B,KA1FsB,iBA2FtBqb,SAAUnd,GS0SsBmd,CAASnd,KACzC6e,8BAA+B,SAACvY,GAAD,OAAWoD,ETvSR,SAACpD,GACvC,MAAO,CACHxE,KAhGqC,gCAiGrCsd,2BAA4B9Y,GSoSuB8Y,CAA2B9Y,KAC9E2Z,4BAA6B,SAAC3Z,GAAD,OAAWoD,ETjSR,SAACpD,GACrC,MAAO,CACHxE,KAtGmC,8BAuGnCud,yBAA0B/Y,GS8RuB+Y,CAAyB/Y,KAC1E4Y,6BAA8B,SAAC5Y,GAAD,OAAWoD,ET3RR,SAACpD,GACtC,MAAO,CACHxE,KA5GoC,+BA6GpC0W,0BAA2BlS,GSwRuBkS,CAA0BlS,KAC5EsY,eAAgB,SAACxZ,GAAD,OAAYsE,ET3VT,SAACtE,GACxB,MAAO,CACHtD,KAtDoB,eAuDpBsD,OAAQA,GSwV6B8a,CAAY9a,QAI1CqE,CAA6CE,aA7W7C,SAAAC,GAAK,MAAK,CACrB2V,YAAa,CACTjU,OAAQ1B,EAAME,QAAQ,GACtBqW,SAAU,KAEdC,YAAa,CACTpX,UAAWY,EAAME,QAAQ,IAE7B4V,WAAY,CACR3V,SAAU,UAEd+V,aAAc,CACV/V,SAAU,aAiW0CJ,CAAmBsT,K,6ICvX/E7Q,YAAoCJ,YAAcA,G,IAE5CqU,G,YACJ,WAAYvb,GAAQ,IAAD,8BACjB,4CAAMA,KAORC,MAAQ,CACNyF,SAAU,EACVL,QAAQ,GAVS,EAgJnBmW,MAAQ,WAEN,EAAKxb,MAAM9G,WAlJM,EAqJnBmM,OAAS,WACP,EAAKpE,SAAS,CAACoE,QAAQ,KApJvB,EAAK/D,MAAQ,GACb,EAAKma,MAAQ,EACb,EAAKC,KAAO,EAJK,E,iFAaE,IAAD,OAElB3X,KAAK2X,KAAO3X,KAAK/D,MAAMlF,MAAM6N,OAAS,GACtC5E,KAAK4X,aAAe5X,KAAK2X,KACzB3X,KAAK6X,GAAKC,YAAYC,MAEtB,IANkB,eAMTlb,GACP,IAAMlE,EAAO,EAAKsD,MAAMlF,MAAM8F,GAC9B,GAAI,EAAKX,MAAMoF,OAIb,OAHA,EAAKrF,MAAM+b,iBAAiB,MAC5B,EAAK/b,MAAMib,cAAc,MACzB,EAAKO,QACC,CAAN,UAEF,IAAInQ,EAAU,KAGZA,EADwB,UAAtB,EAAKrL,MAAMoD,OACHkE,WAAmC+F,YAAYD,IAAI1Q,GAEnD4K,WAAmC+F,YAAYF,UAAUzQ,EAAKxB,MAE1EgM,aAAsBmE,GAASc,MAAK,SAACnR,GAEnC,IAAMod,EZrDP,SAA6Bpd,GAChC,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EYgDiB+gB,CAAoBhhB,GAElCihB,EZ/CP,SAAyBjhB,GAC5B,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EY0CaihB,CAAgBlhB,GAC1Bkf,EZxCP,SAA2Blf,GAC9B,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EYmCekhB,CAAkBnhB,GAC9BohB,EZjCP,SAA2BphB,GAC9B,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EY4BeohB,CAAkBrhB,GAC9Bmf,EZ1BP,SAAkCnf,GACrC,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EYqBsBqhB,CAAyBthB,GAE5CuhB,EZpBP,SAA4BvhB,GAC/B,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EYegBuhB,CAAmBxhB,GAChCyhB,EZbP,SAA4BzhB,GAC/B,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EYQgByhB,CAAmB1hB,GAChCmY,EZNP,SAAmCnY,GACtC,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EYCuB0hB,CAA0B3hB,GAC9C6e,EZCP,SAA8B7e,GACjC,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOI,WAAWJ,GYNO2hB,CAAqB5hB,GAEpC6hB,EZgDP,SAAgC7hB,GACnC,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOA,EYrDoB6hB,CAAuB9hB,GACxC+hB,EZyEP,SAA+B/hB,GAClC,IACI,IAAMgiB,EAAMhiB,EAAME,KAAKC,OAAO,aAAagH,MAAM,MAE7C8a,EAAgB,IAAInM,MAAM,GAAGC,KAAK,GACtCkM,EAAc,GAAK5hB,WAAW2hB,EAAI,IAClCC,EAAc,GAAK5hB,WAAW2hB,EAAI,IAClCC,EAAc,GAAK5hB,WAAW2hB,EAAI,IAGlC,IAAME,EAAMliB,EAAME,KAAKC,OAAO,aAAagH,MAAM,MAE7C0O,EAAI,IAAIC,MAAM,GAAGC,KAAK,GAAGtV,KAAI,kBAAM,IAAIqV,MAAM,GAAGC,KAAK,MAEzDF,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IAKzBrM,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAC7CA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAC7CA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAG7C,IADA,IAAIsM,EAAO,EACFvc,EAAI,EAAGA,EAAI,IAAKA,EACzBuc,GAAQtM,EAAE,GAAGjQ,GAAKqc,EAAcrc,GAEhC,OAAOuc,EACT,MAAM7P,GACJ,OAAO,GY3Ge8P,CAAsBpiB,GACtCqiB,EAAgBtiB,EAAsBC,GACtC0R,EZ6DP,SAAyB1R,GAC5B,IAAMC,EAAQD,EAAME,KAAK+N,OAAO,aAChC,QAAc7N,IAAVH,EAGJ,OAAOA,EYlEaqiB,CAAgBtiB,GAC1B2R,EZoDP,SAAsB3R,GACzB,IAAMC,EAAQD,EAAME,KAAK+N,OAAO,aAChC,QAAc7N,IAAVH,EAGJ,OAAOA,EYzDUsiB,CAAaviB,GAEpB2e,OAA8Bve,IAAd8e,OAA0B9e,EZqHjD,SAA+BoiB,GAClC,IAAMC,EAAO,IAAI5b,KAAK2b,EAAS1b,UAAU,EAAG,GAAG,IAAI0b,EAAS1b,UAAU,EAAG,GAAG,IAAI0b,EAAS1b,UAAU,EAAG,IAChG4b,EAAOF,EAAS1b,UAAU,EAAG,IAAI,IAAI0b,EAAS1b,UAAU,GAAI,IAAI,IAAI0b,EAAS1b,UAAU,GAAI,IAC3F6b,EAAaF,EAAK1b,wBAAmB3G,EAAW,CAAE4G,KAAM,UAAWC,MAAO,QAASC,IAAK,YAC9F,MAAM,GAAN,OAAUyb,EAAV,cAA0BD,GYzHsCE,CAAsB,GAAD,OAAI1D,EAAJ,YAAiBkC,IAE9FxgB,EAAO,KAGTA,EAFwB,UAAtB,EAAKoE,MAAMoD,OAEN,CACLiI,QAASA,EACTwR,eAAgBA,EAChBlf,KAAMT,EAAmBR,EAAKiB,MAC9B3C,MAAOA,EACP2R,KAAMA,EACND,QAASA,EACTqQ,cAAeA,EACfM,cAAeA,EACf7c,QAAS,CACP4X,YAAaA,GAEf7X,MAAO,CACL0b,QAASA,EACT/B,UAAWA,EACXkC,UAAWA,EACXzC,cAAeA,EACfQ,iBAAkBA,GAEpB7Z,OAAQ,CACNic,WAAYA,EACZE,WAAYA,EACZtJ,kBAAmBA,EACnB0G,aAAcA,IAIX,CACLxO,QAASA,EACTwR,eAAgBA,EAChBlf,KAAMjB,EAAKiB,KACX3C,MAAOA,EACP2R,KAAMA,EACND,QAASA,EACTqQ,cAAeA,EACfM,cAAeA,EACf7c,QAAS,CACP4X,YAAaA,GAEf7X,MAAO,CACL0b,QAASA,EACT/B,UAAWA,EACXkC,UAAWA,EACXzC,cAAeA,EACfQ,iBAAkBA,GAEpB7Z,OAAQ,CACNic,WAAYA,EACZE,WAAYA,EACZtJ,kBAAmBA,EACnB0G,aAAcA,IAGpB,EAAKvY,MAAMtF,KAAKJ,GAChB,EAAK6f,QAEL,IAAM/V,EAAWwE,KAAK+H,MAAM,EAAKwJ,OAAO,IAAI,EAAKzb,MAAMlF,MAAM6N,SAEzDjD,EAAW,EAAKiW,eAClB,EAAKA,cAAgB,EAAKD,KAC1B,EAAKza,SAAS,CAACyE,SAAUA,KAEvB,EAAK+V,QAAU,EAAKzb,MAAMlF,MAAM6N,SAClC,EAAKrH,MAAMuc,MAAK,SAAC/H,EAAGgI,GAClB,OAAOhI,EAAE+G,eAAiBiB,EAAEjB,kBAI9B,EAAKkB,GAAKlC,YAAYC,MACtBhf,QAAQC,IAAR,kCAAuC,EAAKghB,GAAG,EAAKnC,GAApD,kBACA,EAAK5b,MAAM+b,iBAAiB,EAAKza,OACjC,EAAKtB,MAAMib,cAAc,EAAK3Z,OAC9B,EAAKka,YAET,SAACja,GACCzE,QAAQC,IAAI,oCAAqCwE,GACjD,EAAKka,WAEH,EAAKA,MAAU,EAAKzb,MAAMlF,MAAM6N,QAtH7B/H,EAAE,EAAGA,EAAEmD,KAAK/D,MAAMlF,MAAM6N,OAAQ/H,IAAK,CAAC,IAAD,IAArCA,GAAqC,qC,+BAuI9C,OACE,6BACE,kBAAC/G,EAAA,EAAD,CACIC,MAAM,EACNZ,QAAS6K,KAAKyX,MACdhW,kBAAgB,sBAEhB,kBAACzL,EAAA,EAAD,CAAaoG,GAAG,sBAAsB,8BACtC,kBAAClG,EAAA,EAAD,KACE,kBAACwL,GAAA,EAAD,CAAgBpM,QAAQ,cAAc4B,MAAO8I,KAAK9D,MAAMyF,SAAUhM,MAAM,eAE1E,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKsB,QAAtB,iB,GAvKmBX,iBAwLpBC,eAAQ,MAPI,SAACC,GAC1B,MAAO,CACHmX,iBAAkB,SAACjhB,GAAD,OAAW8J,EV3KN,SAAC9J,GAC1B,MAAO,CACHkC,KA1CsB,iBA2CtBwc,SAAU1e,GUwK0BkjB,CAAcljB,KACpDmgB,cAAe,SAACngB,GAAD,OAAW8J,EAAS3F,GAAWnE,QAIrC6J,CAAkC4W,IC9H3C5b,GAAiB,CACnBC,OAAQ,sBAGNqe,G,YACF,WAAYje,GAAQ,IAAD,8BACf,4CAAMA,KAQVC,MAAQ,CACJie,eAAgB,GAChBC,eAAgB,GAChBC,SAAU,GACVC,aAAc,GACdC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,wBAAwB,EACxBC,mBAAmB,EACnBC,gBAAgB,EAChBC,6BAA6B,GApBd,EAuInBC,iBAAmB,WACf,IAAIC,EAAc,GACd,EAAK7e,MAAMme,SAASzV,OAAS,EAC7B,EAAK1H,SAAS,CAACmd,SAAUU,IAEzB,EAAK9e,MAAM8P,cAAcnU,SAAQ,SAACC,GACZ,QAAdA,EAAKoB,MACL8hB,EAAY9iB,KAAKJ,EAAK+B,MAE1B,EAAKsD,SAAS,CAACmd,SAAUU,IAAc,mBAhJhC,EAwJnBC,+BAAiC,qBAAA5P,EAAAa,OAAA,mEAAAb,EAAA,MACvBxU,EAAGoV,YAAY,IAAKpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,gDAChC,EAAK/P,MAAMme,SAASziB,SAAS,SAAOgC,EAAM6D,GAAb,UAAA2N,EAAAa,OAAA,mEAAAb,EAAA,MACnBxU,EAAGG,MAAM4I,MAAM,CAACF,OAAQ,EAAKxD,MAAMuD,aAAc5F,KAAMA,IAAOgG,OAAM,SAAC/H,QAE1DR,IAATQ,GAAoC,QAAdA,EAAKoB,KAC3B,EAAKlC,MAAMkB,KAAKJ,GACK,QAAdA,EAAKoB,MACZrC,EAAGG,MAAM4I,MAAM,UAAUsb,qBAAqBpjB,EAAK+B,MAAMsO,MAAK,SAAC1K,QACjDnG,IAANmG,GAA8B,QAAXA,EAAEvE,MAErB,EAAKlC,MAAMkB,KAAKuF,UATP,wCADG,yCADP,sCAxJd,EA4KnB0d,kBAAoB,WACmB,IAA/B,EAAKhf,MAAMme,SAASzV,SACxB,EAAK7N,MAAQ,GACb,EAAKikB,iCAAiC5S,MAAK,WACvC,EAAKlL,SAAS,CAAC2d,6BAA6B,IAC5C,EAAK3d,SAAS,CAACmd,SAAU,UAjLd,EAqLnBc,yBAA2B,WACvB,EAAKje,SAAS,CAAE2d,6BAA6B,IACzC,EAAK5e,MAAMlF,MAAM6N,OAAS,EAC1B,EAAK3I,MAAMmf,+BACR,EAAKnf,MAAMof,YAAY,IAzLf,EA4LnBC,UAAY,WACR,EAAKpe,SAAS,CAACid,eAAgB,kBAAmBI,kBAAmB,EAAKre,MAAMqe,oBA7LjE,EAgMnBgB,WAAa,WACT,EAAKC,aAAe,EAAKtf,MAAMme,SAAS,EAAKne,MAAMme,SAASzV,OAAO,GACnE,EAAK1H,SAAS,CAACid,eAAgB,GAAIC,eAAgB,EAAKoB,aAAcjB,kBAAmB,EAAKre,MAAMqe,oBAlMrF,EAqMnBkB,YAAc,WAEV,GAAgC,KAA5B,EAAKxf,MAAMuD,aAAf,CACA,IAAMkc,EAAU,EAAKzf,MAAMuD,aAAapB,MAAM,KAAK1B,MAAM,GAAI,GAAGgD,KAAK,KACrE,EAAKzD,MAAM0f,cAAcD,GACzB,EAAKE,UAAUF,KA1MA,EA6MnBG,YAAc,SAACre,GACX,GAAkC,KAA9B,EAAKtB,MAAMie,eAAuB,CAGlC,QAAc9iB,IADA,EAAK4E,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAAS,EAAKsC,MAAMke,kBAGnE,YADA,EAAKld,SAAS,CAACwd,wBAAwB,IAG3C,IAAM7iB,EAAO,EAAKoE,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAAS,EAAK4hB,gBAChE,QAAankB,IAATQ,EAAoB,CACpB,GAAkB,QAAdA,EAAKoB,KAAgB,CACrB,IAAM6iB,EAAY,EAAKC,cAAclkB,EAAK4H,OAAQ5H,EAAK+B,MACjDoiB,EAAY,EAAKD,cAAclkB,EAAK4H,OAAQ,EAAKvD,MAAMke,gBAE7DxjB,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAM4I,MAAM,CAACF,OAAQqc,IAAY5T,MAAK,SAAC1K,GAC5C5G,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAMsS,IAAI,CACnB5J,OAAQuc,EACRpiB,KAAM4D,EAAE5D,KACRX,KAAMuE,EAAEvE,KACRsJ,KAAM/E,EAAE+E,KACRpL,KAAMqG,EAAErG,OACLiR,MAAK,WACJxR,EAAGG,MAAM4I,MAAM,CAACF,OAAQqc,IAAYzP,aARb,4CAFR,wCAgBnCzV,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAMsS,IAAI,CACjB5J,OAAQ5H,EAAK4H,OACb7F,KAAM,EAAKsC,MAAMke,eACjBnhB,KAAMpB,EAAKoB,KACXsJ,KAAM1K,EAAK0K,KACXpL,KAAMU,EAAKV,OACViR,MAAK,WACJxR,EAAGG,MAAM4I,MAAM,CAACF,OAAQ5H,EAAK4H,OAAQ7F,KAAM/B,EAAK+B,OAAOyS,aARhC,wCAW/B,EAAKnP,SAAS,CAACqd,kBAAkB,IACjC,EAAKqB,UAAU,EAAK3f,MAAMuD,oBAG9B,EAAKtC,SAAS,CAACqd,kBAAkB,IAAQ,WACrC,EAAK0B,YAAY,EAAKhgB,MAAMuD,aAAc,EAAKtD,MAAMke,oBA3P9C,EAgQnB8B,UAAY,WACP,EAAKhf,SAAS,CAACqd,kBAAkB,KAjQnB,EAoQnB4B,SAAW,WAKP,GAAkC,OAA9B,EAAKlgB,MAAMmgB,eAAyB,CACpC,IAAMzjB,EAAO,EAAKsD,MAAMmgB,eACxB,GAAa,OAATzjB,EAAe,OACnB,IAAI4F,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAC6W,GACb,IAAI+G,EAAS/G,EAAM7f,OAAOkJ,OACpBlF,EAAME,EAAehB,EAAKiB,MAE1BA,EAAOJ,EAAYL,EAAmBR,EAAKiB,OAE7CgS,EAAUhS,EACViS,EAAU,EACVC,GAAO,EARY,aAUnB,IAAI1S,EAAmB,KAARK,EAAamS,EAAb,UAA0BA,EAA1B,YAAqCnS,QAElCpC,IADA,EAAK4E,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAASR,MAE5DxC,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAMsS,IAAI,CACf5J,OAAQ,EAAKxD,MAAMuD,aACnB5F,KAAMR,EACNH,KAAc,KAARQ,EAAaF,EAAWK,GAAQH,EACtC8I,KAAM5J,EAAK4J,KACXpL,KAAMklB,KANiB,wCAQ5BjU,MAAK,WACJ,EAAKwT,UAAU,EAAK3f,MAAMuD,iBAE9BsM,GAAO,IAEPF,EAAO,UAAMhS,EAAN,WACHiS,EAAU,IAAGD,EAAO,UAAMA,EAAN,aAAkBC,EAAlB,MACxBA,MAnBR,GAAI,WAqBMC,IAEdvN,EAAOS,kBAAkBrG,QACS,OAA3B,EAAKsD,MAAMjB,aAAuB,WACzC,IAAMrC,EAAO,EAAKsD,MAAMjB,YACpBqhB,EAAS1jB,EAAKxB,KACZsC,EAAME,EAAehB,EAAKiB,MAC1BA,EAAOJ,EAAYL,EAAmBR,EAAKiB,OAC7CgS,EAAUhS,EACViS,EAAU,EACVC,GAAO,EAP6B,aASpC,IAAI1S,EAAmB,KAARK,EAAamS,EAAb,UAA0BA,EAA1B,YAAqCnS,QAElCpC,IADA,EAAK4E,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAASR,MAE5DxC,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAMsS,IAAI,CACf5J,OAAQ,EAAKxD,MAAMuD,aACnB5F,KAAMR,EACNH,KAAMM,EAAWK,GACjB2I,KAAM5J,EAAK4J,KACXpL,KAAMklB,KANiB,wCAQ5BjU,MAAK,WACJ,EAAKwT,UAAU,EAAK3f,MAAMuD,iBAE9BsM,GAAO,IAEPF,EAAO,UAAMhS,EAAN,WACHiS,EAAU,IAAGD,EAAO,UAAMA,EAAN,aAAkBC,EAAlB,MACxBA,MAnBR,GAAI,WAqBMC,GA7B+B,IA9S9B,EA+UnBwQ,SAAW,WACP,IAAIC,EAAkB,GACtB,EAAKrgB,MAAMme,SAASziB,SAAQ,SAAAgC,GACxB,IAAM/B,EAAO,EAAKoE,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAASA,UAC9CvC,IAATQ,GACA0kB,EAAgBtkB,KAAK,CAACwH,OAAQ5H,EAAK4H,OAAQ7F,KAAM/B,EAAK+B,UAG9D,EAAKsD,SAAS,CAACod,aAAciC,KAvVd,EA0VnBC,QAAU,WACN,IAAID,EAAkB,GACtB,EAAKrgB,MAAMme,SAASziB,SAAQ,SAAAgC,GACxB,IAAI/B,EAAO,EAAKoE,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAASA,UAC5CvC,IAATQ,GACA0kB,EAAgBtkB,KAAK,CAACwH,OAAQ5H,EAAK4H,OAAQ7F,KAAM/B,EAAK+B,UAG9D,EAAKsD,SAAS,CAACod,aAAciC,IAC7B,EAAKE,KAAM,GAnWI,EAsWnBC,UAAY,WAGR,EAAKxgB,MAAMoe,aAAa1iB,SAAQ,SAAOyiB,EAAU5c,GAAjB,UAAA2N,EAAAa,OAAA,mEAAAb,EAAA,MACtBxU,EAAGG,MAAM4I,MAAM,CAACF,OAAQ4a,EAAS5a,OAAQ7F,KAAMygB,EAASzgB,OAAOgG,OAAM,SAAC/H,GACxE,QAAaR,IAATQ,EAEA,GAAkB,QAAdA,EAAKoB,KAAgB,CAErB,IAAI4S,EAAU,EACVC,GAAO,EACPF,EAAU/T,EAAK+B,KAJE,aAMjB,IAAIR,EAAWwS,OAEGvU,IADA,EAAK4E,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAASR,KAE5D0S,GAAO,GAEPF,EAAO,UAAM/T,EAAK+B,KAAX,WACHiS,EAAU,IAAGD,EAAO,UAAMA,EAAN,aAAkBC,EAAlB,MACxBA,MARR,GAAI,WAUMC,GAIVlV,EAAGG,MAAMsS,IAAI,CACT5J,OAAQ,EAAKxD,MAAMuD,aACnB5F,KAAMgS,EACN3S,KAAMpB,EAAKoB,KACXsJ,KAAM1K,EAAK0K,KACXpL,KAAMU,EAAKV,OAGf,IAAM2kB,EAAY,EAAKC,cAAclkB,EAAK4H,OAAQ5H,EAAK+B,MACjDoiB,EAAY,EAAKD,cAAc,EAAK9f,MAAMuD,aAAcoM,GAG1D2F,EAAY,GAChB3a,EAAGG,MAAM4I,MAAM,UAAUsb,qBAAqBa,GAAW5T,MAAK,SAAC1K,GAC3D+T,EAAUtZ,KAAKuF,MAChB4K,MAAK,WACJmJ,EAAU3Z,SAAQ,SAAA4F,GAId5G,EAAGG,MAAMsS,IAAI,CACT5J,OAAQuc,EACRpiB,KAAM4D,EAAE5D,KACRX,KAAMuE,EAAEvE,KACRsJ,KAAM/E,EAAE+E,KACRpL,KAAMqG,EAAErG,iBAIjB,CACH,IAAMsC,EAAME,EAAe9B,EAAK+B,MAC1BA,EAAOJ,EAAY3B,EAAK+B,MAC1BgS,EAAUhS,EACViS,EAAU,EACVC,GAAO,EALR,aAOC,IAAI1S,EAAmB,KAARK,EAAamS,EAAb,UAA0BA,EAA1B,YAAqCnS,QAElCpC,IADA,EAAK4E,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAASR,MAE5DxC,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAMsS,IAAI,CACf5J,OAAQ,EAAKxD,MAAMuD,aACnB5F,KAAMR,EACNH,KAAMpB,EAAKoB,KACXsJ,KAAM1K,EAAK0K,KACXpL,KAAMU,EAAKV,QANY,wCAS/B2U,GAAO,IAEPF,EAAO,UAAMhS,EAAN,WACHiS,EAAU,IAAGD,EAAO,UAAMA,EAAN,aAAkBC,EAAlB,MACxBA,MAjBR,GAAI,WAmBMC,QA7EM,OAiFxBrO,IAAU,EAAKvB,MAAMoe,aAAa1V,OAAO,IACrC,EAAK6X,MACL,EAAKvgB,MAAMoe,aAAa1iB,SAAQ,SAACyiB,GAC7BzjB,EAAGG,MAAM4I,MAAM,CAACF,OAAQ4a,EAAS5a,OAAQ7F,KAAMygB,EAASzgB,OAAOyS,YAEnE,EAAKnP,SAAS,CAACod,aAAc,KAC7B,EAAKmC,KAAM,GAEf,EAAKb,UAAU,EAAK3f,MAAMuD,eAzFF,wCA4FhC,EAAKtC,SAAS,CAACmd,SAAU,MArcV,EAwcnBsC,WAAa,WACT,EAAKzgB,MAAMme,SAASziB,SAAQ,SAAAgC,GACxB,IAAI/B,EAAO,EAAKoE,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAASA,UAC5CvC,IAATQ,IACkB,QAAdA,EAAKoB,MACLrC,EAAGG,MAAM4I,MAAM,UAAUsb,qBAAqB,EAAKc,cAAclkB,EAAK4H,OAAQ5H,EAAK+B,OAAOyS,SAE9FzV,EAAGG,MAAM4I,MAAM,CAACF,OAAQ5H,EAAK4H,OAAQ7F,KAAM/B,EAAK+B,OAAOyS,SAASjE,MAAK,WACjE,EAAKwT,UAAU,EAAK3f,MAAMuD,qBAItC,EAAKtC,SAAS,CAACmd,SAAU,MApdV,EAudnBuC,WAAa,WACT,EAAK1f,SAAS,CAACud,eAAgB,EAAKve,MAAMue,iBAxd3B,EA2dnBoC,WAAa,WAC0B,IAA/B,EAAK3gB,MAAMme,SAASzV,QACxB,EAAK1H,SAAS,CAACyd,mBAAmB,KA7dnB,EAgenBmC,UAAY,SAACtf,EAAGwU,GAEZ,IAAM+K,EAAgB,EAAK7gB,MAAMme,SAAS5Q,QAAQuI,EAAIpY,MAElDmhB,EAAc,IACK,IAAnBgC,EACAhC,EAAcA,EAAYiC,OAAO,EAAK9gB,MAAMme,SAAUrI,EAAIpY,MACnDmjB,GAAiB,IACxBhC,EAAcA,EAAYiC,OACtB,EAAK9gB,MAAMme,SAAS3d,MAAM,EAAGqgB,GAC7B,EAAK7gB,MAAMme,SAAS3d,MAAMqgB,EAAgB,KAGlD,EAAK7f,SAAS,CAACmd,SAAUU,IAAc,gBA7exB,EAkfnBkC,gBAAkB,SAACzf,EAAG3F,GAClB,GAAkB,QAAdA,EAAKoB,KAAgB,CACrB,EAAKiE,SAAS,CAAC0d,gBAAgB,IAC/B,IAAMpb,EAAe,EAAKuc,cAAclkB,EAAK4H,OAAQ5H,EAAK+B,MAC1D,EAAKqC,MAAM0f,cAAcnc,GACzB,EAAKoc,UAAUpc,OACM,aAAd3H,EAAK+B,KACZ,EAAKqC,MAAMihB,eAAerlB,IAE1B,EAAKoE,MAAM4D,eAAehI,GAC1B,EAAKoE,MAAMkhB,OAAOtlB,KA5fP,EAggBnBulB,cAAgB,WACZ,EAAKlgB,SAAS,CAAEsd,kBAAkB,KAjgBnB,EAogBnB6C,cAAgB,WACZ,EAAKngB,SAAS,CAAEsd,kBAAkB,KArgBnB,EAwgBnB8C,iBAAmB,WACf,EAAKD,gBACL,EAAKV,cA1gBU,EA6gBnBY,oBAAsB,WAClB,EAAKrgB,SAAS,CAAEwd,wBAAwB,KA9gBzB,EAihBnB8C,WAAa,WACT,EAAKtgB,SAAS,CAAEyd,mBAAmB,KAlhBpB,EAqhBnB8C,YAAc,WACV,IAAMrkB,EAAQ,UAAM,EAAKskB,YAAYxmB,MAAvB,QACd,EAAKgG,SAAS,CAAEyd,mBAAmB,IAAS,WACxC,IAAIgD,EAAM,IAAIC,KACVrM,EAAY,GAChB3a,EAAGG,MAAM4I,MAAM,UAAUsb,qBAAqB,EAAKhf,MAAMuD,cAAc0I,MAAK,SAAC1K,IACrE,EAAKtB,MAAMme,SAAS5Q,QAAQjM,EAAEiC,SAAW,GAAK,EAAKvD,MAAMme,SAAS5Q,QAAQjM,EAAE5D,OAAS,IACrF2X,EAAUtZ,KAAKuF,MACpB4K,MAAK,WACJmJ,EAAU3Z,SAAQ,SAAC4F,GACA,QAAXA,EAAEvE,MACF0kB,EAAIE,OAAOrgB,EAAEiC,QAAQ9G,KAAK6E,EAAE5D,KAAM4D,EAAErG,SAG5CwmB,EAAIG,cAAc,CAAC7kB,KAAK,SAASmP,MAAK,SAAAuD,GAClCoS,kBAAOpS,EAAMvS,aApiBV,EA0iBnB4kB,UAAY,SAACxgB,EAAG3F,GACZ,EAAKomB,MAAQ/W,YAAW,WACpB,EAAK+V,gBAAgBzf,EAAG3F,KACzB,MA7iBY,EAgjBnBqmB,QAAU,SAAC1gB,GACP2gB,aAAa,EAAKF,QA/iBlB,EAAKlnB,MAAQ,GACb,EAAK0lB,KAAM,EACX,EAAK2B,WAAa,EAClB,EAAKV,YAAc7M,IAAMwN,YALV,E,iFAwBfre,KAAK4b,UAAU5b,KAAK/D,MAAMuD,gB,yCAGX8P,GAAgB,IAAD,OAE9B,GAAgC,OAA5BtP,KAAK/D,MAAMN,aAAuB,CAClC,IAAMgiB,EAAM,IAAIC,KAChBD,EAAIW,UAAUte,KAAK/D,MAAMN,cAAcyM,MAAK,SAACmW,GAEzCA,EAAS3mB,SAAQ,SAAC4mB,EAAcC,GAExBA,EAASC,KAITf,EAAIhlB,KAAK6lB,GAAcvS,MAAM,cAAc7D,MAAK,SAACuW,GAC7C,EAAKC,UAAUJ,EAAcG,YAI1CvW,MAAK,WACJ,EAAKnM,MAAM8X,gBAAgB,Y,oCAQzBtU,EAAQ7F,GAClB,IAAIoiB,EAAY,GAUhB,MATe,KAAXvc,EACa,KAAT7F,IACAoiB,EAAYpiB,GAGZoiB,EADS,KAATpiB,EACS,UAAM6F,EAAN,YAAgB7F,GAEb6F,EAEbuc,I,gCAGD5iB,EAAUjC,GAAO,IAAD,OAGlBoI,EAAanG,EAASgF,MAAM,KAC1BxE,EAAO2F,EAAWlB,MAClBoB,EAASO,KAAK+b,cAAc/b,KAAK/D,MAAMuD,aAAcD,EAAWG,KAAK,MAE3E9I,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAMsS,IAAI,CACf5J,OAAQA,EACR7F,KAAMA,EACNX,KAAMM,EAAWK,GACjB2I,KAAMpL,EAAKyN,OACXzN,KAAMA,KANiB,wCAQ5BiR,MAAK,WAEJ,IAFW,IAAD,aAGN,IAAMxO,EAAO2F,EAAWlB,MAClBoB,EAAS,EAAKsc,cAAc,EAAK9f,MAAMuD,aAAcD,EAAWG,KAAK,MAE3E9I,EAAGoV,YAAY,KAAMpV,EAAGG,OAAO,qBAAAqU,EAAAa,OAAA,mEAAAb,EAAA,MACrBxU,EAAGG,MAAM8nB,IAAI,CACfpf,OAAQA,EACR7F,KAAMA,EACNX,KAAM,MACNsJ,KAAM,MALiB,wCAO5B6F,MAAK,WACJ,EAAKwT,UAAU,EAAK3f,MAAMuD,kBAZ3BD,EAAWqF,OAAS,GAAI,S,iCAkB5B8Z,GAAqB,IAAhBI,IAAe,yDACrBjnB,EAAOmI,KAAK/D,MAAM8P,cAAc7M,MAAK,SAAA1B,GAAC,OAAIA,EAAE5D,OAAS8kB,KAC3D,YAAarnB,IAATQ,MACIinB,IACA9e,KAAKic,YAAYjc,KAAK/D,MAAMuD,aAAckf,IACnC,M,gCAKTA,GAAM,IAAD,OAEPnN,EAAY,GAChB3a,EAAGoV,YAAY,IAAKpV,EAAGG,OAAO,WAC1BH,EAAGG,MAAM4I,MAAM,CAACF,OAAQif,EAAKzlB,KAAM,QAAQ8lB,OAAO,QAAQ3W,MAAK,SAAC5Q,GAC5D+Z,EAAY/Z,KACb4Q,MAAK,WACJxR,EAAGG,MAAM4I,MAAM,CAACF,OAAQif,IAAMM,KAAI,SAAAnnB,GAAI,MAAkB,QAAdA,EAAKoB,QAAgB8lB,OAAO,QAAQ3W,MAAK,SAAC5Q,GAChF+Z,EAAYA,EAAUyL,OAAOxlB,MAC9B4Q,MAAK,WACJ,EAAKnM,MAAMgjB,eAAe1N,GAC1BrK,YAAW,kBAAM,EAAKhK,SAAS,CAAC0d,gBAAgB,MAAS,gB,kCAM7Dnb,EAAQ7F,GAAO,IAAD,OACtBhD,EAAGG,MAAMsS,IAAI,CAAC5J,OAAQA,EAAQ7F,KAAMA,EAAMX,KAAM,MAAOsJ,KAAM,KAAK6F,MAAK,WACnE,EAAKwT,UAAU,EAAK3f,MAAMuD,mB,+BAibxB,IAAD,OACGS,EAAYD,KAAK/D,MAAjBgE,QAEFsa,EAAmBva,KAAK9D,MAAMqe,iBAC9BE,EAAgBza,KAAK9D,MAAMue,cAC3BD,EAAmBxa,KAAK9D,MAAMse,iBAC9BE,EAAyB1a,KAAK9D,MAAMwe,uBACpCC,EAAoB3a,KAAK9D,MAAMye,kBAC/BE,EAA8B7a,KAAK9D,MAAM2e,4BACzCD,EAAiB5a,KAAK9D,MAAM0e,eAE9B1a,EAAiB,KAEjBA,EADwB,WAAxB7F,KACiB,CAAC8F,UAAW,MAAOtE,OAAQ,SAE3B,CAACsE,UAAW,OAAQC,MAAO,SAGhD,IAAI8e,EAAkB,GAQtB,OANIA,EADAlf,KAAK9D,MAAMme,SAASzV,OAAS,EACd,WAAO5E,KAAK9D,MAAMme,SAASzV,OAA3B,cAAuC5E,KAAK/D,MAAM8P,cAAcnH,OAAhE,WAEA,WAAO5E,KAAK/D,MAAM8P,cAAcnH,OAAhC,WAKf,kBAAC,IAAD,KACI,yBAAKlP,MAAOkG,IACR,yBAAKlG,MAAOwK,GACVqa,EACE,kBAAC4E,GAAA,EAAD,CAAOpM,UAAU,OAAOrS,UAAWT,EAAQmf,WACvC,kBAACC,GAAA,EAAD,CACI3oB,WAAS,EACTgK,UAAWT,EAAQqf,UACnBC,YAAavf,KAAK9D,MAAMie,eACxBqF,aAAcxf,KAAK9D,MAAMke,eACzBrD,SAAU,SAACzB,GACP,EAAKpY,SAAS,CAACkd,eAAgB9E,EAAM7f,OAAOyB,WAGpD,kBAACmL,GAAA,EAAD,CAAY3B,UAAWT,EAAQwf,WAAY9oB,QAASqJ,KAAK6b,aACrD,kBAAC,KAAD,CAAM9e,KAAM2iB,KAAUnd,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,SAE5D,kBAAC0M,GAAA,EAAD,CAAY3B,UAAWT,EAAQwf,WAAY9oB,QAASqJ,KAAKkc,WACrD,kBAAC,KAAD,CAAMnf,KAAM4iB,KAAUpd,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAIhE,6BAEI,6BACI,kBAAC6b,GAAA,EAAD,CAASlc,QAAQ,SACb,yBAAKoL,UAAWT,EAAQ2f,aACtBhF,EACE,kBAACiF,GAAA,EAAD,CAAkBnqB,MAAO,CAAC+a,WAAY,QAASlO,KAAM,GAAI5M,MAAM,cAE/D,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,mBACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKyb,aACtC,kBAAC,KAAD,CAAM1e,KAAMgjB,KAAgBxd,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,WAM1E,yBAAK+K,UAAWT,EAAQ+f,gBACpB,kBAACF,GAAA,EAAD,CAASrO,MAAM,6BACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK8a,kBACtC,kBAAC,KAAD,CAAM/d,KAAMkjB,KAAoB1d,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAG1E,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,uBACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKkb,mBACtC,kBAAC,KAAD,CAAMne,KAAMmjB,KAAkB3d,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAGxE,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,0BACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKsb,WACtC,kBAAC,KAAD,CAAMve,KAAMojB,KAAsB5d,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAG5E,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,iCACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKub,YACtC,kBAAC,KAAD,CAAMxe,KAAMqjB,KAAsB7d,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAI5E,kBAAC0M,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK4c,YACtC,kBAAC,KAAD,CAAM7f,KAAMsjB,KAAmB9d,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,YAM/E8kB,EACE,6BACI,kBAACjJ,GAAA,EAAD,CAASlc,QAAQ,SACb,yBAAKoL,UAAWT,EAAQ+f,gBACpB,kBAACF,GAAA,EAAD,CAASrO,MAAM,4CACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKwc,SACtC,kBAAC,KAAD,CAAMzf,KAAMujB,KAAe/d,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAGrE,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,4CACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKsc,UACtC,kBAAC,KAAD,CAAMvf,KAAMwjB,KAAgBhe,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAGtE,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,gDACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK0c,WACtC,kBAAC,KAAD,CAAM3f,KAAMyjB,KAAiBje,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAGvE,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,6BACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKod,eACtC,kBAAC,KAAD,CAAMrgB,KAAM0jB,KAAkBle,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAGxE,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,gDACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKmc,UACtC,kBAAC,KAAD,CAAMpf,KAAM+V,KAAuBvQ,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,UAG7E,kBAACmqB,GAAA,EAAD,CAASrO,MAAM,+CACX,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK6c,YACtC,kBAAC,KAAD,CAAM9f,KAAM2jB,KAAkBne,KAAM,SAAU5M,MAAOqK,KAAK/D,MAAMtG,aAStF,KAGF,6BACI,6BACI,kBAACN,EAAA,EAAD,CACI4D,KAAK,eACLvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,OAAQ9a,MAAO,yBAA0BgrB,MAAO,SACnF,IAAI3gB,KAAK/D,MAAMuD,aAAa,MAGzC,6BACI,kBAACnK,EAAA,EAAD,CACI4D,KAAK,eACLvD,MAAO,CAACwL,SAAU,SAAUwP,YAAa,MAAO/a,MAAO,yBAA0BgrB,MAAO,UAClFzB,KAKhBtE,EACE,yBAAKllB,MAAO,CAACyK,UAAW,OAAQyP,SAAU,aACtC,kBAAClO,GAAA,EAAD,CAAgB/L,MAAM,eAE5B,MAOV,yBAAKD,MAAO,CAACmG,OAAQ,UACjB,kBAAC+kB,GAAA,EAAD,CAAgB7N,UAAWoM,MACvB,kBAAC0B,GAAA,EAAD,CAAOngB,UAAWT,EAAQ6gB,MAAOve,KAAK,SAClC,kBAACwe,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,QAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,UAGR,kBAACC,GAAA,EAAD,KACCnhB,KAAK/D,MAAM8P,cAAcrU,KAAI,SAACsa,GAC3B,IA/KTpY,EA+KewnB,GA/KfxnB,EA+K2CoY,EAAIpY,MA/KA,IAAvC,EAAKsC,MAAMme,SAAS5Q,QAAQ7P,IAgL3B,OACI,kBAAConB,GAAA,EAAD,CACIlpB,IAAG,UAAKka,EAAIvS,OAAT,YAAmBuS,EAAIpY,MAC1BynB,KAAK,SACLC,OAAK,EACLjH,SAAU+G,EACVzqB,QAAS,SAAC6G,GAAO,EAAKsf,UAAUtf,EAAGwU,IACnCuP,cAAe,SAAC/jB,GAAO,EAAKyf,gBAAgBzf,EAAGwU,IAC/CiD,aAAc,SAACzX,GAAD,OAAO,EAAKwgB,UAAUxgB,EAAGwU,IACvCwP,WAAY,SAAChkB,GAAD,OAAO,EAAK0gB,QAAQ1gB,EAAGwU,IACnCyP,YAAa,SAACjkB,GAAD,OAAO,EAAKwgB,UAAUxgB,EAAGwU,IACtC0P,UAAW,SAAClkB,GAAD,OAAO,EAAK0gB,QAAQ1gB,EAAGwU,KAElC,kBAACiP,GAAA,EAAD,CAAWlO,UAAU,KAAK4O,MAAM,OAChC,kBAACtsB,EAAA,EAAD,CAAYqL,UAAWT,EAAQ2hB,eAC1B5P,EAAIpY,OAGT,kBAACqnB,GAAA,EAAD,CAAWC,MAAM,QAAQlP,EAAI/Y,MAC7B,kBAACgoB,GAAA,EAAD,CAAWC,MAAM,Qb9hBtD,SAAqBW,GAAsB,IAAfC,EAAc,uDAAH,EAC1C,GAAc,KAAVD,EAAc,MAAO,GACzB,GAAc,IAAVA,EAAa,MAAO,UACxB,IAAME,EAAI,KACJC,EAAKF,EAAW,EAAI,EAAIA,EACxBG,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5DplB,EAAIsJ,KAAK+H,MAAM/H,KAAKnN,IAAI6oB,GAAS1b,KAAKnN,IAAI+oB,IAChD,OAAOzqB,YAAYuqB,EAAQ1b,KAAK+b,IAAIH,EAAGllB,IAAI4J,QAAQub,IAAO,IAAMC,EAAMplB,GauhBLslB,CAAYnQ,EAAIzP,eASjE,kBAACzM,EAAA,EAAD,CACIC,KAAMykB,EACNrlB,QAAS6K,KAAKqd,eAEd,kBAACrnB,EAAA,EAAD,KAAc,0CACd,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKqd,eAAtB,UAGA,kBAAC5mB,EAAA,EAAD,CAAQE,QAASqJ,KAAKsd,iBAAkB5mB,WAAS,GAAjD,QAMR,kBAACZ,EAAA,EAAD,CACIC,KAAM2kB,EACNvlB,QAAS6K,KAAKud,qBAEd,kBAACvnB,EAAA,EAAD,KAAc,0CACd,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKud,oBAAqB7mB,WAAS,GAApD,QAMR,kBAACZ,EAAA,EAAD,CACIC,KAAM4kB,GAEN,kBAAC3kB,EAAA,EAAD,uBACA,kBAACE,EAAA,EAAD,KACI,kBAAC2Z,GAAA,EAAD,6CAGA,kBAACuS,GAAA,EAAD,CACI1rB,WAAS,EACT+L,OAAO,QACPrG,GAAG,cACHimB,SAAU,SAAAC,GAAK,OAAK,EAAK5E,YAAc4E,GACvCC,WAAS,KAGjB,kBAAC/rB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAK6mB,eAA5B,UAGA,kBAAC/mB,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAK8mB,gBAA5B,QAMP5C,EAA8B,kBAAC,GAAD,CAAsB1lB,QAAS6K,KAAKmb,yBAA0BpkB,MAAOiJ,KAAKjJ,MAAOsI,OAAQ,OAAW,Y,GAxzBpIsB,iBAs1BJC,gBAtBS,SAAC1E,GACrB,MAAO,CACLnF,MAAOmF,EAAMnF,MACbqlB,eAAgBlgB,EAAMsmB,UACtBxnB,YAAakB,EAAMjB,OACnBK,UAAWY,EAAMZ,UACjBkE,aAActD,EAAMsD,aACpBuM,cAAe7P,EAAM6P,cACrBpQ,aAAcO,EAAMP,aACpB8mB,UAAWvmB,EAAMumB,cAII,SAAC5hB,GACxB,MAAO,CACH8a,cAAe,SAAC+C,GAAD,OAAS7d,EXnyBD,SAAC6d,GAC5B,MAAO,CACHzlB,KA9HoB,eA+HpBuG,aAAckf,GWgyBmBgE,CAAgBhE,KACjDO,eAAgB,SAACznB,GAAD,OAAUqJ,EX7xBF,SAACrJ,GAC7B,MAAO,CACHyB,KApIqB,gBAqIrB8S,cAAevU,GW0xBoBmrB,CAAiBnrB,KACpDuc,gBAAiB,SAACpb,GAAD,OAAUkI,EAASnF,GAAc/C,KAClDkH,eAAgB,SAAClH,GAAD,OAAUkI,EAAS7F,GAAYrC,QAIxCiI,CAA6CE,aAv3B7C,SAAAC,GAAK,MAAK,CACrB+f,MAAO,CACHxJ,SAAU,KAEdsK,cAAe,CACX1gB,SAAU,UAEd8e,eAAgB,CACZvP,WAAY,OACZC,aAAc,IAElBkP,YAAa,CACTnP,YAAa,IAEjB2O,UAAW,CACPnL,QAAS,UACT3D,QAAS,OACTsS,WAAY,SACZxiB,MAAO,KAEXkf,UAAW,CACP7O,WAAY1P,EAAME,QAAQ,GAC1B4hB,KAAM,GAEVpD,WAAY,CACRxL,QAAS,OA81B2CnT,CAAmBoZ,K,UCx6BzExkB,GAAQ,CACZ0K,MAAO,QACP6T,QAAS,kBACTrD,gBAAiB,WAGbkS,GAAc,CAClB1iB,MAAO,QACPD,UAAW,QAGP4iB,GAAsB,CAC1B5iB,UAAW,QAGP6iB,GAAa,CACjBC,eAAgB,WAChBC,WAAY,qBACZhiB,SAAU,MACVd,MAAO,QAGH+iB,GAAe,CACnBC,YAAa,QACbhjB,MAAO,OAGHijB,G,YACF,WAAYpnB,GAAQ,IAAD,8BACjB,4CAAMA,KAKRC,MAAQ,CACNonB,YAAa,EACbC,cAAe,CACbpkB,EAAG,EAAG+G,EAAG,GAEXsd,mBAAoB,CAClBrkB,GAAI,IAAK+G,EAAG,KAEdhP,MAAO,IACPusB,UAAW,EACXC,WAAY,EACZC,QAAS,EACTC,QAAS,EACTC,KAAM,EACNC,OAAQ,GApBS,EA6RnBC,kBAAoB,SAACzO,EAAO0O,GAI1B,EAAK9mB,SAAS,CAAChG,MAAO8sB,IACtB,EAAK9mB,SAAS,CAACwmB,WAAaM,EAAS,EAAKC,QAAS,EAAK/nB,MAAMynB,UAC9D,EAAKzmB,SAAS,CAACumB,UAAW,EAAKS,QAAQF,MAnStB,EAsSnB3iB,KAAO,WACL,EAAKpF,MAAM9G,WAvSM,EA0SnBgvB,OAAS,SAAC3mB,EAAG4mB,GAAQ,IAAD,EACH,EAAKloB,MAAMqnB,cAAnBpkB,EADW,EACXA,EAAG+G,EADQ,EACRA,EACV,EAAKhJ,SAAS,CACZqmB,cAAe,CACbpkB,EAAGA,EAAIilB,EAAGC,OACVne,EAAGA,EAAIke,EAAGE,WA/SG,EAoTnBC,QAAU,WACR,EAAKrnB,SAAS,CAAComB,YAAa,EAAKpnB,MAAMonB,YAAY,KArTlC,EAwTnBkB,OAAS,WACP,EAAKtnB,SAAS,CAAComB,YAAa,EAAKpnB,MAAMonB,YAAY,KAvTnD,EAAKmB,gBAAkB5T,IAAMwN,YAC7B,EAAKqG,eAAiB7T,IAAMwN,YAHX,E,iFA6BjB,IAAMsG,EAAU3kB,KAAKykB,gBAAgBG,QAC/BC,EAAO7kB,KAAKykB,gBAAgBG,QAAQpY,WAAW,MACrDqY,EAAKC,UAAU,EAAGH,EAAQ9oB,QAC1BgpB,EAAKre,MAAM,GAAI,GAEfxG,KAAK+kB,iB,2CAKL,GAA6B,OAAzB/kB,KAAK/D,MAAMX,UAKf0E,KAAK+kB,mBALL,CACE,IAAMF,EAAO7kB,KAAKykB,gBAAgBG,QAAQpY,WAAW,MACrDqY,EAAKG,UAAU,EAAG,EAAGH,EAAKrc,OAAOpI,MAAOykB,EAAKrc,OAAO3M,W,kCAM5C2M,EAAQyc,GAClB,IAAMC,EAAO1c,EAAO2c,wBACpB,MAAO,CACLhmB,EAAG8lB,EAAIG,QAAUF,EAAK7U,KACtBnK,EAAG+e,EAAII,QAAUH,EAAK9U,O,wCAIRjR,EAAG+G,EAAG9F,EAAOvE,GAC7B,IAAMgN,EAAY7I,KAAK/D,MAAMX,UAAUrE,MAAMquB,eACvCC,EAAkB,GACxBpmB,EAAIgH,KAAKC,MAAMjH,GACf+G,EAAIC,KAAKC,MAAMF,GACf,IACIsf,EAASxT,EAAKyT,EADdhoB,EAAQ,EAGZ,IAAKuU,EAAM,EAAGA,EAAMnW,EAAQmW,IAC1B,IAAKyT,EAAS,EAAGA,EAASrlB,EAAOqlB,IAAU,CAEzC,IAAMC,EAAM7c,EADZ2c,EAAyE,IAA7DxT,EAAM9L,GAAKlG,KAAK/D,MAAMX,UAAUrE,MAAM2R,MAAQ6c,EAAStmB,KAE7DwmB,EAAQ9c,EAAU2c,EAAU,GAC5BI,EAAO/c,EAAU2c,EAAU,GAC3BK,EAAQhd,EAAU2c,EAAU,GAElCD,EAAgB9nB,KAAWioB,EAC3BH,EAAgB9nB,KAAWkoB,EAC3BJ,EAAgB9nB,KAAWmoB,EAC3BL,EAAgB9nB,KAAWooB,EAG/B,OAAON,I,qCAGMpmB,EAAG+G,EAAG9F,EAAOvE,GAC1B,IAAMgN,EAAY7I,KAAK/D,MAAMX,UAAUrE,MAAMquB,eACvCC,EAAkB,GACxBpmB,EAAIgH,KAAKC,MAAMjH,GACf+G,EAAIC,KAAKC,MAAMF,GACf,IACIsf,EAASxT,EAAKyT,EADdhoB,EAAQ,EAGZ,IAAKuU,EAAM,EAAGA,EAAMnW,EAAQmW,IAC1B,IAAKyT,EAAS,EAAGA,EAASrlB,EAAOqlB,IAC/BD,GAAYxT,EAAM9L,GAAKlG,KAAK/D,MAAMX,UAAUrE,MAAM2R,MAAQ6c,EAAStmB,GACnEomB,EAAgB9nB,KAAWoL,EAAU2c,GAGzC,OAAOD,I,+BAGApmB,EAAG+G,GAcV,OAZIlG,KAAK/D,MAAMX,UAAUoL,QACnB1G,KAAK/D,MAAMX,UAAUrE,MAAMtB,MAGxBqK,KAAK8lB,kBAAkB3mB,EAAG+G,EAAG,EAAG,GAGhClG,KAAK+lB,eAAe5mB,EAAG+G,EAAG,EAAG,GAG/BlG,KAAK8lB,kBAAkB3mB,EAAG+G,EAAG,EAAG,IAE7B,K,qCAGI,IAAD,OACPjP,EAAQ+I,KAAK/D,MAAMX,UAAUrE,MACnC,GAAc,OAAVA,EAAJ,CAEA,IAAMqa,EAAgBra,EAAMqa,cAGtBqS,EAFgB1sB,EAAMoa,cAEEpa,EAAM+uB,UAC9BpC,EAAUtS,EAAcra,EAAM+uB,UAC9BC,EAAUrC,EAAQD,EAAQ,EAC1BM,EAAUgC,EA1JP,IA2JLC,EAAU/f,KAAK+H,MAAM/H,KAAK+G,IAAIyW,GAAWM,GACzCkC,EAAShgB,KAAKC,MAAMnP,EAAMqP,YAAc2d,EAAU,GAClDmC,EAASjgB,KAAKC,MAAMnP,EAAMsP,aAAe0d,GAE7CjkB,KAAK9C,SAAS,CAACymB,QAASA,IACxB3jB,KAAK9C,SAAS,CAAC0mB,QAASA,IACxB5jB,KAAKikB,QAAUA,EAyBf,IAHA,IAAIoC,EAAI,EAEJC,EAAOvZ,MAAMkZ,GAASjZ,KAAK,GACtB9G,EAAI,EAAGA,EAAIjP,EAAM0R,QAASzC,IACjC,IAAK,IAAI/G,EAAI,EAAGA,EAAIlI,EAAM2R,KAAMzJ,IAAK,CACnC,IACIonB,EADKvmB,KAAKwmB,SAASrnB,EAAG+G,GACZjP,EAAMwvB,MAAQxvB,EAAM+uB,UAClCM,EAAKC,EAAG5C,IAAY,EACpB0C,GAAKE,EAITF,GAASpvB,EAAM0R,QAAU1R,EAAM2R,KAC/B5I,KAAK9C,SAAS,CAAC2mB,KAAMwC,IAOrB,IADA,IAAIK,EAAI,EACCxgB,EAAI,EAAGA,EAAIjP,EAAM0R,QAASzC,IACjC,IAAK,IAAI/G,EAAI,EAAGA,EAAIlI,EAAM2R,KAAMzJ,IAAK,CACnC,IACIonB,EADKvmB,KAAKwmB,SAASrnB,EAAG+G,GACZjP,EAAMwvB,MAAQxvB,EAAM+uB,UAClCU,GAAKvgB,KAAK+b,IAAIqE,EAAGF,EAAG,GAExBK,EAAIvgB,KAAKwgB,KAAKD,GAAKzvB,EAAM0R,QAAU1R,EAAM2R,OACzC5I,KAAK9C,SAAS,CAAC4mB,OAAQ4C,IAGvB,IAAIxC,EAAUnX,MArNL,KAqNmBC,KAAK,GAC7B4Z,EAAM,EAEV,GAAI3C,EAAU,EAIZ,IAHA,IAAI4C,EAAU1gB,KAAKC,MAzNZ,IAyN2B6f,GAC9Ba,EAAQ,EACRjqB,EAAI,EACDA,EA5NA,KA4NY,CACjB,IAAK,IAAIkqB,EAAE,EAAGA,EAAIF,EAASE,IACzB7C,EAAQrnB,GAAKiqB,EAAQb,EAAUK,EAAKQ,GAAS,EACzCF,EAAM1C,EAAQrnB,KAAI+pB,EAAM1C,EAAQrnB,IACpCA,IAEFiqB,SAeF,IADA,IAAInP,EAAO,EACF9a,EAAE,EAAGA,EAjPP,IAiPmBA,IAAK,CAC7B,IAAK,IAAIkqB,EAAEpP,EAAMoP,EAAI5gB,KAAKC,MAAMuR,EAAKsM,MAC/B8C,GAAKd,GADoCc,IAE7C7C,EAAQrnB,IAAMypB,EAAKS,GAEjBH,EAAM1C,EAAQrnB,KAAM+pB,EAAM1C,EAAQrnB,IACtC8a,EAAOxR,KAAKC,MAAMuR,EAAKsM,GAI3BjkB,KAAKkkB,QAAUA,EAKX0C,EAjQU,IAiQU,MAAKA,GAAY,GAEzC,IAAMjC,EAAU3kB,KAAKykB,gBAAgBG,QAC/BC,EAAO7kB,KAAKykB,gBAAgBG,QAAQpY,WAAW,MACrDqY,EAAKG,UAAU,EAAG,EAAGH,EAAKrc,OAAOpI,MAAOykB,EAAKrc,OAAO3M,QAEpD8oB,EAAQtgB,iBAAiB,eAAe,SAAC4gB,GACvC,IAAM+B,EAAW,EAAKC,YAAYtC,EAASM,GAC3C,EAAK/nB,SAAS,CAACumB,UAAWS,EAAQ8C,EAAS7nB,KAC3C,IAAI8N,EAAI9G,KAAKC,MAAM4gB,EAAS7nB,EAAI,EAAK8kB,SACrC,EAAK/mB,SAAS,CAACwmB,WAAYzW,EAAE0W,OAC5B,GAGH,IAAIzsB,EAAQiP,KAAKC,OAAOigB,EAAE1C,GAASM,GACnCjkB,KAAK9C,SAAS,CAAChG,MAAOA,IACtB8I,KAAK9C,SAAS,CAACwmB,WAAY2C,IAC3BrmB,KAAK9C,SAAS,CAACumB,UAAWS,EAAQhtB,KAGlC2tB,EAAKqC,YACLrC,EAAKsC,UAAY,2BACjBtC,EAAKuC,SAASlB,EAAQC,EAAOC,EAAQ,EAAU,EAAPD,EAvR1B,KA0RdtB,EAAKqC,YACLrC,EAAKwC,YAAc,qBACnB,IAAK,IAAIxqB,EAAI,EAAGA,EA3RP,IA2RmBA,IAAK,CAC/B,IAAIyqB,EAAInhB,KAAKC,MAAO8d,EAAQrnB,GAAG+pB,EA7RnB,KA8RZ/B,EAAK0C,OAAO1qB,EAAG,GACfgoB,EAAK2C,OAAO3qB,EAAGyqB,GACfzC,EAAK4C,SAIP5C,EAAKqC,YACLrC,EAAKwC,YAAc,2BACnBxC,EAAK0C,OAAOrB,EAAQE,EAAQ,GAC5BvB,EAAK2C,OAAOtB,EAAQE,EAvSN,KAwSdvB,EAAK6C,UAAY,EACjB7C,EAAK4C,SAEL,IAAIE,EAAOzB,EAAQC,EAAOC,EACtBwB,EAAQ1B,EAAQC,EAAOC,EAIrByB,EADU7nB,KAAK0kB,eAAeE,QACfpY,WAAW,MAEhCqb,EAAKV,UAAY,UACjBU,EAAKT,SAAS,EAAG,EAAGO,EAAM,IAE1B,IAAIG,EAAMD,EAAKE,qBAAqBJ,EAAM,EAAGC,GAAOD,EAAO,EAAIA,EAAO,GAAI,GAC1EG,EAAIE,aAAa,EAAG,SACpBF,EAAIE,aAAa,EAAG,SACpBH,EAAKV,UAAYW,EACjBD,EAAKT,SAASO,EAAM,EAAGC,EAAO,O,+BAmC9B,OACE,yBAAKlyB,MAAOA,IACV,6BACE,4BACEya,IAAKnQ,KAAKykB,gBACVrkB,MAlWK,IAmWLvE,OAlWM,IAmWNnG,MAAO,CAACkb,gBAAiB,UAAWqX,OAAO,gBAG/C,yBAAKvyB,MAAOqtB,IACV,4BAAQ5S,IAAKnQ,KAAK0kB,eAAgBtkB,MAxW3B,IAwW8CvE,OAAQ,GAAInG,MAAO,CAACkb,gBAAiB,cAE5F,yBAAKlb,MAAOotB,IACV,kBAACoF,GAAA,EAAD,CACEhxB,MAAO8I,KAAK9D,MAAMhF,MAClB6f,SAAU/W,KAAK+jB,kBACftiB,kBAAgB,oBAChB9L,MAAM,YACNwyB,IAAK,EACLvB,IAAK,OAGT,6BACE,2BAAOlxB,MAAOstB,IACZ,+BACE,4BACE,wBAAIttB,MAAOytB,IAAX,QACA,wBAAIztB,MAAOytB,IAAenjB,KAAK9D,MAAMynB,SACrC,wBAAIjuB,MAAOytB,IAAX,QACA,wBAAIztB,MAAOytB,IAAenjB,KAAK9D,MAAM0nB,UAEvC,4BACE,qCACA,4BAAKtsB,WAAW0I,KAAK9D,MAAM2nB,MAAMpd,QAAQ,IACzC,wCACA,4BAAKnP,WAAW0I,KAAK9D,MAAM4nB,QAAQrd,QAAQ,KAE7C,4BACE,sCACA,4BAAKzG,KAAK9D,MAAMunB,WAChB,sCACA,4BAAKnsB,WAAW0I,KAAK9D,MAAMwnB,YAAYjd,QAAQ,a,GAxWzC9F,iBAyXTC,gBAPS,SAAC1E,GACvB,MAAO,CACL6O,eAAgB7O,EAAM6O,eACtBzP,UAAWY,EAAMZ,aAINsF,CAAyByiB,ICjalCL,GAAa,CACjBC,eAAgB,WAChB7iB,MAAO,QACPvE,OAAQ,SAGJsnB,GAAe,CACnB/iB,MAAO,OACPvE,OAAQ,OACR6T,OAAQ,mBA8EK0Y,G,YA1EX,WAAYnsB,GAAQ,IAAD,8BACjB,4CAAMA,KAYRosB,UAAY,WAIV,IAHA,IAAIrW,EAAM,EAAK9V,MAAM8V,IACjBsW,EAAM,EAAKpsB,MAAMosB,IACjB1f,EAAO,EAAK2f,SAAS3D,QAAQhc,KACxB/L,EAAE,EAAGA,GAAKmV,EAAKnV,IACtB,IAAI,IAAIkqB,EAAE,EAAGA,GAAKuB,EAAKvB,IACrBne,EAAK/L,GAAG2rB,MAAMzB,GAAG0B,QAAU,WAnBd,EAwBnBC,UAAY,SAAClrB,GACX,IAAIwU,EAAMxU,EAAE/H,OAAOkzB,WAAWC,SAC1BN,EAAM9qB,EAAE/H,OAAOozB,UAEnB,EAAK3rB,SAAS,CAAC8U,IAAKA,EAAKsW,IAAKA,IAG9B,IADA,IAAI1f,EAAO,EAAK2f,SAAS3D,QAAQhc,KACxB/L,EAAE,EAAGA,GAAK,EAAGA,IACpB,IAAI,IAAIkqB,EAAE,EAAGA,GAAK,EAAGA,IACnBne,EAAK/L,GAAG2rB,MAAMzB,GAAG0B,QAAU,UAG/B,IAAK,IAAI5rB,EAAE,EAAGA,GAAKmV,EAAKnV,IACtB,IAAI,IAAIkqB,EAAE,EAAGA,GAAKuB,EAAKvB,IACrBne,EAAK/L,GAAG2rB,MAAMzB,GAAG0B,QAAU,UAG/B,EAAKxsB,MAAM8a,SAAS/E,EAAI,EAAGsW,EAAI,IAvC/B,EAAKC,SAAW1X,IAAMwN,YACtB,EAAKniB,MAAQ,CACX8V,IAAK,EAAK/V,MAAM+V,IAChBsW,IAAK,EAAKrsB,MAAMqsB,KALD,E,iFAUjBtoB,KAAKqoB,c,oCAkCQ,IAAD,OAEZ,MADa,CAAC,GAAI,GAAI,GAAI,IAEnB3wB,KAAI,SAACsa,EAAKnV,GACb,OACE,wBAAI/E,IAAG,UAAK+E,IACT,wBAAInH,MAAOytB,GAAcxsB,QAAS,EAAK+xB,YACvC,wBAAIhzB,MAAOytB,GAAcxsB,QAAS,EAAK+xB,YACvC,wBAAIhzB,MAAOytB,GAAcxsB,QAAS,EAAK+xB,YACvC,wBAAIhzB,MAAOytB,GAAcxsB,QAAS,EAAK+xB,kB,+BAQhD,OACI,6BACE,2BAAOhzB,MAAOstB,GAAY7S,IAAKnQ,KAAKuoB,UAClC,+BACGvoB,KAAK8oB,qB,GAlEGnoB,iB,0CCQnBooB,G,YAEF,WAAY9sB,GAAQ,IAAD,8BACf,4CAAMA,KAKVC,MAAQ,CACJ8sB,gBAAgB,EAChBC,kBAAkB,GARH,EAWnBC,YAAc,WACV,EAAKhsB,SAAS,CAAE8rB,gBAAgB,KAZjB,EAenBG,YAAc,WACV,EAAKjsB,SAAS,CAAE8rB,gBAAgB,KAhBjB,EAmBnBI,cAAgB,WACZ,EAAKlsB,SAAS,CAAE+rB,kBAAkB,KApBnB,EAuBnBI,cAAgB,WACZ,EAAKnsB,SAAS,CAAE+rB,kBAAkB,KAxBnB,EA2BnBK,mBAAqB,SAAAhU,GACjB,EAAKpY,SAAS,CAAE4J,KAAMwO,EAAM7f,OAAOyB,SA5BpB,EA+BnBqyB,YAAc,SAAC9rB,GACX,EAAK0rB,cACL,EAAKltB,MAAMR,aAAagC,GAAOqJ,KAAO,EAAK0iB,UAAUtyB,OAjCtC,EAoCnBuyB,cAAgB,SAAChsB,GACb,EAAK4rB,gBACL,EAAKptB,MAAMytB,WAAWjsB,IAtCP,EAyCnBksB,OAAS,WACL,EAAKT,eA1CU,EA6CnBU,SAAW,WACP,EAAKR,iBA5CL,EAAKI,UAAY3Y,IAAMwN,YAFR,E,sEAiDT,IAAD,OACGpe,EAAYD,KAAK/D,MAAjBgE,QAEFpI,EAAOmI,KAAK/D,MAAMpE,KACpB4F,EAAQuC,KAAK/D,MAAMwB,MACnBosB,EAAQ,GACRC,EAAQ,GAEZ,OAAQjyB,EAAKwD,MACT,IAAK,SACDwuB,EAAK,UAAMhyB,EAAKV,KAAKyN,OAAO6B,QAAQ,GAA/B,YAAqC5O,EAAKV,KAAK4yB,MACpDD,EAAQjyB,EAAKiP,KACb,MACJ,IAAK,QACD+iB,EAAK,UAAMhyB,EAAKV,KAAK6yB,OAAhB,SACLF,EAAQjyB,EAAKiP,KACb,MACJ,IAAK,gBAQL,IAAK,eACD+iB,EAAQ,6BACI,oCAAUhyB,EAAKV,KAAK8yB,YAAYC,KAAKzjB,QAAQ,GAA7C,YACA,oCAAU5O,EAAKV,KAAK8yB,YAAYpG,KAAKpd,QAAQ,GAA7C,IAAkD5O,EAAKV,KAAK4yB,KAA5D,KACA,qCAAWlyB,EAAKV,KAAK8yB,YAAYnG,OAAOrd,QAAQ,GAAhD,IAAqD5O,EAAKV,KAAK4yB,KAA/D,MAEZD,EAAQjyB,EAAKiP,KACb,MACJ,IAAK,cAGD+iB,EAAQ,6BACI,oCAAUhyB,EAAKV,KAAK+yB,KAAKzjB,QAAQ,GAAjC,YACA,oCAAU5O,EAAKV,KAAKgzB,WAAWtG,KAAKpd,QAAQ,GAA5C,IAAiD5O,EAAKV,KAAK4yB,KAA3D,KACA,qCAAWlyB,EAAKV,KAAKgzB,WAAWrG,OAAOrd,QAAQ,GAA/C,IAAoD5O,EAAKV,KAAK4yB,KAA9D,MAEZD,EAAQjyB,EAAKiP,KAOrB,OACI,6BACI,kBAAC1Q,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAc4J,QAAS,CAAC3J,QAAQ2J,EAAQK,cAAehK,QAASuzB,EAAOtzB,UAAWuzB,IAClF,kBAACtY,GAAA,EAAD,KACI,kBAACnP,GAAA,EAAD,CAAY+nB,KAAK,MAAMzzB,QAAS,kBAAM,EAAKgzB,OAAOlsB,KAC9C,kBAAC,KAAD,OAEJ,kBAAC4E,GAAA,EAAD,CAAY+nB,KAAK,MAAMzzB,QAAS,kBAAM,EAAKizB,SAASnsB,KAChD,kBAAC,KAAD,SAKVuC,KAAK9D,MAAM8sB,eACT,kBAAClzB,EAAA,EAAD,CACIC,KAAMiK,KAAK9D,MAAM8sB,eACjB7zB,QAAS6K,KAAKmpB,YACd1nB,kBAAgB,qBAEhB,kBAACzL,EAAA,EAAD,CAAaoG,GAAG,qBAAqB,yBACrC,kBAAClG,EAAA,EAAD,KACI,kBAACksB,GAAA,EAAD,CACIjS,IAAI,YACJzZ,WAAS,EACT+L,OAAO,QACPrG,GAAG,OACHmmB,WAAS,EACT/C,aAAcxf,KAAK/D,MAAMR,aAAagC,GAAOqJ,KAC7Cub,SAAU,SAAAC,GAAK,OAAK,EAAKkH,UAAYlH,MAG7C,kBAAC9rB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKmpB,aAAtB,UAGA,kBAAC1yB,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAK4yB,YAAY9rB,IAAQ/G,WAAS,GAAzD,QAKV,KAEF,kBAACZ,EAAA,EAAD,CACIC,KAAMiK,KAAK9D,MAAM+sB,iBACjB9zB,QAAS6K,KAAKmpB,YACd1nB,kBAAgB,sBAEhB,kBAACzL,EAAA,EAAD,CAAaoG,GAAG,sBAAsB,2CACtC,kBAAC5F,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKqpB,eAAtB,UAGA,kBAAC5yB,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAK8yB,cAAchsB,IAAQ/G,WAAS,GAA3D,a,GAxJEiK,iBAyKXC,gBAPS,SAAC1E,GACrB,MAAO,CACHT,aAAcS,EAAMT,gBAKbmF,CAAyBE,aA/KzB,SAAAC,GAAK,MAAK,CACrBT,aAAa,CACTY,SAAS,YA6KuBJ,CAAmBioB,KCvLrDsB,G,2MAEJnuB,MAAQ,CACNouB,wBAAwB,G,EAG1BC,oBAAsB,WACpB,EAAKrtB,SAAS,CAAEotB,wBAAwB,K,EAG1CE,oBAAsB,WAClB,EAAKttB,SAAS,CAAEotB,wBAAwB,K,EAG5CG,uBAAyB,WACvB,EAAKD,sBACL,EAAK9V,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,gB,wEAGjD,IAAD,OAGP,OACE,6BAEE,6BACgC,OAA5BnI,KAAK/D,MAAMR,aACTuE,KAAK/D,MAAMR,aAAa/D,KAAI,SAACG,EAAM4F,GAC/B,OAAO,kBAAC,GAAD,CAAa5F,KAAMA,EAAM4F,MAAOA,EAAOisB,WAAY,EAAKztB,MAAMytB,WAAY5xB,IAAK2F,OAE1F,MAGN,kBAAC3H,EAAA,EAAD,CACIC,KAAMiK,KAAK9D,MAAMouB,uBACjBn1B,QAAS6K,KAAKwqB,oBACd/oB,kBAAgB,sBAEhB,kBAACzL,EAAA,EAAD,CAAaoG,GAAG,sBAAsB,gDACtC,kBAAC5F,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKwqB,qBAAtB,UAGA,kBAAC/zB,EAAA,EAAD,CAAQE,QAASqJ,KAAKyqB,uBAAwB/zB,WAAS,GAAvD,a,GA3CWiK,iBA6DZC,gBANS,SAAC1E,GACvB,MAAO,CACLT,aAAcS,EAAMT,gBAITmF,CAAyBypB,I,qGCpClCK,GAAYC,cAAW,SAAA5pB,GAAK,MAAK,CACrC6pB,OAAQ,CACNhb,SAAU,YAEZ8G,YAAa,CACXjU,OAAQ1B,EAAME,QAAQ,IAExB4pB,UAAW,CACT3pB,SAAU,UAEZ4pB,aAAc,CACZvoB,KAAM,SAERkP,MAAO,CACLhB,WAAY1P,EAAME,QAAQ,GAC1B4hB,KAAM,EACN3hB,SAAU,cA8JC6pB,GAtJE,SAAC,GAAiB,IAAf51B,EAAc,EAAdA,QAEd4oB,ElB+QC,WACH,IAAIA,EAAS/jB,aAAaC,QC1UC,UD+U3B,OAJe,OAAX8jB,IACFA,EAAS,MACT/jB,aAAaE,QC7UY,SD6Ua6jB,IAEjCA,EkBrRIiN,GACTjxB,EAAWD,IACX6X,ElBuSC,WACH,IAAIA,EAAW3X,aAAaC,QClWE,YDuW9B,OAJiB,OAAb0X,IACFA,EAAW,OACX3X,aAAaE,QCrWe,WDqWayX,IAEpCA,EkB7SMsZ,GACX7wB,EAAUD,IACV+wB,EAAS7wB,KACT8wB,EAAe1wB,KACf2wB,EAAmB1wB,KAsCjBuF,EAAUyqB,KA9CgB,EAgDN7Z,IAAMwa,SAAS,CACvCtN,OAAQA,EACRhkB,SAAUA,EACV4X,SAAUA,EACVvX,QAASA,EACT8wB,OAAQA,EACRC,aAAcA,EACdC,iBAAkBA,IAvDY,oBAgDzBlvB,EAhDyB,KAgDlBgB,EAhDkB,KA0DhC,OACE,kBAACpH,EAAA,EAAD,CAAQw1B,YAAU,EAACv1B,MAAM,EAAMZ,QAASA,GAAxC,IACE,kBAACo2B,GAAA,EAAD,CAAQ7qB,UAAWT,EAAQ2qB,OAAQY,UAAW,GAC5C,kBAACha,GAAA,EAAD,CAASlc,QAAQ,SACf,kBAAC+M,GAAA,EAAD,CAAY+nB,KAAK,QAAQz0B,MAAM,UAAUgB,QAASxB,EAASs2B,aAAW,SACpE,kBAAC,KAAD,OAEF,kBAACp2B,EAAA,EAAD,CAAYC,QAAQ,KAAKoL,UAAWT,EAAQwR,OAA5C,cAKJ,kBAAC,IAAD,KACA,6BACE,6BACA,kBAACgF,GAAA,EAAD,CAAa1D,UAAU,WAAWrS,UAAWT,EAAQyW,aACnD,kBAACgV,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAAS3vB,EAAM9B,QACf2c,SAnDc,SAAAzB,GlBsSvB,IAA4Bpe,EkBrS/BgG,EAAS,gBAAKhB,EAAN,CAAa,QAAWoZ,EAAM7f,OAAOo2B,WlBqSd30B,EkBpSZoe,EAAM7f,OAAOo2B,QlBqShC7xB,aAAaE,QCvXe,UDuXWhD,EAAQ,IAAM,MkBnPzCA,MAAM,UACNqL,KAAK,UAGTupB,MAAM,+BAIV,6BACA,kBAACrV,GAAA,EAAD,CAAa1D,UAAU,WAAWrS,UAAWT,EAAQyW,aACnD,kBAACqV,GAAA,EAAD,CAAWhZ,UAAU,SAASrS,UAAWT,EAAQ4qB,WAAjD,kCACA,kBAACmB,GAAA,EAAD,CAAYzpB,KAAK,QAAQkpB,aAAW,aAAa7xB,KAAK,aAAa1C,MAAOgF,EAAMgvB,OAAQnU,SA1DrE,SAAAzB,GlB2TtB,IAA2Bpe,EkB1T9BgG,EAAS,gBAAKhB,EAAN,CAAa,OAAUoZ,EAAM7f,OAAOyB,SlB0TdA,EkBzTZoe,EAAM7f,OAAOyB,MlB0T/B8C,aAAaE,QC/Yc,SD+YWhD,KkBjQ9B,kBAACw0B,GAAA,EAAD,CAAkBx0B,MAAM,OAAOy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,SACtE,kBAACJ,GAAA,EAAD,CAAkBx0B,MAAM,QAAQy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,UACvE,kBAACJ,GAAA,EAAD,CAAkBx0B,MAAM,SAASy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,cAI5E,6BACA,kBAACrV,GAAA,EAAD,CAAa1D,UAAU,WAAWrS,UAAWT,EAAQyW,aACnD,kBAACqV,GAAA,EAAD,CAAWhZ,UAAU,SAASrS,UAAWT,EAAQ4qB,WAAjD,6BACA,kBAACmB,GAAA,EAAD,CAAYzpB,KAAK,QAAQkpB,aAAW,WAAW7xB,KAAK,WAAW1C,MAAOgF,EAAMivB,aAAcpU,SA/DjE,SAAAzB,GlBmU5B,IAAiCpe,EkBlUpCgG,EAAS,gBAAKhB,EAAN,CAAa,aAAgBoZ,EAAM7f,OAAOyB,SlBkUdA,EkBjUZoe,EAAM7f,OAAOyB,MlBkUrC8C,aAAaE,QC3ZoB,eD2ZWhD,KkBpQpC,kBAACw0B,GAAA,EAAD,CAAkBx0B,MAAM,OAAOy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,SACtE,kBAACJ,GAAA,EAAD,CAAkBx0B,MAAM,QAAQy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,UACvE,kBAACJ,GAAA,EAAD,CAAkBx0B,MAAM,SAASy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,cAI5E,6BACA,kBAACrV,GAAA,EAAD,CAAa1D,UAAU,WAAWrS,UAAWT,EAAQyW,aACnD,kBAACqV,GAAA,EAAD,CAAWhZ,UAAU,SAASrS,UAAWT,EAAQ4qB,WAAjD,uBACA,kBAACmB,GAAA,EAAD,CAAYP,aAAW,SAAS7xB,KAAK,SAAS1C,MAAOgF,EAAM6hB,OAAQhH,SAlGhD,SAAAzB,GlB8QtB,IAA2Bpe,EkB7Q9BgG,EAAS,gBAAKhB,EAAN,CAAa,OAAUoZ,EAAM7f,OAAOyB,SlB6QdA,EkB5QZoe,EAAM7f,OAAOyB,MlB6Q/B8C,aAAaE,QCnVc,SDmVWhD,KkB5K9B,kBAACw0B,GAAA,EAAD,CAAkBx0B,MAAM,OAAOy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,SACtE,kBAACJ,GAAA,EAAD,CAAkBx0B,MAAM,MAAMy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,WAIzE,6BACA,kBAACrV,GAAA,EAAD,CAAa1D,UAAU,WAAWrS,UAAWT,EAAQyW,aACnD,kBAACqV,GAAA,EAAD,CAAWhZ,UAAU,SAASrS,UAAWT,EAAQ4qB,WAAjD,yBACA,kBAACmB,GAAA,EAAD,CAAYP,aAAW,WAAW7xB,KAAK,WAAW1C,MAAOgF,EAAMnC,SAAUgd,SAtGpD,SAAAzB,GlBsRxB,IAA6Bpe,EkBrRhCgG,EAAS,gBAAKhB,EAAN,CAAa,SAAYoZ,EAAM7f,OAAOyB,SlBqRdA,EkBpRZoe,EAAM7f,OAAOyB,MlBqRjC8C,aAAaE,QC/VgB,WD+VWhD,KkBhLhC,kBAACw0B,GAAA,EAAD,CAAkBx0B,MAAM,QAAQy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,sBACvE,kBAACJ,GAAA,EAAD,CAAkBx0B,MAAM,UAAUy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,2BAI7E,6BACA,kBAACrV,GAAA,EAAD,CAAa1D,UAAU,WAAWrS,UAAWT,EAAQyW,aACnD,kBAACqV,GAAA,EAAD,CAAWhZ,UAAU,SAASrS,UAAWT,EAAQ4qB,WAAjD,2BACA,kBAACmB,GAAA,EAAD,CAAYP,aAAW,WAAW7xB,KAAK,WAAW1C,MAAOya,EAAUoF,SA1G9C,SAAAzB,GlB8RxB,IAA8Bpe,EkB7RjCgG,EAAS,gBAAKhB,EAAN,CAAa,SAAYoZ,EAAM7f,OAAOyB,SlB6RbA,EkB5RZoe,EAAM7f,OAAOyB,MlB6RlC8C,aAAaE,QC3WiB,WD2WWhD,KkBpLjC,kBAACw0B,GAAA,EAAD,CAAkBx0B,MAAM,OAAOy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,SACtE,kBAACJ,GAAA,EAAD,CAAkBx0B,MAAM,MAAMy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,WAIzE,6BACA,kBAACrV,GAAA,EAAD,CAAa1D,UAAU,WAAWrS,UAAWT,EAAQyW,aACnD,kBAACqV,GAAA,EAAD,CAAWhZ,UAAU,SAASrS,UAAWT,EAAQ4qB,WAAjD,6BACA,kBAACmB,GAAA,EAAD,CAAYP,aAAW,mBAAmB7xB,KAAK,mBAAmB1C,MAAOk0B,EAAkBrU,SA/F9D,SAAAzB,GlB2UhC,IAAqCpe,EkB1UxCgG,EAAS,gBAAKhB,EAAN,CAAa,iBAAoBoZ,EAAM7f,OAAOyB,SlB0UdA,EkBzUZoe,EAAM7f,OAAOyB,MlB0UzC8C,aAAaE,QCvawB,mBDuaWhD,KkB5OxC,kBAACw0B,GAAA,EAAD,CAAkBx0B,MAAM,KAAKy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,wCACpE,kBAACJ,GAAA,EAAD,CAAkBx0B,MAAM,iBAAiBy0B,QAAS,kBAACM,GAAA,EAAD,CAAO1pB,KAAK,UAAYupB,MAAM,yC,8ElBqD5E,OADF9xB,aAAaC,QAAQ,0BAE3BlB,QAAQC,IAAM,cmBxHtB,IAEIkzB,GAAW,KAwFTC,G,YAEJ,WAAYlwB,GAAQ,IAAD,uBACjB,4CAAMA,KAgCRC,MAAQ,CACNkwB,eAAgB,KAChBC,UAAU,EACVC,eAAe,EACfC,WAAW,EACXC,SAAS,EACTC,YAAa,GACbC,aAAc,GACdC,iBAAiB,EACjBC,eAAe,EACfC,iBAAiB,EACjBC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChB3C,wBAAwB,EACxB4C,cAAc,EACdC,iBAAiB,EACjBC,oBAAoB,EACpBC,sBAAsB,EACtBC,uBAAuB,EACvBzS,6BAA6B,EAC7B0S,UAAW,EACX3f,WAAY,EACZlD,SAAU,EACV8iB,wBAAwB,EACxBC,uBAAuB,EACvBC,sBAAsB,EACtBC,mBAAmB,EACnBC,oBAAoB,EACpBC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,GAjEC,EAyEnBtZ,aAAe,SAAChX,GACd,OACE,kBAAC,GAAD,CACE4R,OAAQ,SAACc,GAAS,EAAKuE,iBAAiBjX,GAAS0S,GACjD1S,MAAOA,EACP0K,QAAS,SAAAgI,GAAG,OAAK,EAAKhI,QAAUgI,GAChCzD,WAAY,SAAAyD,GAAG,OAAK,EAAKzD,WAAayD,GACtC9K,cAAe,EAAKA,cACpBjL,SAAS,EACToV,SAAS,EACThK,IAAI,YAnFS,EAwFnBH,cAAgB,aAxFG,EAwGnBsP,gBAAkB,SAAClX,GACjB,OAAO,EAAKiX,iBAAiBjX,IAzGZ,EA4GnBmX,aAAe,SAACnX,GACd,OAAO,EAAKoX,aAAapX,IA7GR,EAgHnBuwB,mBAAqB,WACnB,OAAO,EAAKtZ,iBAAiB,EAAKzY,MAAM8O,iBAjHvB,EAyHnBkjB,kBAAoB,SAACC,GAEnB,GAAIA,EAActpB,OAAS,EACzB,EAAK7N,MAAQm3B,EACb,EAAKC,aAAa,EAAG,GACrB,EAAKvoB,SAAW,GAChB,EAAK+H,OAAS,GACd,EAAKzQ,SAAS,CAAC0Q,WAAY,EACZlD,SAAU,EACVgjB,sBAAsB,EACtBC,mBAAmB,EACnBC,oBAAoB,EACpBC,iBAAiB,IAAQ,WACvB,EAAK3wB,SAAS,CAAC2d,6BAA6B,WAExD,CACL,IAAMliB,EAAOu1B,EAAc,GACT,iCAAdv1B,EAAKM,MAAyD,oBAAdN,EAAKM,MACvD,EAAKN,KAAOA,EACZ,EAAKH,IAAM,KACX,EAAK0E,SAAS,CAACmwB,sBAAsB,MAErC,EAAKnwB,SAAS,CAAC0Q,WAAY,EAAGlD,SAAU,IACxC,EAAKzO,MAAMmyB,kBAAkBz1B,GAC7B,EAAK+b,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,SACzD,EAAKuM,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,cAAexP,MAlJ3D,EAuJnB01B,oBAAsB,SAACv1B,GACrB,EAAK4b,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,SACzD,EAAKuM,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,gBAAiBrP,IAzJzD,EA4JnBw1B,gBAAkB,SAAC7wB,GAIjB,EAAKiX,iBAAiB,EAAKzY,MAAM8O,gBAAgB6C,WAAa,EAAK1R,MAAM0R,WAEzE,InBzJ0BhR,EmByJpB8wB,EAAuB,EAAKxxB,MAAMwxB,qBAClCE,EAAqB,EAAK1xB,MAAM0xB,mBAChCD,EAAoB,EAAKzxB,MAAMyxB,kBAC/BE,EAAkB,EAAK3xB,MAAM2xB,gBAC7B1f,EAAQ,EAAKpG,mBAEf2lB,EACgC,IAA9B,EAAKzxB,MAAM8O,eACb,EAAK2J,iBAAiB,GAAGvM,QAAQ,YAAa1K,GAEP,IAA9B,EAAKxB,MAAM8O,eAElB,EAAK2J,iBAAiB,GAAGlG,iBAAiB,EAAKkG,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,SAO3D,IAA9B,EAAKzR,MAAM8O,gBAElB,EAAK2J,iBAAiB,GAAGjH,iBAAiB,EAAKiH,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,SnB7K1F,QADc9Q,EmBuLN,EAAK8Q,enBtLGrW,IAARuF,GAAqBmQ,MAAMwhB,QAAQ3xB,IAAuB,kBAARA,GAGpB,IAA3CyQ,OAAOmhB,oBAAoB5xB,GAAKgI,OmBoLnC,EAAK8P,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,YAAa1K,GAClD,aAAV0Q,GAAwByf,GACrB,UAAVzf,GAAqB0f,GACX,YAAV1f,GAAuBwf,EAC1B,EAAKjZ,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,YAAa1K,GACrD,aAAV0Q,GAAwB0f,EAC/B,EAAKnZ,iBAAiB,EAAKzY,MAAM8O,gBAAgByD,iBAAiB,EAAKkG,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,SACvG,aAAVS,GAAwBwf,EAC/B,EAAKjZ,iBAAiB,EAAKzY,MAAM8O,gBAAgB0C,iBAAiB,EAAKiH,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,SACvG,UAAVS,GAAqByf,EAC5B,EAAKlZ,iBAAiB,EAAKzY,MAAM8O,gBAAgB0C,iBAAiB,EAAKiH,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,SACvG,UAAVS,GAAqBwf,EAC5B,EAAKjZ,iBAAiB,EAAKzY,MAAM8O,gBAAgByD,iBAAiB,EAAKkG,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,SACvG,YAAVS,GAAuByf,EAC9B,EAAKlZ,iBAAiB,EAAKzY,MAAM8O,gBAAgB0C,iBAAiB,EAAKiH,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,SACvG,YAAVS,GAAuB0f,EAC9B,EAAKnZ,iBAAiB,EAAKzY,MAAM8O,gBAAgByD,iBAAiB,EAAKkG,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,SAExH,EAAKgH,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,YAAa1K,IAnNzD,EAwNnBgxB,uBAAyB,SAAC91B,GACxB,EAAK+b,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,SACzD,EAAKuM,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,cAAexP,IA1NvD,EAqOnB+1B,iBAAmB,SAAC33B,GAElB,EAAK8mB,OAAS9mB,EAAM,GAAG43B,mBAAmBvwB,MAAM,KAAK,GAErD,IAAK,IAAIvB,EAAE,EAAGA,EAAI9F,EAAM6N,OAAQ/H,IAC9B,EAAK9F,MAAMkB,KAAKlB,EAAM8F,IAExB,EAAKsxB,aAAa,EAAG,GACrB,EAAKvoB,SAAW,GAChB,EAAK+H,OAAS,GAKd,EAAKzQ,SAAS,CAAC0Q,WAAY,EACXlD,SAAU,EACVgjB,sBAAsB,EACtBC,mBAAmB,EACnBC,oBAAoB,EACpBC,iBAAiB,IAAQ,eAGzC,EAAK3wB,SAAS,CAAC2d,6BAA6B,KA3P3B,EA8PnB+T,mBAAqB,SAAC73B,GACpB,EAAKmG,SAAS,CAAEiwB,iBAAiB,IAAS,WAGxC,IAFA,IAAI/tB,EAAW,KACXyvB,EAAY,GACPhyB,EAAE,EAAGA,EAAI9F,EAAM6N,OAAQ/H,IAC1B9F,EAAM8F,GAAG8xB,mBAAmB/1B,SAAS,YACvCwG,EAAWrI,EAAM8F,GAEjBgyB,EAAU52B,KAAKlB,EAAM8F,IAGR,OAAbuC,GACF,EAAKnD,MAAM6yB,iBAAiB,CAACzvB,OAAQ,QAASD,SAAUA,EAAUrI,MAAO83B,IACzE,EAAKE,kBAEL,EAAK7xB,SAAS,CAACwvB,aAAc,UAAWD,YAAa,6DAA6D,WAChH,EAAKvvB,SAAS,CAAE6wB,gBAAgB,WA9QrB,EAoRnBiB,qBAAuB,SAACl2B,GACtB,EAAKmD,MAAM6yB,iBAAiB,CAACzvB,OAAQ,KAAMD,SAAUtG,EAAQ/B,MAAO,KACpE,EAAKg4B,kBAtRY,EAgSnBE,WAAa,WACX1tB,OAAO2tB,SAAS,EAAG,IAjSF,EAqSnBC,eAAiB,WACf,IAAMxC,EAAkB,EAAKzwB,MAAMywB,gBAEP,SAAxBtyB,KACF,EAAK6C,SAAS,CAAEyvB,iBAAkBA,EAAiBS,oBAAoB,IAEvE,EAAKlwB,SAAS,CAAEyvB,iBAAkBA,KA3SnB,EA+SnByC,aAAe,WACb,EAAKlyB,SAAS,CAAEyvB,iBAAiB,KAhThB,EAmTnB0C,aAAe,WACb,EAAKnyB,SAAS,CAAEyvB,iBAAiB,KApThB,EAuTnB2C,iBAAmB,SAAC3C,GAClB,EAAKzvB,SAAS,CAAEyvB,qBAxTC,EA4TnB4C,kBAAoB,WAClB,GAA4B,SAAxBl1B,KACF,EAAK6C,SAAS,CAACyvB,iBAAiB,EAAOS,oBAAqB,EAAKlxB,MAAMkxB,yBAClE,CAEL,IAAM5d,GAAW,EAAKtT,MAAMkxB,mBAC5B,EAAKlwB,SAAS,CAAEkwB,mBAAoB5d,IAChCA,GACF,EAAKtS,SAAS,CACZ+vB,gBAAgB,EAChBL,eAAe,EACfI,gBAAgB,EAChBG,iBAAiB,EACjBW,iBAAiB,MAzUN,EA8UnB0B,eAAiB,WACf,IAAMhgB,GAAW,EAAKtT,MAAM4xB,gBAC5B,EAAK5wB,SAAS,CAAE4wB,gBAAiBte,IAC7BA,GACF,EAAKtS,SAAS,CACZ+vB,gBAAgB,EAChBL,eAAe,EACfI,gBAAgB,EAChBG,iBAAiB,EACjBC,oBAAoB,KAvVP,EA2VnBqC,aAAe,WACb,IAAMjgB,GAAW,EAAKtT,MAAM0wB,cAC5B,EAAK1vB,SAAS,CAAE0vB,cAAepd,IAC3BA,GACF,EAAKtS,SAAS,CACZ+vB,gBAAgB,EAChBD,gBAAgB,EAChBG,iBAAiB,EACjBC,oBAAoB,EACpBU,iBAAiB,KApWJ,EAyWnB4B,cAAgB,WACd,IAAMlgB,GAAW,EAAKtT,MAAM8wB,eAC5B,EAAK9vB,SAAS,CAAE8vB,eAAgBxd,IAC5BA,GACF,EAAKtS,SAAS,CACZ+vB,gBAAgB,EAChBL,eAAe,EACfO,iBAAiB,EACjBC,oBAAoB,EACpBU,iBAAiB,KAlXJ,EAsXnB6B,YAAc,WACZ,EAAKjb,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,cAvXxC,EA0XnBynB,cAAgB,WACd,IAAMpgB,GAAW,EAAKtT,MAAM+wB,eAC5B,EAAK/vB,SAAS,CAAE+vB,eAAgBzd,IAC5BA,GACF,EAAKtS,SAAS,CACZ8vB,gBAAgB,EAChBJ,eAAe,EACfO,iBAAiB,EACjBC,oBAAoB,EACpBU,iBAAiB,KAnYJ,EAuYnB+B,YAAc,WACZ,EAAK3yB,SAAS,CAAE+vB,gBAAgB,KAxYf,EA2YnB6C,wBAA0B,SAAC7C,GACzB,EAAK/vB,SAAS,CAAE+vB,oBA5YC,EAgZnB8B,eAAiB,WACf,IAAMvf,GAAW,EAAKtT,MAAMixB,gBAC5B,EAAKjwB,SAAS,CAAEiwB,gBAAiB3d,IAC7BA,GACF,EAAKtS,SAAS,CACZ+vB,gBAAgB,EAChBD,gBAAgB,EAChBJ,eAAe,EACfQ,oBAAoB,KAxZP,EA6ZnB2C,aAAe,WACb,EAAKxF,uBA9ZY,EAianBA,oBAAsB,WACpB,EAAKrtB,SAAS,CAAEotB,wBAAwB,KAlavB,EAqanBE,oBAAsB,WAClB,EAAKttB,SAAS,CAAEotB,wBAAwB,KAtazB,EAyanBG,uBAAyB,WACvB,EAAKD,sBACL,EAAK9V,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,gBA3axC,EA+anB6nB,kBAAoB,WAClB,EAAK9yB,SAAS,CAAEmwB,sBAAsB,KAhbrB,EAmbnB4C,kBAAoB,WAChB,EAAK/yB,SAAS,CAAEmwB,sBAAsB,KApbvB,EAubnB6C,qBAAuB,WACrB,EAAKD,oBACL,EAAK/yB,SAAS,CAAEkwB,oBAAoB,IAAQ,WACzB,OAAb,EAAK50B,IACP,EAAK0E,SAAS,CAACowB,uBAAuB,IAEtC,EAAKrxB,MAAM8X,gBAAgB,EAAKpb,UA7bnB,EAmcnBw3B,UAAY,WACV,EAAKjzB,SAAS,CAAEgwB,cAAe,EAAKhxB,MAAMgxB,gBApczB,EAucnBkD,aAAe,WACb,EAAKlzB,SAAS,CACZyvB,iBAAiB,EACjBE,iBAAiB,EACjBC,gBAAgB,EAChBld,SAAU,WA5cK,EAgdnBygB,aAAe,WACb,EAAKnzB,SAAS,CACZyvB,iBAAiB,EACjBE,iBAAiB,EACjBC,gBAAgB,EAChBM,oBAAoB,EACpBD,iBAAiB,KAtdF,EA0dnBmD,yBAA2B,SAACzD,GAC1B,EAAK3vB,SAAS,CAAE2vB,qBA3dC,EA8dnB0D,mBAAqB,WACnB,EAAKrzB,SAAS,CAAEowB,uBAAuB,KA/dtB,EAkenBnS,yBAA2B,WACzB,EAAKje,SAAS,CAAE2d,6BAA6B,IAC7C,EAAK2V,8BApeY,EAuenBA,2BAA6B,WAG3B,GAAyB,OAArB,EAAKv0B,MAAMlF,MAAgB,CAC7B,EAAKo3B,aAAa,EAAG,GAErB,EAAKzZ,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,YAAa,GAEtE,IAAMuC,EAAW,EAAKzO,MAAMlF,MAAM6N,OAElC,EAAK1H,SAAS,CAACwN,SAAUA,IAAW,eAMpC,IAAM+lB,EAAcl5B,EAAQ,EAAK0E,MAAMlF,OAAO,SAAAqU,GAAC,OAAIA,EAAE3O,QAAQ4X,eACvDqc,EAAW,YAAOD,EAAYnjB,QAC9B7Q,EAAU,CACdjF,KAAMi5B,EACNnjB,KAAMojB,GAGR,EAAKpc,SAAW,CACduJ,OAAQ,EAAKA,OACbphB,QAASA,GAKPiO,EAAW,GACb,EAAKxN,SAAS,CAAC4wB,iBAAiB,EAAMV,oBAAoB,MAtgB7C,EA+gBnBuD,YAAc,WACZ,EAAKzzB,SAAS,CAAE6vB,gBAAgB,KAhhBf,EAmhBnB6D,YAAc,SAACC,GACb,EAAK3zB,SAAS,CAAE6vB,gBAAgB,IAC9B,WACE,GAAI8D,EAAS,CAOX,GANA,EAAKxB,eACL,EAAK12B,KAAO,KACZ,EAAKH,IAAM,EAAKs4B,aAAa55B,MAII,QAA7ByC,EAAe,EAAKnB,KAGtB,OAAO,EAAKkc,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,UAAW,EAAK2oB,aAAa55B,OAF7F,EAAKgG,SAAS,CAACmwB,sBAAsB,SA9hB5B,EAsiBnB0D,gBAAkB,WAChB,EAAK7zB,SAAS,CAAE6vB,gBAAgB,EAAOD,gBAAgB,KAviBtC,EA0iBnBkE,WAAa,WACX,EAAKtc,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,UA3iBxC,EA8iBnB8oB,SAAW,WACT,EAAKvc,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,WA/iBxC,EAkjBnB+oB,WAAa,WACX,EAAKxc,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,SAnjBxC,EAsjBnBgpB,MAAQ,WACN,EAAKj0B,SAAS,CAACovB,eAAe,EACfC,WAAW,EACXC,SAAS,EACTQ,gBAAgB,EAChBC,gBAAgB,EAChBL,eAAe,EACfO,iBAAiB,IAChC,EAAKgB,aAAa,EAAG,GACrB,EAAKlyB,MAAMib,cAAc,MACzB,EAAKjb,MAAM6yB,iBAAiB,MAC5B,EAAK7yB,MAAM+U,gBACX,EAAK0D,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,UAlkBxC,EAqkBnBipB,aAAe,SAAC9b,GACd,EAAKpY,SAAS,CAACkvB,eAAgB9W,EAAM+b,iBAtkBpB,EAykBnBC,YAAc,WACZ,EAAKp0B,SAAS,CAACkvB,eAAgB,QA1kBd,EA6kBnB+B,aAAe,SAACnc,EAAKsW,GAEnB,GAAItW,EAAM,EAAK/V,MAAM2S,OAAO,IAAM0Z,EAAM,EAAKrsB,MAAM2S,OAAO,GAAI,CAC5D,EAAK2iB,gBAAgB,GACrB,IAAI,IAAI10B,EAAE,EAAGA,EAAI,EAAGA,IAClB,IAAI,IAAIkqB,EAAE,EAAGA,EAAI,EAAGA,IAClB,GAAKlqB,EAAE,EAAImV,GAAS+U,EAAE,EAAIuB,EAAM,CAC9B,IAAM7qB,EAAU,EAAFZ,EAAIkqB,EACd,EAAKrS,iBAAiBjX,IAOlC,EAAKxB,MAAMu1B,eAAexf,EAAKsW,IA5lBd,EA+lBnBmJ,YAAc,SAACp2B,GAEb,OAAQA,GACN,IAAK,SACH6wB,GAAW,KACX,EAAKhvB,SAAS,CAACqwB,UAAW,OAC1B,MACF,IAAK,OACHrB,GAAWwF,KACX,MACF,IAAK,MACHxF,GAAWyF,KACX,MACF,IAAK,OACHzF,GAAW0F,KACX,MACF,IAAK,SACH1F,GAAW2F,KACX,MACF,IAAK,QACH3F,GAAW4F,KACX,MACF,IAAK,QACH5F,GAAW6F,KACX,MACF,IAAK,gBACH7F,GAAW8F,KACX,MACF,IAAK,eACH9F,GAAW+F,KACX,MACF,IAAK,cACH/F,GAAWgG,KAMf,EAAKj2B,MAAMgV,UAAU5V,GACrB,EAAKqZ,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ9M,IAtoBxC,EAyoBnB82B,WAAa,WACX,IAAM5E,EAAY,EAAE,EAAKrxB,MAAMqxB,UAC/B,EAAKrwB,SAAS,CAACqwB,UAAWA,IAAY,WACpC,EAAK7gB,WAAWA,WAAW,EAAKzQ,MAAMZ,KAAMkyB,OA5oB7B,EAgpBnB7D,WAAa,SAACjsB,GACZ,EAAKiX,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,aAAc1K,IAjpBtD,EAopBnB20B,eAAiB,WACf,EAAKl1B,SAAS,CAACmvB,UAAW,EAAKnwB,MAAMmwB,YArpBpB,EAwpBnBgG,gBAAkB,WAChB,EAAKn1B,SAAS,CAACovB,eAAgB,EAAKpwB,MAAMowB,iBAzpBzB,EA4pBnBgG,YAAc,WACZ,EAAKp1B,SAAS,CAACqvB,WAAY,EAAKrwB,MAAMqwB,aA7pBrB,EAgqBnBgG,UAAY,WACV,EAAKr1B,SAAS,CAACsvB,SAAU,EAAKtwB,MAAMswB,WAjqBnB,EAoqBnB+E,gBAAkB,SAAC9zB,GACjB,IAAIlD,YAAYkD,IAAU,EAAKxB,MAAM8O,eAArC,CAGA,IAAML,EAAW,EAAKgK,iBAAiBjX,GAAOiN,SACxCkD,EAAa,EAAK8G,iBAAiBjX,GAAOmQ,WAChD,EAAK1Q,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,IAI/C,EAAK3R,MAAMu2B,kBAAkB/0B,GAEzB,EAAKvB,MAAMwxB,uBACC,IAAVjwB,EACF,EAAKP,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,IAC5B,IAAVnQ,EACT,EAAKP,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,IAC5B,IAAVnQ,GACT,EAAKP,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,KAInD,IAAMuD,EAAY,EAAKwD,gBAAgBlX,GACvC,EAAKxB,MAAM+K,sBAAsBmK,EAAU1V,cAC3C,EAAKQ,MAAMoM,aAAa,CAACpR,MAAOka,EAAUla,MAAOsQ,QAAS4J,EAAU3J,WAAYd,QAASyK,EAAUzK,YA5rBlF,EA+rBnB+rB,gBAAkB,SAACh1B,GACjB,GAAKlD,YAAYkD,IAAU,EAAKxB,MAAM8O,eAAtC,CAEA,IAAML,EAAW,EAAKgK,iBAAiBjX,GAAOiN,SACxCkD,EAAa,EAAK8G,iBAAiBjX,GAAOmQ,WAEhD,EAAK1Q,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,IAI/C,EAAK3R,MAAMu2B,kBAAkB/0B,GAEzB,EAAKvB,MAAMwxB,uBACC,IAAVjwB,EAEF,EAAKP,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,IAE5B,IAAVnQ,EAET,EAAKP,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,IAE5B,IAAVnQ,GAET,EAAKP,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,KAInD,IAAMuD,EAAY,EAAKwD,gBAAgBlX,GACvC,EAAKxB,MAAM+K,sBAAsBmK,EAAU1V,cAC3C,EAAKQ,MAAMoM,aAAa,CAACpR,MAAOka,EAAUla,MAAOsQ,QAAS4J,EAAU3J,WAAYd,QAASyK,EAAUzK,YA5tBlF,EA+tBnBgsB,gBAAkB,WAEhB,IADA,IAAI3d,EAAe,GACXlY,EAAE,EAAGA,EAAI,EAAKZ,MAAM2S,OAAO,GAAI/R,IACrC,IAD2C,IAAD,WAClCkqB,GACN,IAAM4L,EAAkB,CACtBjjB,OAAiC,IAAzB,EAAKzT,MAAM2S,OAAO,IAAqC,IAAzB,EAAK3S,MAAM2S,OAAO,GAAW,oBAAsB,qBAErFnR,EAAU,EAAFZ,EAAIkqB,EAClBhS,EAAa9c,KACX,yBACEH,IAAK2F,EACL/H,MAAOi9B,EACPh8B,QAAS,kBAAM,EAAK46B,gBAAgB9zB,IACpCwX,aAAc,kBAAM,EAAKwd,gBAAgBh1B,KAExC,EAAKmX,aAAanX,MAZjBspB,EAAE,EAAGA,EAAI,EAAK9qB,MAAM2S,OAAO,GAAImY,IAAM,EAArCA,GAkBV,OACE,yBACE3qB,GAAG,mBACH1G,MAAO,CACL4a,QAAS,OACT6E,iBAAiB,UAAD,OAAY,EAAKlZ,MAAM2S,OAAO,GAA9B,aAAqC,IAAM,EAAK3S,MAAM2S,OAAO,GAA7D,MAChBwG,oBAAoB,UAAD,OAAY,EAAKnZ,MAAM2S,OAAO,GAA9B,aAAqC,IAAM,EAAK3S,MAAM2S,OAAO,GAA7D,MACnB/S,OAAQ,OACRuE,MAAO,SAGR2U,IA/vBY,EAowBnBvb,YAAc,SAAC2X,GACb,OAAOA,EAAU/X,UArwBA,EA+wBnBw5B,sBAAwB,WACtB,OAAI,EAAK12B,MAAMwxB,qBACN,aACA,EAAKxxB,MAAM0xB,mBACX,WACA,EAAK1xB,MAAM2xB,gBACX,QACA,EAAK3xB,MAAMyxB,kBACX,eADJ,GAtxBY,EA0xBnBkF,YAAc,SAAC5yB,EAASsP,EAAQ4B,GAC9B,GAAI5W,aAAaC,WACf,OAAI+U,EACK,KAGL,kBAACla,EAAA,EAAD,CAAYC,QAAQ,WAAWoL,UAAWT,EAAQwR,OAChD,qCADF,YAC6B,qCAD7B,QACoD,qCADpD,SAKJ,GAAIlC,EAAQ,CACV,IAAMpB,EAAQ,EAAKykB,wBACnB,OAAI,EAAK12B,MAAMwO,SAAW,GAAK,EAAK9E,WAAauI,GAA2B,KAAlB,EAAKvI,SAE3D,kBAACvQ,EAAA,EAAD,CAAYC,QAAQ,WAAWoL,UAAWT,EAAQwR,OAC/C,OAAOtD,GAKZ,kBAAC9Y,EAAA,EAAD,CAAYC,QAAQ,WAAWoL,UAAWT,EAAQwR,OAC/C,EAAKjY,YAAY2X,IAGjB,OAA4B,OAAxB,EAAKlV,MAAMmD,SAElB,kBAAC/J,EAAA,EAAD,CAAYC,QAAQ,WAAWoL,UAAWT,EAAQwR,OAC/C,EAAKxV,MAAMmD,SAASA,SAASuvB,oBAKhC,kBAACt5B,EAAA,EAAD,CAAYC,QAAQ,WAAWoL,UAAWT,EAAQwR,OAChD,qCADF,YAC6B,qCAD7B,QACoD,qCADpD,UA3zBW,EAo0BnBqhB,qBAAuB,SAAC77B,GACtB,IAAMkiB,EAAMliB,EAAME,KAAKC,OAAO,aAAagH,MAAM,MAE7C0O,EAAI,IAAIC,MAAM,GAAGC,KAAK,GAAGtV,KAAI,kBAAM,IAAIqV,MAAM,GAAGC,KAAK,MASzD,OAPAF,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IACzBrM,EAAE,GAAG,GAAKxV,WAAW6hB,EAAI,IAElBrM,EAAE,GAAG,IAh1BK,EAm1BnBimB,eAAiB,WACf,KAAI,EAAKplB,OAAO/I,OAAS,GAAzB,CAEA,EAAKiT,GAAKC,YAAYC,MAEtB,IAAMhhB,EAAQ,EAAK2d,iBAAiB,GAAG3d,MACjCi8B,EnBp9BH,SAA8B/7B,EAAOwG,GACxC,IAAMvG,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAIJ,OADqBA,EAAMkH,MAAM,MACbX,GmB88BEw1B,CAAqBl8B,EAAM,GAAGE,MAAO,GACrDi8B,EnB58BH,SAAqCj8B,GACxC,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOI,WAAWJ,GmBu8BUi8B,CAA4Bp8B,EAAM,GAAGE,OAC3Dm8B,EnBr8BH,SAAgCn8B,GACnC,IAAMC,EAAQD,EAAME,KAAKC,OAAO,aAChC,QAAcC,IAAVH,EAGJ,OAAOI,WAAWJ,GmBg8BKm8B,CAAuBt8B,EAAM,GAAGE,OACjD2N,EAAS7N,EAAM,GAAGE,MAAMquB,eAAe1gB,OACvC0U,EAAgBtiB,EAAsBD,EAAM,GAAGE,OACrD,EAAK0W,OAAS,GAEd,EAAKD,QAAQM,KAAO7H,KAAKC,MAAMrP,EAAM6N,OAASsuB,EAAsBF,GAUpE,IAAIM,GAAc,EAClB,GAAIJ,EAAsBE,QAAoC/7B,IAAlBiiB,EAA6B,CAGvE,IAFA,IAAIsN,EAAM,EACNuB,EAAM,EACFtrB,EAAE,EAAGA,EAAI9F,EAAM6N,OAAQ/H,IACzB9F,EAAM8F,GAAGmc,cAAgB4N,IAC3BA,EAAM7vB,EAAM8F,GAAGmc,eACbjiB,EAAM8F,GAAGmc,cAAgBmP,IAC3BA,EAAMpxB,EAAM8F,GAAGmc,eAEnB,EAAKtL,QAAQM,KAAO7H,KAAKC,MAAMD,KAAK+G,IAAI0Z,EAAMuB,GAAO6K,GAErDM,GAAc,EAIhB,GAAIv8B,EAAM6N,SAAW,EAAK8I,QAAQM,KAChC,IAAK,IAAInR,EAAI,EAAG02B,EAAMx8B,EAAM6N,OAAQ/H,EAAI02B,EAAK12B,IAC3C,EAAK8Q,OAAO1V,KAAKlB,EAAM8F,GAAG5F,MAAMquB,qBAG7B,GAAIvuB,EAAM6N,OAAS,EAAK8I,QAAQM,KAAM,CAG3C,IADA,IAAIwlB,EAAa,IAAIplB,WAAWxJ,GAAQoI,KAAK,GACpCnQ,EAAI,EAAG02B,EAAM,EAAK7lB,QAAQM,KAAMnR,EAAI02B,EAAK12B,IAChD,EAAK8Q,OAAO1V,KAAKu7B,GAKnB,IAFA,IAAIC,EAAQ,GAEH52B,EAAI,EAAGA,EAAI9F,EAAM6N,OAAQ/H,IAChC42B,EAAMx7B,KAAK,CAACy7B,MAAO72B,EAAGic,eAAgB/hB,EAAM8F,GAAGic,eAAgBE,cAAejiB,EAAM8F,GAAGmc,cAAeM,cAAeviB,EAAM8F,GAAGyc,gBAGhI,GAAIga,GAEFG,EAAQA,EAAMlhB,QAAO,SAACohB,EAAU/O,GAK9B,OAHsB,IADT+O,EAASje,QAAO,SAAAke,GAAM,OAAIA,EAAO5a,gBAAkB4L,EAAQ5L,iBAC7DpU,QACT+uB,EAAS17B,KAAK2sB,GAET+O,IACN,KAEG7Z,MAAK,SAAC/H,EAAGgI,GAEb,OAAOhI,EAAE+G,eAAiBiB,EAAEjB,uBAKd/hB,EAAM,GAAGuiB,cAAgBviB,EAAM,GAAGuiB,eAEhDma,EAAM3Z,MAAK,SAAC/H,EAAGgI,GAGb,OAAOA,EAAET,cAAgBvH,EAAEuH,iBAajC,IAAIua,EAAY,CAAC,GACjB,EAAKlmB,OAAO,GAAK5W,EAAM08B,EAAM,GAAGC,OAAOz8B,MAAMquB,eAC7C,EAAK3X,OAAO,EAAKD,QAAQM,KAAK,GAAKjX,EAAM08B,EAAMA,EAAM7uB,OAAO,GAAG8uB,OAAOz8B,MAAMquB,eAG5E,IAFA,IAAM3N,GAAQ,EAAKjK,QAAQM,KAAK,IAAMylB,EAAM7uB,OAAO,GAC/C/H,EAAI,EACCklB,EAAI,EAAGA,GAAK0R,EAAM7uB,OAAO,EAAGmd,IACjCllB,EAAIsJ,KAAK2tB,KAAKj3B,EAAE8a,GAEhB,EAAKhK,OAAO9Q,GAAK9F,EAAM08B,EAAM1R,GAAG2R,OAAOz8B,MAAMquB,eAC7CuO,EAAU57B,KAAK4E,GAEnBg3B,EAAU57B,KAAK,EAAKyV,QAAQM,KAAK,GAKjC,IAAM+lB,EAAsBr5B,KAE5B,GAA4B,OAAxBq5B,EAEF,IAAK,IAAIl3B,EAAI,EAAGA,EAAIg3B,EAAUjvB,OAAO,EAAG/H,IAEtC,IAAK,IAAIkqB,EAAI8M,EAAUh3B,GAAG,EAAGkqB,GAAK8M,EAAUh3B,EAAE,GAAG,EAAGkqB,IAElD,EAAKpZ,OAAOoZ,GAAK,EAAKpZ,OAAOkmB,EAAUh3B,EAAE,SAIxC,GAA4B,mBAAxBk3B,EAET,IAAK,IAAIl3B,EAAI,EAAGA,EAAIg3B,EAAUjvB,OAAO,EAAG/H,IAItC,IAFA,IAAM8a,EAAOkc,EAAUh3B,EAAE,GAAGg3B,EAAUh3B,GAE7BkqB,EAAI8M,EAAUh3B,GAAG,EAAGkqB,EAAI8M,EAAUh3B,EAAE,GAAIkqB,IAAK,CAMpD,IAHA,IAAI9Z,EAAI,IAAImB,WAAWxJ,GACjBovB,GAAKjN,EAAE8M,EAAUh3B,IAAM8a,EAEpBoK,EAAI,EAAGA,EAAInd,EAAO,EAAGmd,IAAK,CAOjC,IAAMkS,EAAK,EAAKtmB,OAAOkmB,EAAUh3B,IAAIklB,IAAM,EAAEiS,GACvCE,EAAK,EAAKvmB,OAAOkmB,EAAUh3B,EAAE,IAAIklB,GAAKiS,EAC5C/mB,EAAE8U,GAAKkS,EAAGC,EAkBZ,EAAKvmB,OAAOoZ,GAAI9Z,EAKtB,EAAK+M,GAAKlC,YAAYC,MACtBhf,QAAQC,IAAR,uCAA4C,EAAKghB,GAAG,EAAKnC,GAAzD,sBAEK,CACL,EAAKnK,QAAQymB,MAAQp9B,EAAM6N,OAAS,EAAK8I,QAAQM,KAEjD,IAAK,IAAInR,EAAI,EAAG02B,EAAM,EAAK7lB,QAAQM,KAAMnR,EAAI02B,EAAK12B,IAAK,CACrD,IAAMklB,EAAI5b,KAAKC,MAAMvJ,EAAE,EAAK6Q,QAAQymB,OACpC,EAAKxmB,OAAO1V,KAAKlB,EAAMgrB,GAAG9qB,MAAMquB,iBAIhC,EAAKppB,MAAMwxB,qBACb,EAAK0G,yBAEI,EAAKl4B,MAAM0xB,mBACpB,EAAKyG,uBAEI,EAAKn4B,MAAMyxB,kBACpB,EAAK2G,sBAGL,EAAKC,sBA7gCU,EAihCnBH,uBAAyB,WAGvB,EAAKjG,aAAa,EAAG,GAErB,IAAM1wB,EAAQ0I,KAAKC,MAAM,EAAKsO,iBAAiB,GAAG3d,MAAM6N,OAAS,GAEjE,EAAK1H,SAAS,CAACuwB,uBAAuB,EAAO7f,WAAYnQ,IAAQ,WAC/D,IAAM0Q,EAAQ,EAAKpG,mBAEqB,OAApC,EAAK2M,iBAAiB,GAAG/G,SAC3B,EAAK+G,iBAAiB,GAAG/G,OAAS,EAAKA,QAGzC,EAAK+G,iBAAiB,GAAGvM,QAAQ,YAAa1K,GAEN,OAApC,EAAKiX,iBAAiB,GAAG/G,SAC3B,EAAK+G,iBAAiB,GAAG/G,OAAS,EAAKA,QACzC,IAAM6mB,EAAUruB,KAAKC,MAAM,EAAKsH,QAAQM,KAAO,GAE/C,EAAK0G,iBAAiB,GAAGhK,SAAW,EAAKgD,QAAQM,KAEjD,EAAK0G,iBAAiB,GAAGlG,iBAAiB,EAAKkG,iBAAiB,GAAGtb,SAAU+U,EAAOqmB,EAAS,EAAK9mB,SAE1D,OAApC,EAAKgH,iBAAiB,GAAG/G,SAC3B,EAAK+G,iBAAiB,GAAG/G,OAAS,EAAKA,QACzC,IAAM8mB,EAAUtuB,KAAKC,MAAM,EAAKsH,QAAQM,KAAO,GAE/C,EAAK0G,iBAAiB,GAAGhK,SAAW,EAAKgD,QAAQM,KAEjD,EAAK0G,iBAAiB,GAAGjH,iBAAiB,EAAKiH,iBAAiB,GAAGtb,SAAU+U,EAAOsmB,EAAS,EAAK/mB,aA/iCnF,EAojCnB2mB,qBAAuB,WAGrB,EAAKlG,aAAa,EAAG,GAErB,EAAKjxB,SAAS,CAACuwB,uBAAuB,IAAQ,WAC5C,IAAMtf,EAAQ,EAAKpG,mBAKjB,GAH8D,OAA5D,EAAK2M,iBAAiB,EAAKzY,MAAM8O,gBAAgB4C,SACnD,EAAK+G,iBAAiB,EAAKzY,MAAM8O,gBAAgB4C,OAAS,EAAKA,QAEjD,aAAVQ,EAAsB,CAC1B,IAAMzD,EAA8C,OAAnC,EAAKgK,iBAAiB,GAAG3d,MAAiB,EAAI,EAAK2d,iBAAiB,GAAG3d,MAAM6N,OACxFnH,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,YAAa1K,WAEnE,GAAc,UAAV0Q,EAAmB,CAC5B,IAAMzD,EAAW,EAAKgD,QAAQM,KACxBvQ,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgB0C,iBAAiB,EAAKiH,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,gBAErH,CACL,IAAMhD,EAAW,EAAKgD,QAAQM,KACxBvQ,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgByD,iBAAiB,EAAKkG,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,iBAllC7G,EAwlCnB4mB,oBAAsB,WACpB,EAAKnG,aAAa,EAAG,GAErB,EAAKjxB,SAAS,CAACuwB,uBAAuB,IAAQ,WAC5C,IAAMtf,EAAQ,EAAKpG,mBAKnB,GAHgE,OAA5D,EAAK2M,iBAAiB,EAAKzY,MAAM8O,gBAAgB4C,SACnD,EAAK+G,iBAAiB,EAAKzY,MAAM8O,gBAAgB4C,OAAS,EAAKA,QAEnD,YAAVQ,EAAqB,CACvB,IAAMzD,EAA8C,OAAnC,EAAKgK,iBAAiB,GAAG3d,MAAiB,EAAI,EAAK2d,iBAAiB,GAAG3d,MAAM6N,OACxFnH,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,YAAa1K,WAGnE,GAAc,UAAV0Q,EAAmB,CAC5B,IAAMzD,EAAW,EAAKgD,QAAQM,KACxBvQ,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgByD,iBAAiB,EAAKkG,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,gBAGrH,CACL,IAAMhD,EAAW,EAAKgD,QAAQM,KACxBvQ,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgB0C,iBAAiB,EAAKiH,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,iBAtnC7G,EA4nCnB6mB,kBAAoB,WAClB,EAAKpG,aAAa,EAAG,GAErB,EAAKjxB,SAAS,CAACuwB,uBAAuB,IAAQ,WAC5C,IAAMtf,EAAQ,EAAKpG,mBAKnB,GAHgE,OAA5D,EAAK2M,iBAAiB,EAAKzY,MAAM8O,gBAAgB4C,SACnD,EAAK+G,iBAAiB,EAAKzY,MAAM8O,gBAAgB4C,OAAS,EAAKA,QAEnD,UAAVQ,EAAmB,CACrB,IAAMzD,EAA8C,OAAnC,EAAKgK,iBAAiB,GAAG3d,MAAiB,EAAI,EAAK2d,iBAAiB,GAAG3d,MAAM6N,OACxFnH,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,YAAa1K,WAInE,GAAc,aAAV0Q,EAAsB,CAC/B,IAAMzD,EAAW,EAAKgD,QAAQM,KACxBvQ,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgByD,iBAAiB,EAAKkG,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,gBAIrH,CACL,IAAMhD,EAAW,EAAKgD,QAAQM,KACxBvQ,EAAQ0I,KAAKC,MAAMsE,EAAW,GACpC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,EAAOiN,SAAUA,IAAW,WACrD,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAAWA,EAC5D,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgB0C,iBAAiB,EAAKiH,iBAAiB,GAAGtb,SAAU+U,EAAO1Q,EAAO,EAAKiQ,iBA5pC7G,EAkqCnB3F,iBAAmB,WAAuD,IAAtD2sB,EAAqD,wDAAtCj3B,EAAsC,uDAA9B,EAAKxB,MAAM8O,eAWpD,OATsB,KAAlB,EAAKnF,UAAmB8uB,KAC1B,EAAK9uB,SAAW,EAAK8O,iBAAiBjX,GAAOsK,mBACvB,aAAlB,EAAKnC,SACP,EAAK1I,SAAS,CAAEwwB,sBAAsB,EAAOE,oBAAoB,EAAMC,iBAAiB,EAAOF,mBAAmB,IACzF,YAAlB,EAAK/nB,SACZ,EAAK1I,SAAS,CAAEwwB,sBAAsB,EAAOE,oBAAoB,EAAOC,iBAAiB,EAAOF,mBAAmB,IAEnH,EAAKzwB,SAAS,CAAEwwB,sBAAsB,EAAOE,oBAAoB,EAAOC,iBAAiB,EAAMF,mBAAmB,KAE/G,EAAK/nB,UA7qCK,EAgrCnB+uB,cAAgB,WAEd,IAD6B,EAAKz4B,MAAMwxB,qBACb,CACzB,IAAMjwB,EAAQ0I,KAAKC,MAAM,EAAKsO,iBAAiB,GAAG3d,MAAM6N,OAAS,GACjE,EAAK8I,QAAQS,MAAQ,CACnBymB,KAAM,EAAKhvB,SACXivB,GAAI,cAEN,EAAK33B,SAAS,CAAC0Q,WAAYnQ,IAC3B,EAAKP,SAAS,CAACwwB,sBAAsB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,iBAAiB,IAAQ,WACV,IAAvB,EAAKlgB,OAAO/I,OACd,EAAK1H,SAAS,CAACuwB,uBAAuB,IAAO,WAC3CvmB,YAAW,WACT,EAAK6rB,mBACJ,QAGL,EAAKqB,8BApsCM,EA0sCnBU,YAAc,WACe,EAAK54B,MAAM0xB,qBAEpC,EAAKlgB,QAAQS,MAAQ,CACnBymB,KAAM,EAAKhvB,SACXivB,GAAI,YAEN,EAAK33B,SAAS,CAACwwB,sBAAsB,EACvBE,oBAAoB,EACpBD,mBAAmB,EACnBE,iBAAiB,IAAQ,WACV,IAAvB,EAAKlgB,OAAO/I,OACd,EAAK1H,SAAS,CAACuwB,uBAAuB,IAAO,WAC3CvmB,YAAW,WACT,EAAK6rB,mBACJ,QAGL,EAAKsB,4BA5tCM,EAkuCnBU,WAAa,WACe,EAAK74B,MAAMyxB,oBAEnC,EAAKjgB,QAAQS,MAAQ,CACnBymB,KAAM,EAAKhvB,SACXivB,GAAI,WAEN,EAAK33B,SAAS,CAACwwB,sBAAsB,EACtBE,oBAAoB,EACpBD,mBAAmB,EACnBE,iBAAiB,IAAQ,WACX,IAAvB,EAAKlgB,OAAO/I,OACd,EAAK1H,SAAS,CAACuwB,uBAAuB,IAAO,WAC3CvmB,YAAW,WACT,EAAK6rB,mBACJ,QAGL,EAAKuB,2BApvCM,EA0vCnBU,SAAW,WACe,EAAK94B,MAAM2xB,kBAEjC,EAAKngB,QAAQS,MAAQ,CACnBymB,KAAM,EAAKhvB,SACXivB,GAAI,SAEN,EAAK33B,SAAS,CAACwwB,sBAAsB,EACtBE,oBAAoB,EACpBD,mBAAmB,EACnBE,iBAAiB,IAAO,WACV,IAAvB,EAAKlgB,OAAO/I,OACd,EAAK1H,SAAS,CAACuwB,uBAAuB,IAAO,WAC3CvmB,YAAW,WACT,EAAK6rB,mBACJ,QAGL,EAAKwB,yBA5wCM,EAoxCnBU,wBAA0B,WAGxB,EAAK/3B,SAAS,CAAC0Q,WAFD,IAEqB,WACjC,EAAK0gB,gBAHO,OArxCG,EA4xCnB4G,2BAA6B,WAC3B,IAAIz3B,EAAQ,EAAKvB,MAAM0R,WACvBnQ,EAAkB,IAAVA,EAAc,EAAKvB,MAAMwO,SAAS,EAAIjN,EAAM,EAEpD,EAAKP,SAAS,CAAC0Q,WAAYnQ,IAAQ,WACjC,EAAK6wB,gBAAgB7wB,OAjyCN,EAqyCnB03B,uBAAyB,WACvB,IAAI13B,EAAQ,EAAKvB,MAAM0R,WACvBnQ,EAAQA,IAAU,EAAKvB,MAAMwO,SAAS,EAAI,EAAIjN,EAAM,EAEpD,EAAKP,SAAS,CAAC0Q,WAAYnQ,IAAQ,WACjC,EAAK6wB,gBAAgB7wB,OA1yCN,EA8yCnB23B,uBAAyB,WACvB,IAAM33B,EAAQ,EAAKvB,MAAMwO,SAAS,EAElC,EAAKxN,SAAS,CAAC0Q,WAAYnQ,IAAQ,WACjC,EAAK6wB,gBAAgB7wB,OAlzCN,EAszCnB+vB,uBAAyB,WACvB,IAAM6H,EAAY,EAAKn5B,MAAMsxB,uBAC7B,EAAKtwB,SAAS,CAACswB,wBAAyB6H,IAAY,WAC9CA,EACFC,cAAc,EAAKC,gBAEnB,EAAKA,eAAiBC,aAAY,WAChC,EAAKL,2BACJ,SA9zCU,EAm0CnBM,kBAAoB,SAACngB,EAAOpe,GAC1B,EAAKgG,SAAS,CAAC0Q,WAAYzH,KAAK+H,MAAMhX,KAAS,WAC7C,IAAIuG,EAAQ,EAAKvB,MAAM0R,WACvB,EAAK3R,MAAMmyB,kBAAkB,EAAKr3B,MAAM0G,IACxC,EAAK6wB,gBAAgB7wB,OAv0CN,EA20CnBi4B,uBAAyB,SAAC3+B,GAGxB,EAAKA,MAAQA,EACb,EAAK6O,SAAW,GAEhB,EAAK8O,iBAAiB,EAAKzY,MAAM8O,gBAAgB5C,QAAQ,WAAY,EAAKpR,OAE1E,IAAM2T,EAAW,EAAKgK,iBAAiB,EAAKzY,MAAM8O,gBAAgBL,SAC5DkD,EAAa,EAAK8G,iBAAiB,EAAKzY,MAAM8O,gBAAgB6C,WACpE,EAAK1Q,SAAS,CAACwN,SAAUA,EAAUkD,WAAYA,IAE/C,EAAKF,QAAU,GACf,EAAK9H,SAAW,GAEhB,EAAK0oB,gBAAgB,IAx1CrB,EAAKv3B,MAAQ,GACb,EAAK8mB,OAAS,KACd,EAAKllB,KAAO,KACZ,EAAKH,IAAM,KACX,EAAK8b,SAAW,KAChB,EAAK/X,OAAS,KAEd,EAAKmR,QAAU,GACf,EAAK9H,SAAW,GAEhB,EAAK+H,OAAS,GAGd,EAAKgoB,SAAW9kB,IAAMwN,YACtB,EAAKuX,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKv3B,aAAeuS,IAAMwN,YAC1B,EAAKyX,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBAExB,EAAKE,WAAallB,IAAMwN,YACxB,EAAK2X,eAAiB,EAAKA,eAAeH,KAApB,gBAEtB,EAAK/E,aAAejgB,IAAMwN,YAE1B,EAAK3J,iBAAmB,GACxB,EAAKG,aAAe,GACpB,IAAI,IAAIhY,EAAE,EAAGA,EAAI,GAAIA,IACnB,EAAKgY,aAAa5c,KAAK,EAAKwc,aAAa5X,IA7B1B,S,4EAqHjBmD,KAAK/D,MAAMkN,aAAY,GACvBnJ,KAAK21B,SAAS/Q,QAAQnZ,U,uCAwGtBzL,KAAK+1B,WAAWnR,QAAQnZ,U,yCAIxBzL,KAAK1B,aAAasmB,QAAQnZ,U,0CA0D1BlK,OAAO2tB,SAAS,EAAG,K,+BAikCX,IAAD,OAGCjvB,EAAYD,KAAK/D,MAAjBgE,QAEFg2B,EAAe,CAAC3/B,QAAQ2J,EAAQK,cAGhCiP,EAASvP,KAAK/D,MAAMsT,OAAOvP,KAAK/D,MAAM8O,gBACtCmrB,EAAqC,OAAxBl2B,KAAK/D,MAAMmD,SAC1B+2B,GAAkB,EAEpBA,OADuD9+B,IAArD2I,KAAK0U,iBAAiB1U,KAAK/D,MAAM8O,kBAG4B,OAA3D/K,KAAK0U,iBAAiB1U,KAAK/D,MAAM8O,gBAAgBhU,OACjCiJ,KAAK0U,iBAAiB1U,KAAK/D,MAAM8O,gBAAgBhU,MAAM6N,OAAS,GAKtF,IAAMynB,EAAWrsB,KAAK9D,MAAMmwB,SACtBC,EAAgBtsB,KAAK9D,MAAMowB,cAC3BC,EAAYvsB,KAAK9D,MAAMqwB,UACvBC,EAAUxsB,KAAK9D,MAAMswB,SAAW2J,GAAqC,KAAlBn2B,KAAK4F,SACxD+mB,EAAkB3sB,KAAK9D,MAAMywB,gBAC7BC,EAAgB5sB,KAAK9D,MAAM0wB,cAC3BC,EAAkB7sB,KAAK9D,MAAM2wB,gBAC7BK,EAAeltB,KAAK9D,MAAMgxB,aAC1BD,EAAiBjtB,KAAK9D,MAAM+wB,eAC5BD,EAAiBhtB,KAAK9D,MAAM8wB,eAC5BG,EAAkBntB,KAAK9D,MAAMixB,gBAC7BC,EAAqBptB,KAAK9D,MAAMkxB,mBAChC9C,EAAyBtqB,KAAK9D,MAAMouB,uBACpC+C,EAAuBrtB,KAAK9D,MAAMmxB,qBAClCC,EAAwBttB,KAAK9D,MAAMoxB,sBACnCzS,EAA8B7a,KAAK9D,MAAM2e,4BACzCub,EAAgBC,QAAQr2B,KAAK9D,MAAMkwB,gBACnCqB,EAAwBztB,KAAK9D,MAAMuxB,sBACnCC,EAAuB1tB,KAAK9D,MAAMwxB,qBAClCC,EAAoB3tB,KAAK9D,MAAMyxB,kBAC/BC,EAAqB5tB,KAAK9D,MAAM0xB,mBAChCC,EAAkB7tB,KAAK9D,MAAM2xB,gBAC7BC,EAAkB9tB,KAAK9D,MAAM4xB,gBAE/BwI,EAAyC,IAAzBt2B,KAAK9D,MAAMqxB,UAAkB,UAAY,UAEvDpc,EAAYnR,KAAKguB,qBAEjBtjB,EAAW1K,KAAK9D,MAAMwO,SAE5B,OACE,6BACE,kBAAC6gB,GAAA,EAAD,CAAQ7qB,UAAWT,EAAQ2qB,OAAQhb,SAAS,SAAS4b,UAAW,GAC9D,kBAACha,GAAA,EAAD,CAASlc,QAAQ,SACf,kBAAC+M,GAAA,EAAD,CAAY+nB,KAAK,QAAQ1pB,UAAWT,EAAQs2B,WAAY5gC,MAAM,UAAU81B,aAAW,OAAO90B,QAASqJ,KAAKmvB,gBACtG,kBAAC,KAAD,OAEAnvB,KAAK6yB,YAAY5yB,EAASsP,EAAQ4B,GAEpC,yBAAKzQ,UAAWT,EAAQyR,OACrBnC,GAAW2mB,EAIT,KAHH,kBAAC7zB,GAAA,EAAD,CAAY1L,QAASqJ,KAAKmwB,WACxB,kBAAC,KAAD,CAAMpzB,KAAMy5B,KAAuBj0B,KAxD9B,SAwD8C5M,MAt/CjD,aA0/CS,OAAbu2B,IAAyC,OAApBlsB,KAAK/D,MAAMZ,MAAkBkU,EAChD,kBAAClN,GAAA,EAAD,CAAY1L,QAASqJ,KAAKmyB,YACxB,kBAAC,KAAD,CAAMp1B,KAAMmvB,GAAU3pB,KA9DnB,SA8DmC5M,MAAO2gC,KAE7C,KAEJ/mB,GAAU4B,EAAUxK,eAAiB,GAAM4I,EAC3C,kBAACuQ,GAAA,EAAD,CAASrO,MAAM,eACb,kBAACpP,GAAA,EAAD,CAAY1L,QAASqJ,KAAKkxB,YACxB,kBAAC,KAAD,CAAMn0B,KAAM05B,KAAUl0B,KArEnB,SAqEmC5M,MAngDtC,cAsgDD,KAEH4Z,EACA,kBAACuQ,GAAA,EAAD,CAASrO,MAAM,eACb,kBAACpP,GAAA,EAAD,CAAY1L,QAASqJ,KAAKgxB,YACxB,kBAAC,KAAD,CAAMj0B,KAAM25B,KAAYn0B,KA7ErB,SA6EqC5M,MA3gDxC,cA8gDD,KAEH4Z,EACA,kBAACuQ,GAAA,EAAD,CAASrO,MAAM,mBACb,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKixB,UACxC,kBAAC,KAAD,CAAMl0B,KAAM45B,KAAWp0B,KArFpB,SAqFoC5M,MAnhDvC,cAshDD,KAEH4Z,EACA,kBAACuQ,GAAA,EAAD,CAASrO,MAAM,WACb,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK0vB,eACxC,kBAAC,KAAD,CAAM3yB,KAAM65B,KAAYr0B,KA7FrB,SA6FqC5M,MA3hDxC,cA8hDA,KAEJ4Z,EACA,kBAACuQ,GAAA,EAAD,CAASrO,MAAM,gBACb,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK4vB,eACxC,kBAAC,KAAD,CAAM7yB,KAAM85B,KAAYt0B,KArGrB,SAqGqC5M,MAniDxC,cAsiDA,KAEJ4Z,GAAU4B,EAAUzK,QACpB,kBAACoZ,GAAA,EAAD,CAASrO,MAAM,gBACb,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKyvB,cACxC,kBAAC,KAAD,CAAM1yB,KAAM+5B,KAAiBv0B,KA7G1B,SA6G0C5M,MA3iD7C,cA8iDA,KAEJugC,EACA,kBAACpW,GAAA,EAAD,CAASrO,MAAM,YACb,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK+uB,gBACxC,kBAAC,KAAD,CAAMhyB,KAAMg6B,KAAex0B,KArHxB,SAqHwC5M,MAnjD3C,cAsjDA,KAEJ4Z,GAAU4mB,EACV,kBAACrW,GAAA,EAAD,CAASrO,MAAM,YACb,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKwvB,gBACxC,kBAAC,KAAD,CAAMzyB,KAAMi6B,KAAqBz0B,KA7H9B,SA6H8C5M,MA3jDjD,cA8jDA,KAEJ4Z,EACA,kBAACuQ,GAAA,EAAD,CAASrO,MAAM,wBACb,kBAACpP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAKuvB,mBACxC,kBAAC,KAAD,CAAMxyB,KAAMk6B,KAAgB10B,KArIzB,SAqIyC5M,MAnkD5C,cAskDA,OAKV,kBAACuhC,GAAA,EAAD,CACE5hC,QAAQ,aACRS,KAAM42B,EACNj3B,MAAO,CAACka,SAAS,WAAYunB,OAAQ,GACrChiC,QAAS6K,KAAKmvB,gBAEd,yBAAKzuB,UAAWT,EAAQm3B,SACxB,kBAAC,IAAD,KACE,kBAACjhC,EAAA,EAAD,CAAMsK,OAAO,GACX,kBAACrK,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAKs4B,eACnC,kBAACoI,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAAChhC,EAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAK44B,sBACnC,kBAAC8H,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMk6B,KAAgB10B,KA3JrC,SA2JqD5M,MAzlDxD,aA0lDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,kBAG/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAKy7B,mBACnC,kBAACiF,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMu6B,KAAmB/0B,KAhKxC,SAgKwD5M,MA9lD3D,aA+lDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,aAC5C+1B,EAAW,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAE/B,kBAAC9rB,EAAA,EAAD,CAAUC,GAAI6rB,EAAUkL,QAAQ,OAAOC,eAAa,GAClD,kBAACrhC,EAAA,EAAD,CAAMsK,OAAO,EAAMsS,UAAU,OAC3B,kBAAC3c,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAKi/B,iBAC7D,kBAACyB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM06B,KAAWl1B,KAAM,SAAU5M,MArmDvD,aAsmDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EACrB3/B,QACE,kBAACjB,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,UAAjE,WAGN,kBAACra,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAKg6B,gBAC7D,kBAAC0G,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM26B,MAAQn1B,KAAM,SAAU5M,MA5mDpD,aA6mDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EACrB3/B,QACE,kBAACjB,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,UAAjE,UAGJtY,MAA0BoC,WAC5B,kBAACnE,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAKq/B,mBAC7D,kBAACqB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMg6B,KAAex0B,KAAM,SAAU5M,MApnD3D,aAqnDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EACrB3/B,QACE,kBAACjB,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,UAAjE,aAGJ,KACAtY,MAA0BoC,WAC5B,kBAACnE,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAKm/B,qBAC7D,kBAACuB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMg6B,KAAex0B,KAAM,SAAU5M,MA7nD3D,aA8nDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EACrB3/B,QACE,kBAACjB,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,UAAjE,eAGJ,OAIN,kBAACra,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAKw6B,UACnC,kBAACkG,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM46B,KAAWp1B,KA1MhC,SA0MgD5M,MAxoDnD,aAyoDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,eAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAASqJ,KAAKoxB,cAC7B,kBAACiG,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM66B,KAAwBr1B,KA9M7C,SA8M6D5M,MA5oDhE,aA6oDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,YAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAKy5B,iBACnC,kBAACiH,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM86B,KAAat1B,KAlNlC,SAkNkD5M,MAhpDrD,aAipDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,cAE/C,kBAACwhC,GAAA,EAAD,MACA,kBAAC1hC,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAK+4B,iBAAiBqI,UAAWxoB,GAC/D,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMi7B,KAAmBz1B,KAvNxC,SAuNwD5M,MArpD3D,aAspDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,eAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAK47B,aAAawF,UAAWxoB,IAAW4mB,GAAqC,KAAlBn2B,KAAK4F,UAC9F,kBAACyxB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMk7B,KAAc11B,KA3NnC,SA2NmD5M,MAzpDtD,aA0pDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,QAC5Ck2B,EAAU,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAE9B,kBAACjsB,EAAA,EAAD,CAAUC,GAAIgsB,EAAS+K,QAAQ,OAAOC,eAAa,GACjD,kBAACrhC,EAAA,EAAD,CAAMsK,OAAO,EAAMsS,UAAU,OAC3B,kBAAC3c,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAKg+B,kBAC5DjH,EAAuB,kBAAC2J,GAAA,EAAD,CAAc3hC,MAAO,CAAC+a,WAAY,UAAU,kBAAC,KAAD,CAAM1T,KAAM2iB,KAAUnd,KAAM,SAAU5M,MAhqD5G,aAgqDkJ,KAChJ,kBAACU,EAAA,EAAD,CACEX,MAAOg4B,EAAuB,CAACjd,WAAY,QAAU,CAACA,WAAY,QAClExQ,QAASg2B,EACT3/B,QACE,kBAACjB,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,UAAjE,iBAGN,kBAACra,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAKo+B,eAC5DpH,EAAoB,kBAAC0J,GAAA,EAAD,CAAc3hC,MAAO,CAAC+a,WAAY,UAAU,kBAAC,KAAD,CAAM1T,KAAM2iB,KAAUnd,KAAM,SAAU5M,MAzqDzG,aAyqD+I,KAC7I,kBAACU,EAAA,EAAD,CACEX,MAAOi4B,EAAoB,CAACld,WAAY,QAAU,CAACA,WAAY,QAC/DxQ,QAASg2B,EACT3/B,QACE,kBAACjB,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,UAAjE,cAGN,kBAACra,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAKm+B,gBAC5DlH,EAAqB,kBAACyJ,GAAA,EAAD,CAAc3hC,MAAO,CAAC+a,WAAY,UAAU,kBAAC,KAAD,CAAM1T,KAAM2iB,KAAUnd,KAAM,SAAU5M,MAlrD1G,aAkrDgJ,KAC9I,kBAACU,EAAA,EAAD,CACEX,MAAOk4B,EAAqB,CAACnd,WAAY,QAAU,CAACA,WAAY,QAChExQ,QAASg2B,EACT3/B,QACE,kBAACjB,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,UAAjE,eAGN,kBAACra,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAKq+B,aAC5DnH,EAAkB,kBAACwJ,GAAA,EAAD,CAAc3hC,MAAO,CAAC+a,WAAY,UAAU,kBAAC,KAAD,CAAM1T,KAAM2iB,KAAUnd,KAAM,SAAU5M,MA3rDvG,aA2rD6I,KAC3I,kBAACU,EAAA,EAAD,CACEX,MAAOm4B,EAAkB,CAACpd,WAAY,QAAU,CAACA,WAAY,QAC7DxQ,QAASg2B,EACT3/B,QACE,kBAACjB,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,SAAUuP,WAAY,UAAjE,cAKV,kBAACra,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAK07B,mBAAmB0F,UAAWxoB,GACjE,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMm7B,KAAc31B,KAxQnC,SAwQmD5M,MAtsDtD,aAusDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,SAC5Cg2B,EAAgB,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAEpC,kBAAC/rB,EAAA,EAAD,CAAUC,GAAI8rB,EAAeiL,QAAQ,OAAOC,eAAa,GACvD,kBAACrhC,EAAA,EAAD,CAAOsK,OAAO,EAAMsS,UAAU,OAC5B,kBAAC3c,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,YACzE,kBAAC4F,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMo7B,KAAiB51B,KA/Q1C,SA+Q0D5M,MA7sD7D,aA8sDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,cAInD,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC1J,QAAS,kBAAM,EAAK27B,eAAeyF,UAAWxoB,GAC7D,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMq7B,KAAU71B,KArR/B,SAqR+C5M,MAntDlD,aAotDF,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,UAC5Ci2B,EAAY,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAEhC,kBAAChsB,EAAA,EAAD,CAAUC,GAAI+rB,EAAWgL,QAAQ,OAAOC,eAAa,GACnD,kBAACrhC,EAAA,EAAD,CAAMsK,OAAO,EAAMsS,UAAU,OAC3B,kBAAC3c,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,WAAWsG,UAAWxoB,GAC/F,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMs7B,KAAkB91B,KA5R3C,SA4R2D5M,MA1tD9D,aA2tDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,aAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,SAASsG,UAAWxoB,GAC7F,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM20B,KAAanvB,KAhStC,SAgSsD5M,MA9tDzD,aA+tDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,WAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,QAAQsG,UAAWxoB,GAC5F,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM40B,KAAkBpvB,KApS3C,SAoS2D5M,MAluD9D,aAmuDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,SAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,SAASsG,UAAWxoB,GAC7F,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM60B,KAAYrvB,KAxSrC,SAwSqD5M,MAtuDxD,aAuuDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,UAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,YAAYsG,UAAWxoB,GAChG,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMu7B,KAAyB/1B,KA5SlD,SA4SkE5M,MA1uDrE,aA2uDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,aAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,WAAWsG,UAAWxoB,GAC/F,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM80B,KAAUtvB,KAhTnC,SAgTmD5M,MA9uDtD,aA+uDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,YAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,UAAUsG,UAAWxoB,GAC9F,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAM+0B,KAAevvB,KApTxC,SAoTwD5M,MAlvD3D,aAmvDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,WAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,UAAUsG,UAAWxoB,GAC9F,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMg1B,KAAexvB,KAxTxC,SAwTwD5M,MAtvD3D,aAuvDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,WAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,kBAAkBsG,UAAWxoB,GACtG,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMi1B,KAAYzvB,KA5TrC,SA4TqD5M,MA1vDxD,aA2vDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,oBAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,iBAAiBsG,UAAWxoB,GACrG,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMk1B,KAAc1vB,KAhUvC,SAgUuD5M,MA9vD1D,aA+vDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,mBAE/C,kBAACF,EAAA,EAAD,CAAUiK,QAAM,EAAC3K,MAAO,CAACsL,YAAa,IAAKrK,QAAS,kBAAM,EAAK86B,YAAY,gBAAgBsG,UAAWxoB,GACpG,kBAAC8nB,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAMt6B,KAAMm1B,KAAY3vB,KApUrC,SAoUqD5M,MAlwDxD,aAmwDE,kBAACU,EAAA,EAAD,CAAc4J,QAASg2B,EAAc3/B,QAAQ,qBAOnD6/B,EACA,6BACE,kBAAC2B,GAAA,EAAD,MACA,yBAAK5W,MAAM,UACT,kBAAC7e,GAAA,EAAD,CAAY1L,QAASqJ,KAAKi1B,wBAAyB1yB,KAAK,SACtD,kBAAC,KAAD,CAAMxF,KAAM2F,KAAiBH,KAAM,SAAU5M,MA/wD/C,aAixDA,kBAAC0M,GAAA,EAAD,CAAY1L,QAASqJ,KAAKk1B,2BAA4B3yB,KAAK,SACvD,kBAAC,KAAD,CAAMxF,KAAM4F,KAAiBJ,KAAM,SAAU5M,MAlxDjD,aAoxDA,kBAAC0M,GAAA,EAAD,CAAY1L,QAASqJ,KAAKwtB,uBAAwBjrB,KAAK,SACrD,kBAAC,KAAD,CAAMxF,KAAMiD,KAAK9D,MAAMsxB,uBAAyBlrB,KAAWE,KAASD,KAAM,SAAU5M,MArxDtF,aAuxDA,kBAAC0M,GAAA,EAAD,CAAY1L,QAASqJ,KAAKm1B,uBAAwB5yB,KAAK,SACnD,kBAAC,KAAD,CAAMxF,KAAM6F,KAAaL,KAAM,SAAU5M,MAxxD7C,aA0xDA,kBAAC0M,GAAA,EAAD,CAAY1L,QAASqJ,KAAKo1B,uBAAwB7yB,KAAK,SACnD,kBAAC,KAAD,CAAMxF,KAAM8F,KAAgBN,KAAM,SAAU5M,MA3xDhD,cA8xDF,yBAAKD,MAAO,CAACib,UAAW,WACtB,kBAACtb,EAAA,EAAD,CAAY4D,KAAK,QAAQvD,MAAO,CAACwL,SAAU,WAA3C,UAA0DlB,KAAK9D,MAAM0R,WAAW,EAAhF,cAAuFlD,KAEzF,yBAAKhV,MAAO,CAAC0K,MAAO,QAASqC,OAAQ,SACnC,kBAACylB,GAAA,EAAD,CACExyB,MAAO,CAACyK,UAAW,QACnBjJ,MAAO8I,KAAK9D,MAAM0R,WAClBmJ,SAAU/W,KAAKy1B,kBACf9/B,MAAM,YACNwyB,IAAK,EACLvB,IAAKlc,EAAS,EACdiN,KAAM,IAAIjN,MAGP,QAMf,kBAACwsB,GAAA,EAAD,CACE5hC,QAAQ,aACRijC,OAAO,QACPxiC,KAAM62B,EACNz3B,QAAS6K,KAAKyvB,cAEZ7C,EAAgB,kBAAC,GAAD,CAAazb,UAAWA,EAAWlR,QAASA,EAAStK,MAxzD/D,YAwzDsF,MAGhG,kBAACuhC,GAAA,EAAD,CACE5hC,QAAQ,aACRijC,OAAO,QACPxiC,KAAMk3B,EACN93B,QAAS6K,KAAK4vB,eAEd,yBAAKl6B,MAAO,CAACyK,UAAW,SACtB,kBAACqR,GAAA,EAAD,CAASlc,QAAQ,SACf,kBAACD,EAAA,EAAD,CAAYC,QAAQ,YAAYoL,UAAWT,EAAQwR,OAAnD,wBAGA,yBAAK/Q,UAAWT,EAAQyR,OACxB,kBAACrP,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK2vB,YAAavF,KAAK,OAC1D,kBAAC,KAAD,CAAMrtB,KAAM+V,KAAuBvQ,KA1Y9B,SA0Y8C5M,MAx0DjD,aA00DJ,kBAAC0M,GAAA,EAAD,CAAY1M,MAAM,UAAUgB,QAASqJ,KAAK+vB,aAAc3F,KAAK,OAC3D,kBAAC,KAAD,CAAMrtB,KAAMy7B,KAAoBj2B,KA7Y3B,SA6Y2C5M,MA30D9C,cA80DN,6BACI4Z,EAAS,kBAAC,GAAD,CAAc4B,UAAWA,EAAWuY,WAAY1pB,KAAK0pB,WAAYzpB,QAASA,IAAc,QAKzG,kBAACi3B,GAAA,EAAD,CACE5hC,QAAQ,aACRijC,OAAO,QACPxiC,KAAMi3B,EACN73B,QAAS6K,KAAK0vB,eAEd,yBAAKh6B,MAAO,CAACyK,UAAW,SACtB,6BACIoP,EAAS,kBAAC,GAAD,CAAWzX,IAAKkI,KAAKxG,YAAY2X,KAAiB,QAKnE,kBAAC+lB,GAAA,EAAD,CACE5hC,QAAQ,aACRijC,OAAQ99B,KACR1E,KAAMo3B,EACNh4B,QAAS6K,KAAK+uB,gBAEd,6BACE,6BACG5B,EAAkB,kBAAC,GAAD,CAAU7tB,WAAYU,KAAKyuB,uBAAwB3uB,SAAUE,KAAKquB,sBAA0B,QAKrH,kBAAC6I,GAAA,EAAD,CACE5hC,QAAQ,aACRijC,OAAQl+B,KACRtE,KAAMq3B,EACNj4B,QAAS6K,KAAKuvB,mBAEd,6BACE,6BACGnC,EACC,kBAAC,GAAD,CACEjQ,OAAQnd,KAAKquB,oBACbhT,YAAarb,KAAKsuB,gBAClBlT,6BAA8Bpb,KAAKwwB,2BACnCtT,eAAgBld,KAAKgvB,qBACrBr5B,MA53DA,YA83DF,QAKPk3B,EAAkB,kBAAC,GAAD,CAAU13B,QAAS6K,KAAKqwB,eAAkB,KAE5DnD,EAAe,kBAAC,EAAD,CAAU/3B,QAAS6K,KAAKmwB,YAAe,KAEtD7C,EAAwB,kBAAC,GAAD,CAAgBn4B,QAAS6K,KAAKuwB,mBAAoB/3B,IAAKwH,KAAKxH,MAAU,KAE9FqiB,EAA8B,kBAAC,GAAD,CAAsB1lB,QAAS6K,KAAKmb,yBAA0BpkB,MAAOiJ,KAAKjJ,MAAOsI,OAAQ,UAAc,KAEtI,kBAACvJ,EAAA,EAAD,CACIC,KAAMu0B,EACNn1B,QAAS6K,KAAKwqB,qBAEd,kBAACx0B,EAAA,EAAD,KAAc,gDACd,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKwqB,qBAAtB,UAGA,kBAAC/zB,EAAA,EAAD,CAAQE,QAASqJ,KAAKyqB,uBAAwB/zB,WAAS,GAAvD,QAMR,kBAACZ,EAAA,EAAD,CACIC,KAAMs3B,EACNl4B,QAAS6K,KAAKiwB,mBAEd,kBAACj6B,EAAA,EAAD,KAAc,qEACd,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAASqJ,KAAKiwB,mBAAtB,UAGA,kBAACx5B,EAAA,EAAD,CAAQE,QAASqJ,KAAKkwB,qBAAsBx5B,WAAS,GAArD,QAMR,kBAACZ,EAAA,EAAD,CACIC,KAAMiK,KAAK9D,MAAM6wB,gBAEjB,kBAAC/2B,EAAA,EAAD,KAAc,YACZ,kBAACE,EAAA,EAAD,KACE,kBAAC2Z,GAAA,EAAD,yDAGA,kBAACuS,GAAA,EAAD,CACI1rB,WAAS,EACT+L,OAAO,QACPrG,GAAG,cACHimB,SAAU,SAAAC,GAAK,OAAK,EAAKwO,aAAexO,GACxCC,WAAS,KAGjB,kBAAC/rB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKi6B,aAAY,KAAxC,UAGA,kBAACn6B,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKi6B,aAAY,IAAOl6B,WAAS,GAAxD,QAMR,kBAACZ,EAAA,EAAD,CACIC,KAAMiK,KAAK9D,MAAM6xB,gBAEjB,kBAAC/3B,EAAA,EAAD,KAAcgK,KAAK9D,MAAMwwB,cACvB,kBAACx2B,EAAA,EAAD,KACE,kBAAC2Z,GAAA,EAAD,KACG7P,KAAK9D,MAAMuwB,cAGlB,kBAACj2B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKuG,SAAS,CAAC6wB,gBAAgB,MAAtD,YAMR,kBAAC0K,GAAA,EAAD,CACEr8B,GAAI,YACJrG,KAAMqgC,EACNsC,SAAU14B,KAAK9D,MAAMkwB,eACrBj3B,QAAS6K,KAAKsxB,YACdqH,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,SAGd,kBAAC,GAAD,CACE7mB,IAAKhS,KAAK/D,MAAM2S,OAAO,GAAG,EAC1B0Z,IAAKtoB,KAAK/D,MAAM2S,OAAO,GAAG,EAC1BmI,SAAU/W,KAAKmuB,gBAInB,kBAAC4K,GAAA,EAAD,CACEJ,aAAc,CACZC,SAAU,MACVC,WAAY,UAEd9iC,KAAM03B,EACNuL,iBAAkB,IAClBC,QAAQ,qCAGV,yBAAKvjC,MAAO,CAACmG,OAAQ,uBAClBmE,KAAK0yB,mBAGR,kBAACwE,GAAA,EAAD,CACE5hC,QAAQ,aACRijC,OAAO,QACPxiC,KAAM+3B,EACN34B,QAAS6K,KAAKwvB,gBAEd,6BACE,6BACG1B,EACC,kBAAC,GAAD,CACExZ,SAAUtU,KAAKsU,SACfgC,eAAgBtW,KAAK01B,uBACrB//B,MAlgEA,YAogEF,QAKR,6BACE,2BACEsD,KAAK,OACLmD,GAAG,YACH1G,MAAO,CAAE4a,QAAS,QAClBH,IAAKnQ,KAAK21B,SACV5e,SAAU,SAAAvZ,GAAC,OAAI,EAAKywB,kBAAkBzwB,EAAE/H,OAAOsB,QAC/CmiC,UAAQ,KAIZ,6BACE,2BACEjgC,KAAK,OACLmD,GAAG,gBACH1G,MAAO,CAAE4a,QAAS,QAClBH,IAAKnQ,KAAK1B,aACVyY,SAAU,SAAAvZ,GAAC,OAAI,EAAKoxB,mBAAmBpxB,EAAE/H,OAAOsB,QAChDoiC,gBAAgB,GAAGC,aAAa,GAAGC,UAAU,GAAGH,UAAQ,KAI5D,6BACE,2BACEjgC,KAAK,OACLmD,GAAG,cACH1G,MAAO,CAAE4a,QAAS,QAClBH,IAAKnQ,KAAK+1B,WACVhf,SAAU,SAAAvZ,GAAC,OAAI,EAAKkxB,iBAAiBlxB,EAAE/H,OAAOsB,QAC9CoiC,gBAAgB,GAAGC,aAAa,GAAGC,UAAU,GAAGH,UAAQ,U,GA78DlDv4B,iBA0/DHC,gBApCS,SAAC1E,GACvB,MAAO,CACLkgB,eAAgBlgB,EAAMkgB,eACtB3G,SAAUvZ,EAAMuZ,SAChB1e,MAAOmF,EAAMnF,MACbwF,OAAQL,EAAMK,OACdgT,OAAQrT,EAAMqT,OACdlU,KAAMa,EAAMb,KACZ0P,eAAgB7O,EAAM6O,eACtBwL,2BAA4Bra,EAAMqa,2BAClCC,yBAA0Bta,EAAMsa,yBAChC7G,0BAA2BzT,EAAMyT,0BACjClU,aAAcS,EAAMT,aACpBmT,OAAQ1S,EAAM0S,OACdxP,SAAUlD,EAAMkD,SAChBzD,aAAcO,EAAMP,iBAIG,SAACkF,GAC1B,MAAO,CACLmQ,cAAe,kBAAMnQ,EjB/qEd,CACH5H,KAzBmB,iBiBwsEvBm1B,kBAAmB,SAACz1B,GAAD,OAAUkI,EjB3qEH,SAAClI,GAC3B,MAAO,CACHM,KA9BuB,kBA+BvBupB,UAAW7pB,GiBwqEuByjB,CAAezjB,KACrDsY,UAAW,SAAC5V,GAAD,OAAUwF,EAASzF,GAAQC,KACtC8N,YAAa,SAACjS,GAAD,OAAW2J,EAAS1F,GAAUjE,KAC3CmR,aAAc,SAAC9M,GAAD,OAASsF,EAASvF,GAAUC,KAC1Ci3B,kBAAmB,SAAC/0B,GAAD,OAAWoD,EjB9nEJ,SAACpD,GAC3B,MAAO,CACHxE,KAxEwB,mBAyExB8R,eAAgBtN,GiB2nEmBsN,CAAetN,KACtDuJ,sBAAuB,SAACvL,GAAD,OAAkBoF,EAASrF,GAAmBC,KACrE+1B,eAAgB,SAACxf,EAAKsW,GAAN,OAAcznB,EjB/kET,SAACmR,EAAKsW,GAC3B,MAAO,CACHrvB,KAlHc,SAmHd2V,OAAQ,CAACoD,EAAKsW,IiB4kEqBgR,CAAUtnB,EAAKsW,KACtDwG,iBAAkB,SAAC1vB,GAAD,OAAcyB,EjBzkET,SAACzB,GACxB,MAAO,CACHnG,KAxHgB,WAyHhBmG,SAAUA,GiBskE2Bm6B,CAAYn6B,KACrD2U,gBAAiB,SAACpb,GAAD,OAAUkI,EAASnF,GAAc/C,KAClD6gC,eAAgB,SAAC7gC,GAAD,OAAUkI,EjBxiEnB,CACH5H,KArJoB,eAsJpB0U,OiBsiEyChV,KAC7Cue,cAAe,SAACngB,GAAD,OAAW8J,EAAS3F,GAAWnE,QAInC6J,CAA6CE,aAhlE7C,SAAAC,GAAK,MAAK,CACvB,UAAW,CACTwK,KAAM,CACFqF,gBAAiB7P,EAAM04B,QAAQC,OAAOC,QAI5CjoB,KAAM,CACJkoB,SAAU,GAGZC,KAAM,CACJvpB,QAAS,QAGXimB,WAAY,CACV7lB,YAAa3P,EAAME,QAAQ,IAG7BwQ,MAAO,CACLmoB,SAAU,GAGZhP,OAAQ,CACNhb,SAAU,WACVunB,OAAQp2B,EAAMo2B,OAAO2C,OAAS,EAC9BC,WAAYh5B,EAAMi5B,YAAYlb,OAAO,CAAC,QAAS,UAAW,CACxDmb,OAAQl5B,EAAMi5B,YAAYC,OAAOC,MACjCC,SAAUp5B,EAAMi5B,YAAYG,SAASC,iBAIzCC,YAAa,CACX5pB,WArCgB,IAsChBrQ,MAAM,eAAD,OAtCW,IAsCX,OACL25B,WAAYh5B,EAAMi5B,YAAYlb,OAAO,CAAC,QAAS,UAAW,CACxDmb,OAAQl5B,EAAMi5B,YAAYC,OAAOC,MACjCC,SAAUp5B,EAAMi5B,YAAYG,SAASG,kBAIzCj5B,KAAM,CACJiP,QAAS,QAGXwpB,OAAQ,CACN15B,MAlDgB,IAmDhBm6B,WAAY,EACZC,WAAY,UAGdC,WAAY,CACVr6B,MAxDgB,IAyDhB25B,WAAYh5B,EAAMi5B,YAAYlb,OAAO,QAAS,CAC5Cmb,OAAQl5B,EAAMi5B,YAAYC,OAAOC,MACjCC,SAAUp5B,EAAMi5B,YAAYG,SAASG,kBAIzCI,YAAY,aACVX,WAAYh5B,EAAMi5B,YAAYlb,OAAO,QAAS,CAC5Cmb,OAAQl5B,EAAMi5B,YAAYC,OAAOC,MACjCC,SAAUp5B,EAAMi5B,YAAYG,SAASC,gBAEvCO,UAAW,SACXv6B,MAAOW,EAAME,QAAQ,GAAK,GACzBF,EAAM65B,YAAYC,GAAG,MAAQ,CAC5Bz6B,MAAOW,EAAME,QAAQ,GAAK,IAK9Bm2B,QAASr2B,EAAM+5B,OAAO1D,QAEtBzY,QAAS,CACPib,SAAU,EACV3lB,QAASlT,EAAME,QAAQ,IAGzBX,aAAc,CACZY,SAAU,SACVuP,WAAY,YA+/D4C3P,CAAmBqrB,KC1sEzE4O,GAAc1E,QACW,cAA7B90B,OAAOy5B,SAASC,UAEe,UAA7B15B,OAAOy5B,SAASC,UAEhB15B,OAAOy5B,SAASC,SAASxiC,MACvB,2DAsCN,SAASyiC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT/yB,MAAK,SAAAozB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBx/B,QACfm/B,UAAUC,cAAcO,YAI1B9iC,QAAQC,IACN,iHAKEoiC,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBziC,QAAQC,IAAI,sCAGRoiC,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BxnB,OAAM,SAAAzK,GACLxQ,QAAQwQ,MAAM,4CAA6CA,M,mCC7FjE,IAAIyyB,GAAe,CACfxZ,UAAW,KACXvnB,OAAQ,KACRwa,SAAU,KACV1e,MAAO,KACPwF,OAAQ,KACRgT,OAAQ,IAAIxC,MAAM,IAAIC,MAAK,GAC3B3R,KAAM,KACN0P,eAAgB,EAChBzP,UAAW,KACXgZ,SAAU,KACViC,2BAA4B,EAC5BC,yBAA0B,EAC1B7G,0BAA2B,EAC3BlU,aAAc,GACdmT,OAAQ,CAAC,EAAE,GACXxP,SAAU,KACVI,aAAc,GACduM,cAAe,GACfpQ,aAAc,KACd8mB,WAAW,EACX9U,OAAQ,MAMGsuB,GAHDC,cCFC,WAAyC,IAAnBhgC,EAAkB,uDAAZ,GAAIigC,EAAQ,uCAEnD,OAAOA,EAAOljC,MAEZ,IpB7BqB,coB8BnB,MAAO,CACLupB,UAAWtmB,EAAMsmB,UACjBvnB,OAAQiB,EAAMjB,OACdmhC,SAAU,KACVrlC,MAAO,KACPwF,OAAQ,KACRgT,OAAQrT,EAAMqT,OAAO7X,KAAI,SAACoX,EAAIjS,GAAL,OAAWA,IAAMX,EAAM6O,gBAAyB+D,KACzEzT,KAAM,KACN0P,eAAgB7O,EAAM6O,eACtBzP,UAAWY,EAAMZ,UACjBgZ,SAAUpY,EAAMoY,SAChBiC,2BAA4Bra,EAAMqa,2BAClCC,yBAA0Bta,EAAMsa,yBAChC7G,0BAA2BzT,EAAMyT,0BACjClU,aAAc,KACdmT,OAAQ1S,EAAM0S,OACdxP,SAAUlD,EAAMkD,SAChBI,aAActD,EAAMsD,aACpBuM,cAAe7P,EAAM6P,cACrBpQ,aAAc,KACd8mB,UAAWvmB,EAAMumB,UACjB9U,OAAQ,KACRoD,IAAK,MAGT,IpBtDyB,kBoBuDrB,OAAO,gBACF7U,EADL,CAEEsmB,UAAW2Z,EAAO3Z,UAClBvnB,OAAQ,OAGd,IpB5DsB,kBoB6DlB,OAAO,gBACFiB,EADL,CAEEsmB,UAAW,KACXvnB,OAAQkhC,EAAOlhC,SAGrB,IpBlEwB,iBoBmEpB,OAAO,gBACFiB,EADL,CAEEuZ,SAAU0mB,EAAO1mB,WAGvB,IpBvEqB,coBwEjB,OAAO,gBACFvZ,EADL,CAEEnF,MAAOolC,EAAOplC,QAGpB,IpB5EsB,eoB6ElB,OAAO,gBACFmF,EADL,CAEEK,OAAQ4/B,EAAO5/B,SAGrB,IpBjFqB,coBkFjB,OAAO,gBACFL,EADL,CAEEqT,OAAQrT,EAAMqT,OAAO7X,KAAI,SAACoX,EAAIjS,GAAL,OAAWA,IAAMs/B,EAAOjlC,MAAMuG,MAAQ0+B,EAAOjlC,MAAMA,MAAQ4X,KACpFrT,aAAcS,EAAMT,aACpBmT,OAAQ1S,EAAM0S,OACdxP,SAAUlD,EAAMkD,SAChBI,aAActD,EAAMsD,aACpBuM,cAAe7P,EAAM6P,gBAG3B,IpB3FkB,WoB4Fd,OAAO,gBACF7P,EADL,CAEEb,KAAM8gC,EAAO9gC,KACbI,aAAcS,EAAMT,aACpBmT,OAAQ1S,EAAM0S,OACdxP,SAAUlD,EAAMkD,SAChBI,aAActD,EAAMsD,aACpBuM,cAAe7P,EAAM6P,gBAG3B,IpBrG0B,mBoBsGtB,OAAO,gBACF7P,EADL,CAEE6O,eAAgBoxB,EAAOpxB,eACvBtP,aAAcS,EAAMT,aACpBmT,OAAQ1S,EAAM0S,OACdxP,SAAUlD,EAAMkD,SAChBI,aAActD,EAAMsD,aACpBuM,cAAe7P,EAAM6P,gBAG3B,IpB/GoB,aoBgHhB,OAAO,gBACF7P,EADL,CAEEZ,UAAW6gC,EAAO7gC,UAClBG,aAAcS,EAAMT,aACpBmT,OAAQ1S,EAAM0S,OACdxP,SAAUlD,EAAMkD,SAChBI,aAActD,EAAMsD,aACpBuM,cAAe7P,EAAM6P,gBAG3B,IpBzH6B,sBoB0H3B,OAAO,gBACF7P,EADL,CAEET,aAAa,YAAK0gC,EAAO1gC,gBAG7B,IpB9HwB,iBoB+HtB,OAAO,gBACFS,EADL,CAEEoY,SAAU6nB,EAAO7nB,WAGrB,IpBnIuC,gCoBoIrC,OAAO,gBACFpY,EADL,CAEEqa,2BAA4B4lB,EAAO5lB,6BAGvC,IpBxIqC,8BoByInC,OAAO,gBACFra,EADL,CAEEsa,yBAA0B2lB,EAAO3lB,2BAGrC,IpB7IsC,+BoB8IpC,OAAO,gBACFta,EADL,CAEEyT,0BAA2BwsB,EAAOxsB,4BAGtC,IpBlJgB,SoBmJV,OAAO,gBACFzT,EADL,CAEET,aAAcS,EAAMT,aACpBmT,OAAQutB,EAAOvtB,OACfxP,SAAUlD,EAAMkD,SAChBI,aAActD,EAAMsD,aACpBuM,cAAe7P,EAAM6P,gBAG7B,IpB3JkB,WoB4JZ,OAAO,gBACF7P,EADL,CAEEkD,SAAU+8B,EAAO/8B,WAGzB,IpBhKsB,eoBiKhB,OAAO,gBACFlD,EADL,CAEEsD,aAAc28B,EAAO38B,eAG7B,IpBrKuB,gBoBsKjB,OAAO,gBACFtD,EADL,CAEE6P,cAAc,YAAKowB,EAAOpwB,iBAGlC,IpB1KsB,eoB2KhB,OAAO,gBACF7P,EADL,CAEEP,aAAcwgC,EAAOxgC,eAG7B,IpB/KmB,YoBgLb,OAAO,gBACFO,EADL,CAEEumB,WAAYvmB,EAAMumB,YAG1B,IpBpLsB,eoBqLpB,OAAO,gBACFvmB,EADL,CAEEyR,OAAQwuB,EAAOxuB,SAGnB,QACI,OAAOzR,KDrLuB8/B,GACpCz6B,OAAO86B,8BAAgC96B,OAAO86B,gC,oBElBlDC,KAAcC,KAAK,CACfC,OAAQ,CACJC,SAAU,CAAC,yBAA0B,qBAM7C,IAAM17B,GAAQ27B,aAAe,CACzBC,UAAW,CACPC,oBAAqB,CACjB9Q,MAAO,CACH5qB,SAAU,WAGlB27B,aAAc,CACVhD,KAAM,CACF,YAAa,CACTlkC,MAAM,cAMtB8jC,QAAS,CACLnjC,QAAS,CACLwmC,KAAM,WAEVvmC,UAAW,CACPumC,KAAM,WAEV7jC,KAAM,UAKd8jC,IAASC,OACL,kBAAC,IAAD,CAAUf,MAAOA,IACb,kBAAC,KAAD,CAAkBl7B,MAAUA,IACxB,kBAAC,GAAD,QAGR1I,SAASoN,eAAe,SH9BrB,SAAkB21B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIzoB,IAAIqqB,kBAAwB17B,OAAOy5B,SAASxlC,MACpD6J,SAAWkC,OAAOy5B,SAAS37B,OAIvC,OAGFkC,OAAO8C,iBAAiB,QAAQ,WAC9B,IAAM82B,EAAK,UAAM8B,kBAAN,sBAEPlC,KAgEV,SAAiCI,EAAOC,GAEtC8B,MAAM/B,GACH/yB,MAAK,SAAA0L,GAEJ,IAAMqpB,EAAcrpB,EAASspB,QAAQplC,IAAI,gBAEnB,MAApB8b,EAASupB,QACO,MAAfF,IAA8D,IAAvCA,EAAY1zB,QAAQ,cAG5C4xB,UAAUC,cAAcgC,MAAMl1B,MAAK,SAAAozB,GACjCA,EAAa+B,aAAan1B,MAAK,WAC7B7G,OAAOy5B,SAASwC,eAKpBtC,GAAgBC,EAAOC,MAG1BpnB,OAAM,WACLjb,QAAQC,IACN,oEArFAykC,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAMl1B,MAAK,WACjCrP,QAAQC,IACN,iHAMJkiC,GAAgBC,EAAOC,OGQ/BE,K","file":"static/js/main.2c01a9f5.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Link from '@material-ui/core/Link'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport packageJson from '../../package.json'\r\n\r\nconst AboutDlg = ({ onClose }) => {\r\n\r\n    const urlRepository = \"https://github.com/webnamics/u-dicom-viewer/\"\r\n\r\n    const linkRepository = (\r\n        <Typography variant='body2'>\r\n            <Link \r\n                href={urlRepository} \r\n                target='_blank'\r\n                style={{ color: '#999999' }}\r\n            >\r\n                https://github.com/webnamics/u-dicom-viewer\r\n            </Link>\r\n        </Typography>\r\n    )\r\n\r\n    const version = (\r\n        <Typography variant='body2' style={{ color: '#999999' }}>\r\n            {packageJson.version}\r\n        </Typography>        \r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <Dialog onClose={onClose} open={true}>\r\n            <DialogTitle onClose={onClose} disableTypography={true}>\r\n                <Typography variant='h6'>\r\n                    About <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\r\n                </Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText \r\n                            primary='Repository URL:' \r\n                            secondary={linkRepository} \r\n                        />\r\n                    </ListItem>    \r\n                    <ListItem>\r\n                        <ListItemText \r\n                            primary='Version:' \r\n                            secondary={version} \r\n                        />\r\n                    </ListItem>                        \r\n                </List>        \r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={onClose}>\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AboutDlg\r\n","import Dexie from 'dexie'\r\n\r\nconst fs = new Dexie('fsDB')\r\n\r\nfs.version(1).stores({ \r\n    files: '[parent+name], parent, name, type' \r\n})\r\n\r\nfs.open()\r\n\r\nexport default fs\r\n","import { \r\n    isAndroid,\r\n    isFirefox,\r\n    isMobile, \r\n    isTablet \r\n  } from 'react-device-detect'\r\nimport { \r\n    SETTINGS_SAVEAS, \r\n    SETTINGS_SAVEINTO,\r\n    SETTINGS_DCMHEADER, \r\n    SETTINGS_OVERLAY, \r\n    SETTINGS_MEASUREMENT,\r\n    SETTINGS_FSVIEW,\r\n    SETTINGS_DICOMDIRVIEW,    \r\n    SETTINGS_MPRINTERPOLATION,\r\n} from './constants/settings'\r\n\r\n// ---------------------------------------------------------------------------------------------- DICOM\r\n\r\nexport function getDicomPatientName(image) {\r\n    const value = image.data.string('x00100010')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\r\n\r\nexport function getDicomStudyId(image) {\r\n    const value = image.data.string('x00200010')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomStudyDate(image) {\r\n    const value = image.data.string('x00080020')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomStudyTime(image) {\r\n    const value = image.data.string('x00080030')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomStudyDescription(image) {\r\n    const value = image.data.string('x00081030')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomSeriesDate(image) {\r\n    const value = image.data.string('x00080021')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomSeriesTime(image) {\r\n    const value = image.data.string('x00080031')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomSeriesDescription(image) {\r\n    const value = image.data.string('x0008103e')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\r\n\r\nexport function getDicomSeriesNumber(image) {\r\n    const value = image.data.string('x00200011')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return parseFloat(value)\r\n}\r\n\r\nexport function getDicomModality(image) {\r\n    const value = image.data.string('x00080060')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\r\n\r\nexport function getDicomPixelSpacing(image, index) {\r\n    const value = image.data.string('x00280030')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    const pixelSpacing = value.split('\\\\')\r\n    return pixelSpacing[index]\r\n}\r\n\r\nexport function getDicomSpacingBetweenSlice(image) {\r\n    const value = image.data.string('x00180088')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return parseFloat(value)\r\n}\r\n\r\nexport function getDicomSliceThickness(image) {\r\n    const value = image.data.string('x00180050')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return parseFloat(value)\r\n}\r\n\r\nexport function getDicomSliceLocation(image) {\r\n    const value = image.data.string('x00201041')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return parseFloat(value)\r\n}\t\r\n\r\nexport function getDicomInstanceNumber(image) {\r\n    const value = image.data.string('x00200013')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value\r\n}\t\r\n\r\nexport function getDicomRows(image) {\r\n    const value = image.data.uint16('x00280010')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value    \r\n}\r\n\r\nexport function getDicomColumns(image) {\r\n    const value = image.data.uint16('x00280011')\r\n    if (value === undefined) {\r\n        return\r\n    }\r\n    return value    \r\n} \r\n\r\n// see https://stackoverflow.com/questions/37730772/get-distance-between-slices-in-dicom\r\n//\r\nexport function getDicomSliceDistance(image) {\r\n    try {\r\n        const ipp = image.data.string('x00200032').split('\\\\') // Image Position Patient\r\n        //console.log(\"imagePosition: \", ipp)\r\n        let topLeftCorner = new Array(3).fill(0)\r\n        topLeftCorner[0] = parseFloat(ipp[0]) // X pos of frame (Top left) in real space\r\n        topLeftCorner[1] = parseFloat(ipp[1]) // Y pos of frame (Top left) in real space\r\n        topLeftCorner[2] = parseFloat(ipp[2]) // Z pos of frame (Top left) in real space\r\n        //console.log(\"topLeftCorner: \", topLeftCorner)\r\n\r\n        const iop = image.data.string('x00200037').split('\\\\') // Image Orientation Patient\r\n        //console.log(\"values: \", iop)\r\n        let v = new Array(3).fill(0).map(() => new Array(3).fill(0))\r\n\r\n        v[0][0] = parseFloat(iop[0]) // the x direction cosines of the first row X\r\n        v[0][1] = parseFloat(iop[1]) // the y direction cosines of the first row X\r\n        v[0][2] = parseFloat(iop[2]) // the z direction cosines of the first row X\r\n        v[1][0] = parseFloat(iop[3]) // the x direction cosines of the first column Y\r\n        v[1][1] = parseFloat(iop[4]) // the y direction cosines of the first column Y\r\n        v[1][2] = parseFloat(iop[5]) // the z direction cosines of the first column Y \r\n\r\n        //console.log(\"v: \", v)\r\n\r\n        // calculate the slice normal from IOP\r\n        v[2][0] = v[0][1] * v[1][2] - v[0][2] * v[1][1]\r\n        v[2][1] = v[0][2] * v[1][0] - v[0][0] * v[1][2]\r\n        v[2][2] = v[0][0] * v[1][1] - v[0][1] * v[1][0]\r\n        \r\n        let dist = 0\r\n        for (let i = 0; i < 3; ++i) \r\n        dist += v[2][i] * topLeftCorner[i]\r\n        \r\n        return dist\r\n    } catch(error) {\r\n        return 0\r\n    }\r\n}\r\n\r\nexport function dicomDateToLocale(dcmDate) {\r\n    const date = new Date(dcmDate.substring(0, 4)+'-'+dcmDate.substring(4, 6)+'-'+dcmDate.substring(6))\r\n    const localeDate = date.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' })\r\n    return localeDate\r\n}\r\n\r\nexport function dicomTimeToStr(dcmTime) {\r\n    const time = dcmTime.substring(0, 2)+':'+dcmTime.substring(2, 4)+':'+dcmTime.substring(4, 6)\r\n    return time\r\n}\r\n\r\nexport function dicomDateTimeToLocale(dateTime) {\r\n    const date = new Date(dateTime.substring(0, 4)+'-'+dateTime.substring(4, 6)+'-'+dateTime.substring(6, 8))\r\n    const time = dateTime.substring(9, 11)+':'+dateTime.substring(11, 13)+':'+dateTime.substring(13, 15)\r\n    const localeDate = date.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' })\r\n    return `${localeDate} - ${time}`\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------- DICOM\r\n  \r\n\r\nexport function groupBy(list, keyGetter) {\r\n    const map = new Map()\r\n    list.forEach((item) => {\r\n        const key = keyGetter(item)\r\n        const collection = map.get(key)\r\n        if (!collection) {\r\n            map.set(key, [item])\r\n        } else {\r\n            collection.push(item)\r\n        }\r\n    })\r\n    return map\r\n  }\r\n  \r\nexport function objectIsEmpty(obj) {\r\n    if (obj === null || obj === undefined || Array.isArray(obj) || typeof obj !== 'object') {\r\n        return true\r\n    }\r\n    return Object.getOwnPropertyNames(obj).length === 0\r\n}\r\n\r\nexport function capitalize(str) {\r\n    if (str === undefined) \r\n        return ''\r\n    else \r\n        return str.charAt(0).toUpperCase() + str.slice(1)\r\n}\r\n\r\n// To see the console output set the key 'debug-u-dicom-viewer' in \r\n// 'Storage->Local Storage' panel of your browser Develop Tool\r\nexport function log() {\r\n    let log = localStorage.getItem('debug-u-dicom-viewer')\r\n    if (log === null) {\r\n        console.log = function(){}\r\n    }\r\n}\r\n\r\nexport function isInputDirSupported() {\r\n    var tmpInput = document.createElement('input')\r\n    if ('webkitdirectory' in tmpInput \r\n        || 'mozdirectory' in tmpInput \r\n        || 'odirectory' in tmpInput \r\n        || 'msdirectory' in tmpInput \r\n        || 'directory' in tmpInput) return true\r\n    return false\r\n}\r\n\r\nexport function isUrlImage(url) {\r\n    if (url === undefined || url === null) return false\r\n    return(url.match(/\\.(jpeg|jpg|png)$/) != null)\r\n}\r\n\r\nexport function isFileImage(file) {\r\n    if (file === undefined || file === null) return false \r\n    const acceptedImageTypes = ['image/jpeg', 'image/png'] // 'image/gif', \r\n    return file && acceptedImageTypes.includes(file['type'])\r\n}\r\n\r\nexport function isFsFileImage(fsItem) {\r\n    console.log('isFsFileImage: ', fsItem)\r\n    if (fsItem === undefined || fsItem === null) return false\r\n    return fsItem.type.toLowerCase() === 'jpeg' || fsItem.type.toLowerCase() === 'png'\r\n}\r\n\r\nexport function getFileNameCorrect(filename) {\r\n    if (isAndroid && isFirefox) { // possible uncorrect .null extension is found in Android Firefox, it's a bug? CHECK IT\r\n        const ext = getFileExt(filename)\r\n        if (ext === 'null') {\r\n            return getFileName(filename)\r\n        }\r\n    }\r\n    return filename \r\n}\r\n\r\nexport function getFileExt(file) {\r\n    const re = /(?:\\.([^.]+))?$/\r\n    const ext = re.exec(file)[1]\r\n    if (ext === undefined) {\r\n        return 'dcm'\r\n    }\r\n    return ext\r\n}\r\n\r\nexport function getFileExtReal(file) {\r\n    const re = /(?:\\.([^.]+))?$/\r\n    const ext = re.exec(file)[1]\r\n    if (ext === undefined) {\r\n        return ''\r\n    }\r\n    return ext\r\n}\r\n\r\nexport function getFileName(file) {\r\n    const name = file.replace(/\\.[^.$]+$/, '')\r\n    if (name === undefined) {\r\n        return ''\r\n    }\r\n    return name    \r\n}\r\n\r\nexport function formatBytes(bytes, decimals = 2) {\r\n    if (bytes === '') return ''\r\n    if (bytes === 0) return '0 Bytes'\r\n    const k = 1024\r\n    const dm = decimals < 0 ? 0 : decimals\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i]\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------------------------------------- SETTINGS \r\n\r\nexport function getSettingsSaveAs() {\r\n    let saveAs = localStorage.getItem(SETTINGS_SAVEAS)\r\n    if (saveAs === null) {\r\n      saveAs = \"png\"\r\n      localStorage.setItem(SETTINGS_SAVEAS, saveAs)\r\n    }\r\n    return saveAs\r\n}\r\n\r\nexport function setSettingsSaveAs(value) {\r\n    localStorage.setItem(SETTINGS_SAVEAS, value)  \r\n}\r\n\r\nexport function getSettingsSaveInto() {\r\n    let saveInto = localStorage.getItem(SETTINGS_SAVEINTO)\r\n    if (saveInto === null) {\r\n        saveInto = \"local\"\r\n      localStorage.setItem(SETTINGS_SAVEINTO, saveInto)\r\n    }\r\n    return saveInto\r\n}\r\n\r\nexport function setSettingsSaveInto(value) {\r\n    localStorage.setItem(SETTINGS_SAVEINTO, value)  \r\n}\r\n\r\nexport function getSettingsDcmHeader() {\r\n    let exportAs = localStorage.getItem(SETTINGS_DCMHEADER)\r\n    if (exportAs === null) {\r\n      exportAs = \"json\"\r\n      localStorage.setItem(SETTINGS_DCMHEADER, exportAs)\r\n    }  \r\n    return exportAs\r\n}\r\n\r\nexport function setSettingsDcmHeader(value) {\r\n    localStorage.setItem(SETTINGS_DCMHEADER, value)  \r\n}\r\n\r\nexport function getSettingsOverlay() {\r\n    let overlay = localStorage.getItem(SETTINGS_OVERLAY)\r\n    if (overlay === null) {\r\n      overlay = \"1\"\r\n      localStorage.setItem(SETTINGS_OVERLAY, overlay)\r\n    }\r\n    return overlay === '1'\r\n}\r\n\r\nexport function setSettingsOverlay(value) {\r\n    localStorage.setItem(SETTINGS_OVERLAY, value ? '1' : '0')  \r\n}\r\n\r\nexport function getSettingsMeasurement() {\r\n    let measurement = localStorage.getItem(SETTINGS_MEASUREMENT)\r\n    if (measurement === null) {\r\n        measurement = '1'\r\n        localStorage.setItem(SETTINGS_MEASUREMENT, measurement)\r\n    }\r\n    return measurement\r\n}\r\n\r\nexport function setSettingsMeasurement(value) {\r\n    localStorage.setItem(SETTINGS_MEASUREMENT, value)  \r\n}\r\n\r\nexport function getSettingsFsView() {\r\n    let view = localStorage.getItem(SETTINGS_FSVIEW)\r\n    if (view === null) {\r\n        view = isMobile && !isTablet ? 'bottom' : 'right'\r\n        localStorage.setItem(SETTINGS_FSVIEW, view)\r\n    }\r\n    return view\r\n}\r\n\r\nexport function setSettingsFsView(value) {\r\n    localStorage.setItem(SETTINGS_FSVIEW, value)  \r\n}\r\n\r\nexport function getSettingsDicomdirView() {\r\n    let view = localStorage.getItem(SETTINGS_DICOMDIRVIEW)\r\n    if (view === null) {\r\n        view = isMobile && !isTablet ? 'bottom' : 'right'\r\n        localStorage.setItem(SETTINGS_DICOMDIRVIEW, view)\r\n    }\r\n    return view\r\n}\r\n\r\nexport function setSettingsDicomdirView(value) {\r\n    localStorage.setItem(SETTINGS_DICOMDIRVIEW, value)  \r\n}\r\n\r\nexport function getSettingsMprInterpolation() {\r\n    let method = localStorage.getItem(SETTINGS_MPRINTERPOLATION)\r\n    if (method === null) {\r\n        method = 'weightedlinear'\r\n        localStorage.setItem(SETTINGS_MPRINTERPOLATION, method)\r\n    }\r\n    return method\r\n}\r\n\r\nexport function setSettingsMprInterpolation(value) {\r\n    localStorage.setItem(SETTINGS_MPRINTERPOLATION, value)  \r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------- SETTINGS \r\n\r\n\r\n/**\r\n * Converts a value to a string appropriate for entry into a CSV table.  E.g., a string value will be surrounded by quotes.\r\n * @param {string|number|object} theValue\r\n */\r\nfunction toCsvValue(theValue) {\r\n    let t = typeof theValue,\r\n        output\r\n\r\n    let sDelimiter = '\"'\r\n\r\n    if (t === 'undefined' || t === null) {\r\n        output = ''\r\n    } else if (t === 'string') {\r\n        output = sDelimiter + theValue.replace(/\"/g, '\"\"') + sDelimiter\r\n    } else {\r\n        output = sDelimiter + String(theValue).replace(/\"/g, '\"\"') + sDelimiter\r\n    }\r\n\r\n    return output\r\n}\r\n\r\n/**\r\n * Converts an array of objects (with identical schemas) into a CSV table.\r\n * @param {Array} objArray An array of objects.  Each object in the array must have the same property list.\r\n * @param {string} cDelimiter The column delimiter.  Defaults to a comma (,) if omitted.\r\n * @return {string} The CSV equivalent of objArray.\r\n */\r\nexport function toCsv(objArray, cDelimiter) {\r\n    var i,\r\n        l,\r\n        names = [],\r\n        name,\r\n        value,\r\n        obj,\r\n        row,\r\n        output = '',\r\n        n,\r\n        nl\r\n\r\n    // Initialize default parameters.\r\n\r\n    let sDelimiter = '\"'\r\n    if (typeof cDelimiter === 'undefined' || cDelimiter === null) {\r\n        cDelimiter = ','\r\n    }\r\n\r\n    for (i = 0, l = objArray.length; i < l; i += 1) {\r\n        // Get the names of the properties.\r\n        obj = objArray[i]\r\n        row = ''\r\n        if (i === 0) {\r\n            // Loop through the names\r\n            for (name in obj) {\r\n                if (obj.hasOwnProperty(name)) {\r\n                    names.push(name)\r\n                    row += [\r\n                        sDelimiter,\r\n                        name.replace(/\"/g, '\"\"'),\r\n                        sDelimiter,\r\n                        cDelimiter,\r\n                    ].join('')\r\n                }\r\n            }\r\n            row = row.substring(0, row.length - 1)\r\n            output += row\r\n        }\r\n\r\n        output += '\\n'\r\n        row = ''\r\n        for (n = 0, nl = names.length; n < nl; n += 1) {\r\n            name = names[n]\r\n            value = obj[name]\r\n            if (n > 0) {\r\n                row += cDelimiter\r\n            }\r\n            row += toCsvValue(value)\r\n        }\r\n        output += row\r\n    }\r\n\r\n    return output\r\n}\r\n\r\n","\r\nexport const SETTINGS_SAVEAS = 'saveAs'\r\nexport const SETTINGS_SAVEINTO = 'saveInto'\r\nexport const SETTINGS_DCMHEADER = 'exportAs'\r\nexport const SETTINGS_OVERLAY = 'overlay'\r\nexport const SETTINGS_MEASUREMENT = 'measurement'\r\nexport const SETTINGS_FSVIEW = 'fsView'\r\nexport const SETTINGS_DICOMDIRVIEW = 'dicomdirView'\r\nexport const SETTINGS_MPRINTERPOLATION = 'mprInterpolation'\r\n","export const CLEAR_STORE = 'CLEAR_STORE'\r\nexport const LOCALFILE_STORE = 'LOCALFILE_STORE'\r\nexport const FSFILE_STORE = 'LOCALFILE_STORE'\r\nexport const ALLFILES_STORE = 'ALLFILES_STORE'\r\nexport const FILES_STORE = 'FILES_STORE'\r\nexport const SERIES_STORE = 'SERIES_STORE'\r\nexport const DCM_IS_OPEN = 'DCM_IS_OPEN'\r\nexport const DCM_TOOL = 'DCM_TOOL'\r\nexport const ACTIVE_DCM_INDEX = 'ACTIVE_DCM_INDEX'\r\nexport const ACTIVE_DCM = 'ACTIVE_DCM'\r\nexport const ACTIVE_MEASUREMENTS = 'ACTIVE_MEASUREMENTS'\r\nexport const EXPLORER_STORE = 'EXPLORER_STORE'\r\nexport const EXPLORER_ACTIVE_PATIENT_INDEX = 'EXPLORER_ACTIVE_PATIENT_INDEX'\r\nexport const EXPLORER_ACTIVE_STUDY_INDEX = 'EXPLORER_ACTIVE_STUDY_INDEX'\r\nexport const EXPLORER_ACTIVE_SERIES_INDEX = 'EXPLORER_ACTIVE_SERIES_INDEX'\r\nexport const LAYOUT = 'LAYOUT'\r\nexport const DICOMDIR = 'DICOMDIR'\r\nexport const FSCURRENTDIR = 'FSCURRENTDIR'\r\nexport const FSCURRENTLIST = 'FSCURRENTLIST'\r\nexport const FSZIPPEDFILE = 'FSZIPPEDFILE'\r\nexport const FSREFRESH = 'FSREFRESH'\r\nexport const VOLUME_STORE = 'VOLUME_STORE'\r\n\r\nexport const clearStore = () => {\r\n    return { \r\n        type: CLEAR_STORE, \r\n    }\r\n}\r\n\r\nexport const localFileStore = (file) => {\r\n    return { \r\n        type: LOCALFILE_STORE, \r\n        localFile: file\r\n    }\r\n}\r\n\r\nexport const fsFileStore = (file) => {\r\n    return { \r\n        type: FSFILE_STORE, \r\n        fsFile: file\r\n    }\r\n}\r\n\r\nexport const allFilesStore = (files) => {\r\n    return { \r\n        type: ALLFILES_STORE, \r\n        allFiles: files\r\n    }\r\n}\r\n\r\nexport const filesStore = (files) => {\r\n    return { \r\n        type: FILES_STORE, \r\n        files: files\r\n    }\r\n}\r\n\r\nexport const seriesStore = (series) => {\r\n    return { \r\n        type: SERIES_STORE, \r\n        series: series\r\n    }\r\n}\r\n\r\nexport const dcmIsOpen = (value) => {\r\n    return { \r\n        type: DCM_IS_OPEN, \r\n        value: value\r\n    }\r\n}\r\n\r\nexport const dcmTool = (tool) => {\r\n    return { \r\n        type: DCM_TOOL, \r\n        tool: tool \r\n    }\r\n}\r\n\r\nexport const activeDcmIndex = (index) => {\r\n    return { \r\n        type: ACTIVE_DCM_INDEX, \r\n        activeDcmIndex: index \r\n    }\r\n}\r\n\r\nexport const activeDcm = (dcm) => {\r\n    return { \r\n        type: ACTIVE_DCM, \r\n        activeDcm: dcm \r\n    }\r\n}\r\n\r\nexport const activeMeasurements = (measurements) => {\r\n    return { \r\n        type: ACTIVE_MEASUREMENTS, \r\n        measurements: measurements \r\n    }\r\n}\r\n\r\nexport const explorer = (data) => {\r\n    return { \r\n        type: EXPLORER_STORE, \r\n        explorer: data \r\n    }\r\n}\r\n\r\nexport const explorerActivePatientIndex = (index) => {\r\n    return { \r\n        type: EXPLORER_ACTIVE_PATIENT_INDEX, \r\n        explorerActivePatientIndex: index \r\n    }\r\n}\r\n\r\nexport const explorerActiveStudyIndex = (index) => {\r\n    return { \r\n        type: EXPLORER_ACTIVE_STUDY_INDEX, \r\n        explorerActiveStudyIndex: index \r\n    }\r\n}\r\n\r\nexport const explorerActiveSeriesIndex = (index) => {\r\n    return { \r\n        type: EXPLORER_ACTIVE_SERIES_INDEX, \r\n        explorerActiveSeriesIndex: index \r\n    }\r\n}\r\n\r\nexport const setLayout = (row, col) => {\r\n    return { \r\n        type: LAYOUT, \r\n        layout: [row, col]\r\n    }\r\n}\r\n\r\nexport const setDicomdir = (dicomdir) => {\r\n    return { \r\n        type: DICOMDIR, \r\n        dicomdir: dicomdir\r\n    }\r\n}\r\n\r\nexport const setFsCurrentDir = (dir) => {\r\n    return { \r\n        type: FSCURRENTDIR, \r\n        fsCurrentDir: dir\r\n    }\r\n}\r\n\r\nexport const setFsCurrentList = (list) => {\r\n    return { \r\n        type: FSCURRENTLIST, \r\n        fsCurrentList: list\r\n    }\r\n}\r\n\r\nexport const setZippedFile = (file) => {\r\n    return { \r\n        type: FSZIPPEDFILE, \r\n        fsZippedFile: file\r\n    }\r\n}\r\n\r\nexport const doFsRefresh = () => {\r\n    return { \r\n        type: FSREFRESH,\r\n    }\r\n}\r\n\r\nexport const setVolume = (volume) => {\r\n    return { \r\n        type: VOLUME_STORE,\r\n        volume: volume,\r\n    }\r\n}\r\n","import React, { Fragment, PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport * as dicomParser from 'dicom-parser'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport fs from '../fs/fs'\r\nimport {\r\n  dicomDateToLocale,\r\n  dicomTimeToStr,\r\n  getSettingsDicomdirView,\r\n} from '../functions'\r\nimport {\r\n  fsFileStore,\r\n} from '../actions'\r\n\r\nconst styles = theme => ({\r\n  study: { \r\n    paddingLeft: theme.spacing(3) \r\n  },\r\n  series: { \r\n    paddingLeft: theme.spacing(5) \r\n  },\r\n  images: { \r\n    paddingLeft: theme.spacing(7) \r\n  },  \r\n  listItemText:{\r\n    fontSize:'0.80em',\r\n  }\r\n})\r\n\r\nconst styleScrollbar = {\r\n  height: 'calc(100vh - 48px)',\r\n}\r\n\r\nconst ExpandIcon = ({ expanded }) => expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />\r\n\r\nclass Dicomdir extends PureComponent {\r\n    constructor(props) {\r\n      super(props)\r\n      this.output = null\r\n    }\r\n\r\n    state = {\r\n      data: [],\r\n      expanded: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.dicomdir.origin === 'local')\r\n          this.openDicomdir(this.props.dicomdir.dicomdir)   \r\n        else \r\n          this.openDicomdirFs(this.props.dicomdir.dicomdir)               \r\n    }\r\n\r\n    buildData = (id = null) => {\r\n      let output = this.output\r\n      if (id !== null) {\r\n        output[id].expanded = !output[id].expanded\r\n      }\r\n      let images = []\r\n      let series = []\r\n      let study = []\r\n      let patient = []\r\n      output.slice().reverse().forEach((obj, i) => {\r\n        if (obj.key === 'image') {\r\n          images.unshift({id: obj.id, key: obj.key, path: obj.path, value: obj.value})\r\n        } else if (obj.key === 'series') {\r\n          series.unshift({id: obj.id, key: obj.key, number: obj.number, value: obj.value, expanded: obj.expanded, children: images})\r\n          images = []\r\n        } else if (obj.key === 'study') {\r\n          //console.log('study obj: ', obj)\r\n          study.unshift({id: obj.id, key: obj.key, value: obj.value, expanded: obj.expanded, children: series})\r\n          series = []\r\n        } else if (obj.key === 'patient') {\r\n          patient.unshift({id: obj.id, key: obj.key, value: obj.value, expanded: obj.expanded, children: study})\r\n          study = []\r\n        }\r\n      })\r\n      this.setState({data: patient})\r\n    }\r\n\r\n    buildOutput = (dataset) => {\r\n      //console.log('dataset: ', dataset)\r\n      let data = dataset.elements.x00041220.items\r\n      let output = []\r\n      if (data) {\r\n          data.forEach((e, index) => {\r\n            const id = index.toString()\r\n            if (e.dataSet.string('x00041430') === 'PATIENT') {\r\n                //console.log(\"Patient Name - \"+e.dataSet.string('x00100010'))\r\n                output.push({id: id, key: 'patient', value: e.dataSet.string('x00100010'), expanded: true})\r\n            } else if (e.dataSet.string('x00041430') === 'STUDY') {\r\n                //console.log(\"Study - \"+e.dataSet.string('x00081030'))\r\n                const value = `${dicomDateToLocale(e.dataSet.string('x00080020'))} - ${dicomTimeToStr(e.dataSet.string('x00080030'))}`\r\n                output.push({id: id, key: 'study', value: value, expanded: true})\r\n            } else if (e.dataSet.string('x00041430') === 'SERIES') {\r\n                //console.log(\"Series number - \"+e.dataSet.string('x00200011'))\r\n                output.push({id: id, key: 'series', number: e.dataSet.string('x00200011'), value: e.dataSet.string('x00080060'), expanded: true})\r\n            } else if (e.dataSet.string('x00041430') === 'IMAGE') {\r\n                //console.log(\"Image - \"+e.dataSet.string('x00041500'))\r\n                output.push({id: id, key: 'image', path: e.dataSet.string('x00041500').replace(/\\\\/g, '/'), value: e.dataSet.string('x00041500').split('\\\\').pop(), expanded: true})\r\n            }              \r\n          })\r\n      }\r\n      //console.log('output: ', output)\r\n      return output\r\n    }\r\n\r\n    openDicomdir = (file) => {\r\n        var reader = new FileReader()\r\n        reader.onload = (file) => {\r\n          let arrayBuffer = reader.result\r\n          let byteArray = new Uint8Array(arrayBuffer)\r\n          // Invoke the paresDicom function and get back a DataSet object with the contents\r\n          let dataset = null\r\n          let output = []\r\n          try {\r\n              dataset = dicomParser.parseDicom(byteArray)\r\n              output = this.buildOutput(dataset)\r\n          } catch(err) {\r\n              if (typeof err.dataSet != 'undefined') {\r\n                  output = this.buildOutput(err.dataSet)\r\n              }\r\n          }\r\n          this.output = output\r\n          this.buildData()\r\n        }\r\n\r\n        reader.readAsArrayBuffer(file)\r\n    }\r\n\r\n    openDicomdirFs = (fsItem) => {\r\n      let byteArray = new Uint8Array(fsItem.data)\r\n      let dataset = null\r\n      let output = []\r\n      try {\r\n        dataset = dicomParser.parseDicom(byteArray)\r\n        output = this.buildOutput(dataset)\r\n      } catch(err) {\r\n        if (typeof err.dataSet != 'undefined') {\r\n          output = this.buildOutput(err.dataSet)\r\n        }\r\n      }\r\n      this.output = output\r\n      this.buildData()\r\n    }\r\n\r\n    onClick = (id) => {\r\n      const obj = this.output.find(x => x.id === id)\r\n      if (obj.key === 'image') {\r\n        if (this.props.dicomdir.origin === 'local') { // load it from local\r\n          const file = this.props.dicomdir.files.find(x => x.name === obj.value)\r\n          this.props.onOpenFile(file)\r\n        } else { // load it from sandboxed file system\r\n          let components = obj.path.split('/')\r\n          const name = components.pop()\r\n          components.unshift(this.props.fsCurrentDir)\r\n          const parent = components.join('/')\r\n          fs.files.where({parent: parent, name: name}).first((item) => {\r\n            this.props.setFsFileStore(item)\r\n            this.props.onOpenFs(item)\r\n          })\r\n        }\r\n      } else {\r\n        this.buildData(id)\r\n      }\r\n    }\r\n\r\n    studyText = (study) => {\r\n      //console.log('study: ', study)\r\n      return study.value\r\n    }\r\n\r\n    render() {   \r\n      const { classes } = this.props\r\n\r\n      let styleComponent = null\r\n      if (getSettingsDicomdirView() === 'bottom') {\r\n          styleComponent = {marginTop: '0px', height: '275px'}\r\n      } else {\r\n          styleComponent = {marginTop: '48px', width: '350px'}\r\n      }\r\n\r\n      return (\r\n        <PerfectScrollbar>\r\n        <div style={styleScrollbar}>  \r\n        <div style={styleComponent}>\r\n          \r\n          <List>\r\n            {this.state.data.map(({ ...patient }, index) => (\r\n              <Fragment key={index}>\r\n                <ListItem button onClick={() => this.onClick(patient.id)}>\r\n                  <ListItemText primary={patient.value} secondary={patient.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\r\n                  <ExpandIcon expanded={patient.expanded} />\r\n                </ListItem>\r\n                <Collapse in={patient.expanded}>\r\n                  {patient.children.map(study => (\r\n                    <Fragment key={study.id}>\r\n                      <ListItem key={study.id} button dense onClick={() => this.onClick(study.id)} className={classes.study}>\r\n                        <ListItemText primary={this.studyText(study)} secondary={study.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\r\n                        <ExpandIcon expanded={study.expanded} />\r\n                      </ListItem>\r\n                      <Collapse in={study.expanded}>\r\n                        {study.children.map(series => (\r\n                          <Fragment key={series.id}>\r\n                            <ListItem key={series.id} button dense onClick={() => this.onClick(series.id)} className={classes.series}>\r\n                              <ListItemText primary={`${series.value} (${series.number})`} secondary={series.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\r\n                              <ExpandIcon expanded={study.expanded} />\r\n                            </ListItem>\r\n                            <Collapse in={series.expanded}>\r\n                              {series.children.map(images => (\r\n                                <ListItem key={images.id} button dense onClick={() => this.onClick(images.id)} className={classes.images}>\r\n                                  <ListItemText primary={images.value} secondary={images.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\r\n                                </ListItem>\r\n                              ))}\r\n                            </Collapse>\r\n                          </Fragment>\r\n                        ))}\r\n                      </Collapse>\r\n                    </Fragment>\r\n                  ))}\r\n                </Collapse>\r\n              </Fragment>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        </div>\r\n        </PerfectScrollbar>\r\n      )\r\n    }\r\n}   \r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      dicomdir: state.dicomdir,\r\n      fsCurrentDir: state.fsCurrentDir,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFsFileStore: (file) => dispatch(fsFileStore(file))\r\n  }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dicomdir))\r\n","// The table below was generated by running the following javascript in the console window while\n// viewing the HTML version of the standard here:\n// DICOM Standard here: http://dicom.nema.org/medical/dicom/current/output/html/part06.html\n// see the blog post about it here: http://chafey.blogspot.com/2015/08/parsing-dicom-standard-with-javascript.html\n\n/*\n (function () {\n var elements = document.querySelectorAll('#table_A-1 ~ div tbody tr');\n var result = \"\";for(var i=0; i < elements.length; i++) {\n result += \"'\" + elements[i].childNodes[1].childNodes[1].innerText.replace(/[^\\x20-\\x7E]+/g, '')  + \"':'\" +\n elements[i].childNodes[3].childNodes[1].innerText.replace(/[^\\x20-\\x7E]+/g, '') + \"',\\n\";\n }\n return result;\n })();\n */\n\nexport const uids = {\n  '1.2.840.10008.1.1':'Verification SOP Class',\n  '1.2.840.10008.1.2':'Implicit VR Little Endian: Default Transfer Syntax for DICOM',\n  '1.2.840.10008.1.2.1':'Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.99':'Deflated Explicit VR Little Endian',\n  '1.2.840.10008.1.2.2':'Explicit VR Big Endian (Retired)',\n  '1.2.840.10008.1.2.4.50':'JPEG Baseline (Process 1): Default Transfer Syntax for Lossy JPEG 8 Bit Image Compression',\n  '1.2.840.10008.1.2.4.51':'JPEG Extended (Process 2 & 4): Default Transfer Syntax for Lossy JPEG 12 Bit Image Compression (Process 4 only)',\n  '1.2.840.10008.1.2.4.52':'JPEG Extended (Process 3 & 5) (Retired)',\n  '1.2.840.10008.1.2.4.53':'JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)',\n  '1.2.840.10008.1.2.4.54':'JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)',\n  '1.2.840.10008.1.2.4.55':'JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)',\n  '1.2.840.10008.1.2.4.56':'JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)',\n  '1.2.840.10008.1.2.4.57':'JPEG Lossless, Non-Hierarchical (Process 14)',\n  '1.2.840.10008.1.2.4.58':'JPEG Lossless, Non-Hierarchical (Process 15) (Retired)',\n  '1.2.840.10008.1.2.4.59':'JPEG Extended, Hierarchical (Process 16 & 18) (Retired)',\n  '1.2.840.10008.1.2.4.60':'JPEG Extended, Hierarchical (Process 17 & 19) (Retired)',\n  '1.2.840.10008.1.2.4.61':'JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)',\n  '1.2.840.10008.1.2.4.62':'JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)',\n  '1.2.840.10008.1.2.4.63':'JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)',\n  '1.2.840.10008.1.2.4.64':'JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)',\n  '1.2.840.10008.1.2.4.65':'JPEG Lossless, Hierarchical (Process 28) (Retired)',\n  '1.2.840.10008.1.2.4.66':'JPEG Lossless, Hierarchical (Process 29) (Retired)',\n  '1.2.840.10008.1.2.4.70':'JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1]): Default Transfer Syntax for Lossless JPEG Image Compression',\n  '1.2.840.10008.1.2.4.80':'JPEG-LS Lossless Image Compression',\n  '1.2.840.10008.1.2.4.81':'JPEG-LS Lossy (Near-Lossless) Image Compression',\n  '1.2.840.10008.1.2.4.90':'JPEG 2000 Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.91':'JPEG 2000 Image Compression',\n  '1.2.840.10008.1.2.4.92':'JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.93':'JPEG 2000 Part 2 Multi-component Image Compression',\n  '1.2.840.10008.1.2.4.94':'JPIP Referenced',\n  '1.2.840.10008.1.2.4.95':'JPIP Referenced Deflate',\n  '1.2.840.10008.1.2.4.100':'MPEG2 Main Profile @ Main Level',\n  '1.2.840.10008.1.2.4.101':'MPEG2 Main Profile @ High Level',\n  '1.2.840.10008.1.2.4.102':'MPEG-4 AVC/H.264 High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.103':'MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.104':'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video',\n  '1.2.840.10008.1.2.4.105':'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video',\n  '1.2.840.10008.1.2.4.106':'MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2',\n  '1.2.840.10008.1.2.5':'RLE Lossless',\n  '1.2.840.10008.1.2.6.1':'RFC 2557 MIME encapsulation',\n  '1.2.840.10008.1.2.6.2':'XML Encoding',\n  '1.2.840.10008.1.3.10':'Media Storage Directory Storage',\n  '1.2.840.10008.1.4.1.1':'Talairach Brain Atlas Frame of Reference',\n  '1.2.840.10008.1.4.1.2':'SPM2 T1 Frame of Reference',\n  '1.2.840.10008.1.4.1.3':'SPM2 T2 Frame of Reference',\n  '1.2.840.10008.1.4.1.4':'SPM2 PD Frame of Reference',\n  '1.2.840.10008.1.4.1.5':'SPM2 EPI Frame of Reference',\n  '1.2.840.10008.1.4.1.6':'SPM2 FIL T1 Frame of Reference',\n  '1.2.840.10008.1.4.1.7':'SPM2 PET Frame of Reference',\n  '1.2.840.10008.1.4.1.8':'SPM2 TRANSM Frame of Reference',\n  '1.2.840.10008.1.4.1.9':'SPM2 SPECT Frame of Reference',\n  '1.2.840.10008.1.4.1.10':'SPM2 GRAY Frame of Reference',\n  '1.2.840.10008.1.4.1.11':'SPM2 WHITE Frame of Reference',\n  '1.2.840.10008.1.4.1.12':'SPM2 CSF Frame of Reference',\n  '1.2.840.10008.1.4.1.13':'SPM2 BRAINMASK Frame of Reference',\n  '1.2.840.10008.1.4.1.14':'SPM2 AVG305T1 Frame of Reference',\n  '1.2.840.10008.1.4.1.15':'SPM2 AVG152T1 Frame of Reference',\n  '1.2.840.10008.1.4.1.16':'SPM2 AVG152T2 Frame of Reference',\n  '1.2.840.10008.1.4.1.17':'SPM2 AVG152PD Frame of Reference',\n  '1.2.840.10008.1.4.1.18':'SPM2 SINGLESUBJT1 Frame of Reference',\n  '1.2.840.10008.1.4.2.1':'ICBM 452 T1 Frame of Reference',\n  '1.2.840.10008.1.4.2.2':'ICBM Single Subject MRI Frame of Reference',\n  '1.2.840.10008.1.5.1':'Hot Iron Color Palette SOP Instance',\n  '1.2.840.10008.1.5.2':'PET Color Palette SOP Instance',\n  '1.2.840.10008.1.5.3':'Hot Metal Blue Color Palette SOP Instance',\n  '1.2.840.10008.1.5.4':'PET 20 Step Color Palette SOP Instance',\n  '1.2.840.10008.1.9':'Basic Study Content Notification SOP Class (Retired)',\n  '1.2.840.10008.1.20.1':'Storage Commitment Push Model SOP Class',\n  '1.2.840.10008.1.20.1.1':'Storage Commitment Push Model SOP Instance',\n  '1.2.840.10008.1.20.2':'Storage Commitment Pull Model SOP Class (Retired)',\n  '1.2.840.10008.1.20.2.1':'Storage Commitment Pull Model SOP Instance (Retired)',\n  '1.2.840.10008.1.40':'Procedural Event Logging SOP Class',\n  '1.2.840.10008.1.40.1':'Procedural Event Logging SOP Instance',\n  '1.2.840.10008.1.42':'Substance Administration Logging SOP Class',\n  '1.2.840.10008.1.42.1':'Substance Administration Logging SOP Instance',\n  '1.2.840.10008.2.6.1':'DICOM UID Registry',\n  '1.2.840.10008.2.16.4':'DICOM Controlled Terminology',\n  '1.2.840.10008.3.1.1.1':'DICOM Application Context Name',\n  '1.2.840.10008.3.1.2.1.1':'Detached Patient Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.1.4':'Detached Patient Management Meta SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.2.1':'Detached Visit Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.3.1':'Detached Study Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.3.2':'Study Component Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.3.3':'Modality Performed Procedure Step SOP Class',\n  '1.2.840.10008.3.1.2.3.4':'Modality Performed Procedure Step Retrieve SOP Class',\n  '1.2.840.10008.3.1.2.3.5':'Modality Performed Procedure Step Notification SOP Class',\n  '1.2.840.10008.3.1.2.5.1':'Detached Results Management SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.5.4':'Detached Results Management Meta SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.5.5':'Detached Study Management Meta SOP Class (Retired)',\n  '1.2.840.10008.3.1.2.6.1':'Detached Interpretation Management SOP Class (Retired)',\n  '1.2.840.10008.4.2':'Storage Service Class',\n  '1.2.840.10008.5.1.1.1':'Basic Film Session SOP Class',\n  '1.2.840.10008.5.1.1.2':'Basic Film Box SOP Class',\n  '1.2.840.10008.5.1.1.4':'Basic Grayscale Image Box SOP Class',\n  '1.2.840.10008.5.1.1.4.1':'Basic Color Image Box SOP Class',\n  '1.2.840.10008.5.1.1.4.2':'Referenced Image Box SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.9':'Basic Grayscale Print Management Meta SOP Class',\n  '1.2.840.10008.5.1.1.9.1':'Referenced Grayscale Print Management Meta SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.14':'Print Job SOP Class',\n  '1.2.840.10008.5.1.1.15':'Basic Annotation Box SOP Class',\n  '1.2.840.10008.5.1.1.16':'Printer SOP Class',\n  '1.2.840.10008.5.1.1.16.376':'Printer Configuration Retrieval SOP Class',\n  '1.2.840.10008.5.1.1.17':'Printer SOP Instance',\n  '1.2.840.10008.5.1.1.17.376':'Printer Configuration Retrieval SOP Instance',\n  '1.2.840.10008.5.1.1.18':'Basic Color Print Management Meta SOP Class',\n  '1.2.840.10008.5.1.1.18.1':'Referenced Color Print Management Meta SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.22':'VOI LUT Box SOP Class',\n  '1.2.840.10008.5.1.1.23':'Presentation LUT SOP Class',\n  '1.2.840.10008.5.1.1.24':'Image Overlay Box SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.24.1':'Basic Print Image Overlay Box SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.25':'Print Queue SOP Instance (Retired)',\n  '1.2.840.10008.5.1.1.26':'Print Queue Management SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.27':'Stored Print Storage SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.29':'Hardcopy Grayscale Image Storage SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.30':'Hardcopy Color Image Storage SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.31':'Pull Print Request SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.32':'Pull Stored Print Management Meta SOP Class (Retired)',\n  '1.2.840.10008.5.1.1.33':'Media Creation Management SOP Class UID',\n  '1.2.840.10008.5.1.1.40':'Display System SOP Class',\n  '1.2.840.10008.5.1.1.40.1':'Display System SOP Instance',\n  '1.2.840.10008.5.1.4.1.1.1':'Computed Radiography Image Storage',\n  '1.2.840.10008.5.1.4.1.1.1.1':'Digital X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.1.1.1':'Digital X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.1.2':'Digital Mammography X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.1.2.1':'Digital Mammography X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.1.3':'Digital Intra-Oral X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.1.3.1':'Digital Intra-Oral X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.2':'CT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.2.1':'Enhanced CT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.2.2':'Legacy Converted Enhanced CT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.3':'Ultrasound Multi-frame Image Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.3.1':'Ultrasound Multi-frame Image Storage',\n  '1.2.840.10008.5.1.4.1.1.4':'MR Image Storage',\n  '1.2.840.10008.5.1.4.1.1.4.1':'Enhanced MR Image Storage',\n  '1.2.840.10008.5.1.4.1.1.4.2':'MR Spectroscopy Storage',\n  '1.2.840.10008.5.1.4.1.1.4.3':'Enhanced MR Color Image Storage',\n  '1.2.840.10008.5.1.4.1.1.4.4':'Legacy Converted Enhanced MR Image Storage',\n  '1.2.840.10008.5.1.4.1.1.5':'Nuclear Medicine Image Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.6':'Ultrasound Image Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.6.1':'Ultrasound Image Storage',\n  '1.2.840.10008.5.1.4.1.1.6.2':'Enhanced US Volume Storage',\n  '1.2.840.10008.5.1.4.1.1.7':'Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.7.1':'Multi-frame Single Bit Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.7.2':'Multi-frame Grayscale Byte Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.7.3':'Multi-frame Grayscale Word Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.7.4':'Multi-frame True Color Secondary Capture Image Storage',\n  '1.2.840.10008.5.1.4.1.1.8':'Standalone Overlay Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.9':'Standalone Curve Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.9.1':'Waveform Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.9.1.1':'12-lead ECG Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.1.2':'General ECG Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.1.3':'Ambulatory ECG Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.2.1':'Hemodynamic Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.3.1':'Cardiac Electrophysiology Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.4.1':'Basic Voice Audio Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.4.2':'General Audio Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.5.1':'Arterial Pulse Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.9.6.1':'Respiratory Waveform Storage',\n  '1.2.840.10008.5.1.4.1.1.10':'Standalone Modality LUT Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.11':'Standalone VOI LUT Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.11.1':'Grayscale Softcopy Presentation State Storage SOP Class',\n  '1.2.840.10008.5.1.4.1.1.11.2':'Color Softcopy Presentation State Storage SOP Class',\n  '1.2.840.10008.5.1.4.1.1.11.3':'Pseudo-Color Softcopy Presentation State Storage SOP Class',\n  '1.2.840.10008.5.1.4.1.1.11.4':'Blending Softcopy Presentation State Storage SOP Class',\n  '1.2.840.10008.5.1.4.1.1.11.5':'XA/XRF Grayscale Softcopy Presentation State Storage',\n  '1.2.840.10008.5.1.4.1.1.12.1':'X-Ray Angiographic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.12.1.1':'Enhanced XA Image Storage',\n  '1.2.840.10008.5.1.4.1.1.12.2':'X-Ray Radiofluoroscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.12.2.1':'Enhanced XRF Image Storage',\n  '1.2.840.10008.5.1.4.1.1.12.3':'X-Ray Angiographic Bi-Plane Image Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.13.1.1':'X-Ray 3D Angiographic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.13.1.2':'X-Ray 3D Craniofacial Image Storage',\n  '1.2.840.10008.5.1.4.1.1.13.1.3':'Breast Tomosynthesis Image Storage',\n  '1.2.840.10008.5.1.4.1.1.13.1.4':'Breast Projection X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.13.1.5':'Breast Projection X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.14.1':'Intravascular Optical Coherence Tomography Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.14.2':'Intravascular Optical Coherence Tomography Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.20':'Nuclear Medicine Image Storage',\n  '1.2.840.10008.5.1.4.1.1.30':'Parametric Map Storage',\n  '1.2.840.10008.5.1.4.1.1.66':'Raw Data Storage',\n  '1.2.840.10008.5.1.4.1.1.66.1':'Spatial Registration Storage',\n  '1.2.840.10008.5.1.4.1.1.66.2':'Spatial Fiducials Storage',\n  '1.2.840.10008.5.1.4.1.1.66.3':'Deformable Spatial Registration Storage',\n  '1.2.840.10008.5.1.4.1.1.66.4':'Segmentation Storage',\n  '1.2.840.10008.5.1.4.1.1.66.5':'Surface Segmentation Storage',\n  '1.2.840.10008.5.1.4.1.1.67':'Real World Value Mapping Storage',\n  '1.2.840.10008.5.1.4.1.1.68.1':'Surface Scan Mesh Storage',\n  '1.2.840.10008.5.1.4.1.1.68.2':'Surface Scan Point Cloud Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1':'VL Image Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.77.2':'VL Multi-frame Image Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.77.1.1':'VL Endoscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.1.1':'Video Endoscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.2':'VL Microscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.2.1':'Video Microscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.3':'VL Slide-Coordinates Microscopic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.4':'VL Photographic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.4.1':'Video Photographic Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.1':'Ophthalmic Photography 8 Bit Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.2':'Ophthalmic Photography 16 Bit Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.3':'Stereometric Relationship Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.4':'Ophthalmic Tomography Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.5':'Wide Field Ophthalmic Photography Stereographic Projection Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.5.6':'Wide Field Ophthalmic Photography 3D Coordinates Image Storage',\n  '1.2.840.10008.5.1.4.1.1.77.1.6':'VL Whole Slide Microscopy Image Storage',\n  '1.2.840.10008.5.1.4.1.1.78.1':'Lensometry Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.2':'Autorefraction Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.3':'Keratometry Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.4':'Subjective Refraction Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.5':'Visual Acuity Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.6':'Spectacle Prescription Report Storage',\n  '1.2.840.10008.5.1.4.1.1.78.7':'Ophthalmic Axial Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.78.8':'Intraocular Lens Calculations Storage',\n  '1.2.840.10008.5.1.4.1.1.79.1':'Macular Grid Thickness and Volume Report Storage',\n  '1.2.840.10008.5.1.4.1.1.80.1':'Ophthalmic Visual Field Static Perimetry Measurements Storage',\n  '1.2.840.10008.5.1.4.1.1.81.1':'Ophthalmic Thickness Map Storage',\n  '1.2.840.10008.5.1.4.1.1.82.1':'Corneal Topography Map Storage',\n  '1.2.840.10008.5.1.4.1.1.88.1':'Text SR Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.88.2':'Audio SR Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.88.3':'Detail SR Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.88.4':'Comprehensive SR Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.1.1.88.11':'Basic Text SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.22':'Enhanced SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.33':'Comprehensive SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.34':'Comprehensive 3D SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.35':'Extensible SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.40':'Procedure Log Storage',\n  '1.2.840.10008.5.1.4.1.1.88.50':'Mammography CAD SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.59':'Key Object Selection Document Storage',\n  '1.2.840.10008.5.1.4.1.1.88.65':'Chest CAD SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.67':'X-Ray Radiation Dose SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.68':'Radiopharmaceutical Radiation Dose SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.69':'Colon CAD SR Storage',\n  '1.2.840.10008.5.1.4.1.1.88.70':'Implantation Plan SR Storage',\n  '1.2.840.10008.5.1.4.1.1.104.1':'Encapsulated PDF Storage',\n  '1.2.840.10008.5.1.4.1.1.104.2':'Encapsulated CDA Storage',\n  '1.2.840.10008.5.1.4.1.1.128':'Positron Emission Tomography Image Storage',\n  '1.2.840.10008.5.1.4.1.1.128.1':'Legacy Converted Enhanced PET Image Storage',\n  '1.2.840.10008.5.1.4.1.1.129':'Standalone PET Curve Storage (Retired)',\n  '1.2.840.10008.5.1.4.1.1.130':'Enhanced PET Image Storage',\n  '1.2.840.10008.5.1.4.1.1.131':'Basic Structured Display Storage',\n  '1.2.840.10008.5.1.4.1.1.481.1':'RT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.481.2':'RT Dose Storage',\n  '1.2.840.10008.5.1.4.1.1.481.3':'RT Structure Set Storage',\n  '1.2.840.10008.5.1.4.1.1.481.4':'RT Beams Treatment Record Storage',\n  '1.2.840.10008.5.1.4.1.1.481.5':'RT Plan Storage',\n  '1.2.840.10008.5.1.4.1.1.481.6':'RT Brachy Treatment Record Storage',\n  '1.2.840.10008.5.1.4.1.1.481.7':'RT Treatment Summary Record Storage',\n  '1.2.840.10008.5.1.4.1.1.481.8':'RT Ion Plan Storage',\n  '1.2.840.10008.5.1.4.1.1.481.9':'RT Ion Beams Treatment Record Storage',\n  '1.2.840.10008.5.1.4.1.1.501.1':'DICOS CT Image Storage',\n  '1.2.840.10008.5.1.4.1.1.501.2.1':'DICOS Digital X-Ray Image Storage - For Presentation',\n  '1.2.840.10008.5.1.4.1.1.501.2.2':'DICOS Digital X-Ray Image Storage - For Processing',\n  '1.2.840.10008.5.1.4.1.1.501.3':'DICOS Threat Detection Report Storage',\n  '1.2.840.10008.5.1.4.1.1.501.4':'DICOS 2D AIT Storage',\n  '1.2.840.10008.5.1.4.1.1.501.5':'DICOS 3D AIT Storage',\n  '1.2.840.10008.5.1.4.1.1.501.6':'DICOS Quadrupole Resonance (QR) Storage',\n  '1.2.840.10008.5.1.4.1.1.601.1':'Eddy Current Image Storage',\n  '1.2.840.10008.5.1.4.1.1.601.2':'Eddy Current Multi-frame Image Storage',\n  '1.2.840.10008.5.1.4.1.2.1.1':'Patient Root Query/Retrieve Information Model - FIND',\n  '1.2.840.10008.5.1.4.1.2.1.2':'Patient Root Query/Retrieve Information Model - MOVE',\n  '1.2.840.10008.5.1.4.1.2.1.3':'Patient Root Query/Retrieve Information Model - GET',\n  '1.2.840.10008.5.1.4.1.2.2.1':'Study Root Query/Retrieve Information Model - FIND',\n  '1.2.840.10008.5.1.4.1.2.2.2':'Study Root Query/Retrieve Information Model - MOVE',\n  '1.2.840.10008.5.1.4.1.2.2.3':'Study Root Query/Retrieve Information Model - GET',\n  '1.2.840.10008.5.1.4.1.2.3.1':'Patient/Study Only Query/Retrieve Information Model - FIND (Retired)',\n  '1.2.840.10008.5.1.4.1.2.3.2':'Patient/Study Only Query/Retrieve Information Model - MOVE (Retired)',\n  '1.2.840.10008.5.1.4.1.2.3.3':'Patient/Study Only Query/Retrieve Information Model - GET (Retired)',\n  '1.2.840.10008.5.1.4.1.2.4.2':'Composite Instance Root Retrieve - MOVE',\n  '1.2.840.10008.5.1.4.1.2.4.3':'Composite Instance Root Retrieve - GET',\n  '1.2.840.10008.5.1.4.1.2.5.3':'Composite Instance Retrieve Without Bulk Data - GET',\n  '1.2.840.10008.5.1.4.31':'Modality Worklist Information Model - FIND',\n  '1.2.840.10008.5.1.4.32':'General Purpose Worklist Management Meta SOP Class (Retired)',\n  '1.2.840.10008.5.1.4.32.1':'General Purpose Worklist Information Model - FIND (Retired)',\n  '1.2.840.10008.5.1.4.32.2':'General Purpose Scheduled Procedure Step SOP Class (Retired)',\n  '1.2.840.10008.5.1.4.32.3':'General Purpose Performed Procedure Step SOP Class (Retired)',\n  '1.2.840.10008.5.1.4.33':'Instance Availability Notification SOP Class',\n  '1.2.840.10008.5.1.4.34.1':'RT Beams Delivery Instruction Storage - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.2':'RT Conventional Machine Verification - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.3':'RT Ion Machine Verification - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4':'Unified Worklist and Procedure Step Service Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4.1':'Unified Procedure Step - Push SOP Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4.2':'Unified Procedure Step - Watch SOP Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4.3':'Unified Procedure Step - Pull SOP Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.4.4':'Unified Procedure Step - Event SOP Class - Trial (Retired)',\n  '1.2.840.10008.5.1.4.34.5':'UPS Global Subscription SOP Instance',\n  '1.2.840.10008.5.1.4.34.5.1':'UPS Filtered Global Subscription SOP Instance',\n  '1.2.840.10008.5.1.4.34.6':'Unified Worklist and Procedure Step Service Class',\n  '1.2.840.10008.5.1.4.34.6.1':'Unified Procedure Step - Push SOP Class',\n  '1.2.840.10008.5.1.4.34.6.2':'Unified Procedure Step - Watch SOP Class',\n  '1.2.840.10008.5.1.4.34.6.3':'Unified Procedure Step - Pull SOP Class',\n  '1.2.840.10008.5.1.4.34.6.4':'Unified Procedure Step - Event SOP Class',\n  '1.2.840.10008.5.1.4.34.7':'RT Beams Delivery Instruction Storage',\n  '1.2.840.10008.5.1.4.34.8':'RT Conventional Machine Verification',\n  '1.2.840.10008.5.1.4.34.9':'RT Ion Machine Verification',\n  '1.2.840.10008.5.1.4.37.1':'General Relevant Patient Information Query',\n  '1.2.840.10008.5.1.4.37.2':'Breast Imaging Relevant Patient Information Query',\n  '1.2.840.10008.5.1.4.37.3':'Cardiac Relevant Patient Information Query',\n  '1.2.840.10008.5.1.4.38.1':'Hanging Protocol Storage',\n  '1.2.840.10008.5.1.4.38.2':'Hanging Protocol Information Model - FIND',\n  '1.2.840.10008.5.1.4.38.3':'Hanging Protocol Information Model - MOVE',\n  '1.2.840.10008.5.1.4.38.4':'Hanging Protocol Information Model - GET',\n  '1.2.840.10008.5.1.4.39.1':'Color Palette Storage',\n  '1.2.840.10008.5.1.4.39.2':'Color Palette Information Model - FIND',\n  '1.2.840.10008.5.1.4.39.3':'Color Palette Information Model - MOVE',\n  '1.2.840.10008.5.1.4.39.4':'Color Palette Information Model - GET',\n  '1.2.840.10008.5.1.4.41':'Product Characteristics Query SOP Class',\n  '1.2.840.10008.5.1.4.42':'Substance Approval Query SOP Class',\n  '1.2.840.10008.5.1.4.43.1':'Generic Implant Template Storage',\n  '1.2.840.10008.5.1.4.43.2':'Generic Implant Template Information Model - FIND',\n  '1.2.840.10008.5.1.4.43.3':'Generic Implant Template Information Model - MOVE',\n  '1.2.840.10008.5.1.4.43.4':'Generic Implant Template Information Model - GET',\n  '1.2.840.10008.5.1.4.44.1':'Implant Assembly Template Storage',\n  '1.2.840.10008.5.1.4.44.2':'Implant Assembly Template Information Model - FIND',\n  '1.2.840.10008.5.1.4.44.3':'Implant Assembly Template Information Model - MOVE',\n  '1.2.840.10008.5.1.4.44.4':'Implant Assembly Template Information Model - GET',\n  '1.2.840.10008.5.1.4.45.1':'Implant Template Group Storage',\n  '1.2.840.10008.5.1.4.45.2':'Implant Template Group Information Model - FIND',\n  '1.2.840.10008.5.1.4.45.3':'Implant Template Group Information Model - MOVE',\n  '1.2.840.10008.5.1.4.45.4':'Implant Template Group Information Model - GET',\n  '1.2.840.10008.7.1.1':'Native DICOM Model',\n  '1.2.840.10008.7.1.2':'Abstract Multi-Dimensional Image Model',\n  '1.2.840.10008.8.1.1':'DICOM Content Mapping Resource',\n  '1.2.840.10008.15.0.3.1':'dicomDeviceName',\n  '1.2.840.10008.15.0.3.2':'dicomDescription',\n  '1.2.840.10008.15.0.3.3':'dicomManufacturer',\n  '1.2.840.10008.15.0.3.4':'dicomManufacturerModelName',\n  '1.2.840.10008.15.0.3.5':'dicomSoftwareVersion',\n  '1.2.840.10008.15.0.3.6':'dicomVendorData',\n  '1.2.840.10008.15.0.3.7':'dicomAETitle',\n  '1.2.840.10008.15.0.3.8':'dicomNetworkConnectionReference',\n  '1.2.840.10008.15.0.3.9':'dicomApplicationCluster',\n  '1.2.840.10008.15.0.3.10':'dicomAssociationInitiator',\n  '1.2.840.10008.15.0.3.11':'dicomAssociationAcceptor',\n  '1.2.840.10008.15.0.3.12':'dicomHostname',\n  '1.2.840.10008.15.0.3.13':'dicomPort',\n  '1.2.840.10008.15.0.3.14':'dicomSOPClass',\n  '1.2.840.10008.15.0.3.15':'dicomTransferRole',\n  '1.2.840.10008.15.0.3.16':'dicomTransferSyntax',\n  '1.2.840.10008.15.0.3.17':'dicomPrimaryDeviceType',\n  '1.2.840.10008.15.0.3.18':'dicomRelatedDeviceReference',\n  '1.2.840.10008.15.0.3.19':'dicomPreferredCalledAETitle',\n  '1.2.840.10008.15.0.3.20':'dicomTLSCyphersuite',\n  '1.2.840.10008.15.0.3.21':'dicomAuthorizedNodeCertificateReference',\n  '1.2.840.10008.15.0.3.22':'dicomThisNodeCertificateReference',\n  '1.2.840.10008.15.0.3.23':'dicomInstalled',\n  '1.2.840.10008.15.0.3.24':'dicomStationName',\n  '1.2.840.10008.15.0.3.25':'dicomDeviceSerialNumber',\n  '1.2.840.10008.15.0.3.26':'dicomInstitutionName',\n  '1.2.840.10008.15.0.3.27':'dicomInstitutionAddress',\n  '1.2.840.10008.15.0.3.28':'dicomInstitutionDepartmentName',\n  '1.2.840.10008.15.0.3.29':'dicomIssuerOfPatientID',\n  '1.2.840.10008.15.0.3.30':'dicomPreferredCallingAETitle',\n  '1.2.840.10008.15.0.3.31':'dicomSupportedCharacterSet',\n  '1.2.840.10008.15.0.4.1':'dicomConfigurationRoot',\n  '1.2.840.10008.15.0.4.2':'dicomDevicesRoot',\n  '1.2.840.10008.15.0.4.3':'dicomUniqueAETitlesRegistryRoot',\n  '1.2.840.10008.15.0.4.4':'dicomDevice',\n  '1.2.840.10008.15.0.4.5':'dicomNetworkAE',\n  '1.2.840.10008.15.0.4.6':'dicomNetworkConnection',\n  '1.2.840.10008.15.0.4.7':'dicomUniqueAETitle',\n  '1.2.840.10008.15.0.4.8':'dicomTransferCapability',\n  '1.2.840.10008.15.1.1':'Universal Coordinated Time',\n};\n","import React, { PureComponent } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nclass OpenUrlDlg extends PureComponent {\r\n\r\n  hide = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  cancel = () => {\r\n    window.stop()\r\n    this.hide()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n            open={true}\r\n            onClose={this.hide}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Downloading file ...\"}</DialogTitle>\r\n            <DialogContent>\r\n              <LinearProgress variant=\"determinate\" value={this.props.progress} color='secondary' />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OpenUrlDlg\r\n","import React, { PureComponent } from 'react'\r\nimport Icon from '@mdi/react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nimport { \r\n    mdiPlay,\r\n    mdiPause,\r\n    mdiSkipBackward,\r\n    mdiSkipForward,\r\n    mdiSkipNext,\r\n    mdiSkipPrevious,\r\n  } from '@mdi/js'\r\n\r\nconst iconColor = '#FFFFFF'\r\n\r\nclass CinePlayer extends PureComponent {\r\n    firstframe = () => {\r\n        this.props.runCinePlayer('firstframe') \r\n    }\r\n\r\n    previousframe = () => {\r\n        this.props.runCinePlayer('previousframe') \r\n    }\r\n\r\n    play = () => {\r\n        this.props.runCinePlayer('play') \r\n    }\r\n\r\n    pause = () => {\r\n        this.props.runCinePlayer('pause') \r\n    }\r\n\r\n    nextframe = () => {\r\n        this.props.runCinePlayer('nextframe') \r\n    }\r\n\r\n    lastframe = () => {\r\n        this.props.runCinePlayer('lastframe') \r\n    }\r\n\r\n    render() {\r\n        let play = null\r\n        if (!this.props.inPlay) {\r\n            play = <IconButton onClick={this.play}>\r\n                        <Icon path={mdiPlay} size={'1.5rem'} color={iconColor} />\r\n                   </IconButton>          \r\n        } else {\r\n            play = <IconButton onClick={this.pause}>\r\n                        <Icon path={mdiPause} size={'1.5rem'} color={iconColor} />\r\n                   </IconButton>  \r\n        }\r\n        return (\r\n            <div style={{ width:240, margin:'0 auto' }}>\r\n                <IconButton onClick={this.firstframe}>\r\n                    <Icon path={mdiSkipBackward} size={'1.5rem'} color={iconColor} />\r\n                </IconButton>\r\n                <IconButton onClick={this.previousframe}>\r\n                    <Icon path={mdiSkipPrevious} size={'1.5rem'} color={iconColor} />\r\n                </IconButton>\r\n                {play}\r\n                <IconButton onClick={this.nextframe}>\r\n                    <Icon path={mdiSkipNext} size={'1.5rem'} color={iconColor} />\r\n                </IconButton>\r\n                <IconButton onClick={this.lastframe}>\r\n                    <Icon path={mdiSkipForward} size={'1.5rem'} color={iconColor} />\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CinePlayer\r\n","import Dexie from 'dexie'\r\n\r\nconst db = new Dexie('udvDB')\r\n\r\ndb.version(1).stores({ \r\n    measurement: '++id, sopinstanceuid, tool' \r\n})\r\n\r\ndb.open()\r\n\r\nexport default db\r\n","import React from \"react\"\nimport {connect} from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport Hammer from \"hammerjs\"\nimport * as cornerstone from \"cornerstone-core\"\nimport * as cornerstoneTools from \"cornerstone-tools\"\nimport * as cornerstoneMath from \"cornerstone-math\"\nimport * as cornerstoneFileImageLoader from \"cornerstone-file-image-loader\"\nimport * as cornerstoneWebImageLoader from \"cornerstone-web-image-loader\"\nimport * as cornerstoneWADOImageLoader from \"cornerstone-wado-image-loader\"\nimport * as dicomParser from 'dicom-parser'\nimport * as blobUtil from 'blob-util'\nimport {uids} from '../constants/uids'\nimport { SETTINGS_SAVEAS } from '../constants/settings'\nimport OpenUrlDlg from './OpenUrlDlg'\nimport CinePlayer from './CinePlayer'\nimport { isMobile } from 'react-device-detect'\nimport { import as csTools } from 'cornerstone-tools'\nimport db from '../db/db'\nimport fs from '../fs/fs'\nimport {\n  clearStore, \n  dcmIsOpen, \n  activeDcm, \n  dcmTool, \n  activeMeasurements,\n  doFsRefresh} \nfrom '../actions'\nimport {\n  capitalize,\n  getFileName,\n  getSettingsOverlay,\n  isFileImage,\n  isFsFileImage,\n  isUrlImage,\n  getSettingsSaveInto\n} from '../functions'\n\nconst scrollToIndex = csTools('util/scrollToIndex')\n\n/*\nfunction getBlobUrl(url) {\n  const baseUrl = window.URL || window.webkitURL;\n  const blob = new Blob([`importScripts('${url}')`], {type: \"application/javascript\"});\n  return baseUrl.createObjectURL(blob);\n}\n\nlet webWorkerUrl = getBlobUrl(\n  \"https://unpkg.com/cornerstone-wado-image-loader@3.0.0/dist/cornerstoneWADOImageLoaderWebWorker.min.js\"\n)\nlet codecsUrl = getBlobUrl(\n  \"https://unpkg.com/cornerstone-wado-image-loader@3.0.0/dist/cornerstoneWADOImageLoaderCodecs.js\"\n  // \"https://unpkg.com/cornerstone-wado-image-loader/dist/cornerstoneWADOImageLoaderCodecs.js\"\n)\n// See componentDidMount line 110 for initialization, registration\n\nconst config = {\n  maxWebWorkers: 4, //\n  //startWebWorkersOnDemand: true, //\n  webWorkerPath: webWorkerUrl,\n  //webWorkerTaskPaths: [], //\n  taskConfiguration: {\n    decodeTask: {\n      //loadCodecsOnStartup: true, //\n      //initializeCodecsOnStartup: false, //\n      codecsPath: codecsUrl,\n      //usePDFJS: false, //\n      //strict: true //\n    }\n  }\n}\nvar config = {\n  maxWebWorkers: navigator.hardwareConcurrency || 1,\n  startWebWorkersOnDemand: false,\n}\n*/\ncornerstoneTools.external.cornerstone = cornerstone\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\ncornerstoneFileImageLoader.external.cornerstone = cornerstone\ncornerstoneWebImageLoader.external.cornerstone = cornerstone\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone\n//cornerstoneWADOImageLoader.webWorkerManager.initialize(config)\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser\ncornerstoneTools.external.Hammer = Hammer\ncornerstoneTools.init()\n\n//console.log({ cornerstone })\n//console.log({ cornerstoneWADOImageLoader })\n//console.log({ dicomParser })\n\nclass DicomViewer extends React.Component {\n    constructor(props) {\n      super(props)\n      this.files = null\n      this.filename = ''\n      this.localfile = null\n      this.localurl = null\n      this.fsItem = null\n      this.dicomImage = null\n      this.imageId = null\n      this.image = null\n      this.isDicom = false\n      this.numberOfFrames = 1\n      this.measurements = []\n      this.xSize = 0\n      this.ySize = 0\n      this.zSize = 0\n      this.volume = null\n      this.originImage = null\n      this.mprPlane = ''\n      this.sliceMax = 0\n      this.sliceIndex = 0\n    }\n\n    state = {\n      visibleOpenUrlDlg: false,\n      progress: null,\n      visibleCinePlayer: false,\n      errorOnOpenImage: null,\n      errorOnCors: false,\n      frame: 1,\n      inPlay: false,\n      viewport: null,\n    }\n\n    componentDidMount() {\n      //console.log('dicomviewer - componentDidMount: ')\n      this.props.runTool(this)\n      this.props.changeTool(this)\n      cornerstone.events.addEventListener('cornerstoneimageloaded', this.onImageLoaded)\n      const { dcmRef } = this.props\n      dcmRef(this)          \n      \n    }\n\n    componentWillUnmount() {\n      this.props.runTool(undefined)\n      this.props.changeTool(undefined)\n      const { dcmRef } = this.props\n      dcmRef(undefined)            \n    }\n\n    componentDidUpdate(previousProps) {\n      //console.log('dicomviewer - componentDidUpdate: ')\n      /*if (this.props.files !== null) {\n        console.log('this.props.files[0]: ', this.props.files[0])\n        console.log('this.props.files: ', this.props.files)\n      }*/\n      /*if (this.props.volume !== null) {\n        console.log('volume set: ', this.props.volume)\n        this.volume = this.props.volume\n      }*/\n      const isOpen = this.props.isOpen[this.props.index]\n      if (this.props.layout !== previousProps.layout && isOpen) {\n        cornerstone.resize(this.dicomImage)\n      }\n    }\n  \n    onOpenUrl = (e) => {\n      const eventData = e.detail\n      this.setState({ progress: eventData.percentComplete })\n    }\n\n    showOpenUrlDlg = (url) => {\n      this.setState({ visibleOpenUrlDlg: true }, () => {\n        cornerstone.events.addEventListener('cornerstoneimageloadprogress', this.onOpenUrl)\n        this.loadImage(undefined, url)\n      })\n    }\n  \n    hideOpenUrlDlg = () => {\n      this.setState({ visibleOpenUrlDlg: false, progress: null })\n    }\n\n    measurementSave = (measure) => {\n      this.measurements.push(measure) \n    }\n\n    measurementClear = () => {\n      this.measurements.splice(0, this.measurements.length)\n    }\n\n    measurementRemove = (index) => {\n      //console.log('this.measurements: ', this.measurements)\n      this.measurements.splice(index, 1)\n    }    \n\n    getTransferSyntax = () => {\n      const value = this.image.data.string('x00020010')\n      return value + ' [' + uids[value] + ']'\n    }\n\n    getSopClass = () => {\n      const value = this.image.data.string('x00080016')\n      return value + ' [' + uids[value] + ']'\n    }\n\n    getSopInstanceUID = () => {\n      const value = this.image.data.string('x00080018')\n      return value\n    }\n\n    getPixelRepresentation = () => {\n      const value = this.image.data.uint16('x00280103')\n      if (value === undefined) return\n      return value + (value === 0 ? ' (unsigned)' : ' (signed)')\n    }\n\n    getPlanarConfiguration = () => {\n      const value = this.image.data.uint16('x00280006')\n      if (value === undefined) return \n      return value + (value === 0 ? ' (pixel)' : ' (plane)')\n    }\n   \n    onImageLoaded = (e) => {\n      //console.log('cornerstoneimageloaded: ')\n      this.props.onLoadedImage()\n    }\n\n    // Listen for changes to the viewport so we can update the text overlays in the corner\n    onImageRendered = (e) => {\n      //console.log('cornerstoneimagerendered: ', e.target)\n      //console.log('cornerstoneimagerendered, plane: ', this.mprPlane)\n\n      //const viewport = cornerstone.getViewport(this.dicomImage)\n      const viewport = cornerstone.getViewport(e.target)\n\n      //console.log('viewport: ', viewport)\n      \n      if (this.props.use === 'preview') {\n        /*if (this.props.series === undefined) return\n        \n        console.log('this.props.index: ', this.props.index)\n        console.log('this.props.series.seriesKeys[this.props.index]: ', this.props.series.seriesKeys[this.props.index])\n        const series = this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index])\n        console.log('serie: ', series)\n\n        document.getElementById(\n          `mrbottomright-${this.props.index}`\n        ).textContent = `${series.length}`*/\n\n      } else if (this.props.use === 'normal') {\n        document.getElementById(\n          `mrtopleft-${this.props.index}`\n        ).textContent = this.mprIsOrthogonalView() ? `${capitalize(this.mprPlane)}` : `${this.PatientsName}`\n\n        document.getElementById(\n          `mrtopright-${this.props.index}`\n        ).textContent = `${viewport.displayedArea.brhc.x}x${viewport.displayedArea.brhc.y}`\n\n        document.getElementById(\n          `mrbottomleft-${this.props.index}`\n        ).textContent = `WW/WC: ${Math.round(viewport.voi.windowWidth)}/${Math.round(viewport.voi.windowCenter)}`\n\n        document.getElementById(\n          `mrbottomright-${this.props.index}`\n        ).textContent = `Zoom: ${Math.round(viewport.scale.toFixed(2)*100)}%`\n\n        document.getElementById(\n          `mrtopcenter-${this.props.index}`\n        ).textContent = ``\n        document.getElementById(\n          `mrbottomcenter-${this.props.index}`\n        ).textContent = ``    \n        document.getElementById(\n          `mrleftcenter-${this.props.index}`\n        ).textContent = ``      \n        document.getElementById(\n          `mrrightcenter-${this.props.index}`\n        ).textContent = ``  \n\n        if (this.mprPlane === 'sagittal') {\n          document.getElementById(\n            `mrtopcenter-${this.props.index}`\n          ).textContent = `S`\n          document.getElementById(\n            `mrbottomcenter-${this.props.index}`\n          ).textContent = `I`    \n          document.getElementById(\n            `mrleftcenter-${this.props.index}`\n          ).textContent = `A`      \n          document.getElementById(\n            `mrrightcenter-${this.props.index}`\n          ).textContent = `P`  \n\n        } else if (this.mprPlane === 'axial') {\n          document.getElementById(\n            `mrtopcenter-${this.props.index}`\n          ).textContent = `A`\n          document.getElementById(\n            `mrbottomcenter-${this.props.index}`\n          ).textContent = `P`    \n          document.getElementById(\n            `mrleftcenter-${this.props.index}`\n          ).textContent = `R`      \n          document.getElementById(\n            `mrrightcenter-${this.props.index}`\n          ).textContent = `L`    \n\n        } else if (this.mprPlane === 'coronal') {\n          document.getElementById(\n            `mrtopcenter-${this.props.index}`\n          ).textContent = `S`\n          document.getElementById(\n            `mrbottomcenter-${this.props.index}`\n          ).textContent = `I`    \n          document.getElementById(\n            `mrleftcenter-${this.props.index}`\n          ).textContent = `R`      \n          document.getElementById(\n            `mrrightcenter-${this.props.index}`\n          ).textContent = `L`                    \n        }    \n      }\n\n      if (this.isDicom && this.state.visibleCinePlayer && this.numberOfFrames > 1) {\n        document.getElementById(\n          `frameLabel-${this.props.index}`\n        ).textContent = `${this.state.frame} / ${this.numberOfFrames}`\n        if (this.state.inPlay) {\n          let frame = this.state.frame === this.numberOfFrames ? 1 : this.state.frame+1\n          this.setState({frame: frame})\n        }\n      }\n    }\n\n    onMeasurementModified = (e) => {\n      //console.log('cornerstonetoolsmeasurementmodified: ', e.detail.measurementData)\n      \n    }\n\n    onMeasurementAdded = (e) => {\n      //console.log('cornerstonetoolsmeasurementadded: ', e.detail.measurementData)\n      if (this.props.tool !== \"Angle\") return\n      const measure = {\n        tool: this.props.tool,\n        note: '',\n        data: e.detail.measurementData\n      }\n      this.measurementSave(measure)\n      this.props.setActiveMeasurements(this.measurements)      \n    }\n\n    onMeasurementCompleted = (e) => {\n      //console.log('cornerstonetoolsmeasurementcompleted: ', e.detail.measurementData)\n      const measure = {\n        tool: this.props.tool,\n        note: '',\n        data: e.detail.measurementData\n      }\n      if (this.props.tool === \"FreehandRoi\") {\n        setTimeout(() => {\n          this.measurementSave(measure)\n          this.props.setActiveMeasurements(this.measurements)\n        }, 500)\n      } else {\n        this.measurementSave(measure)\n        this.props.setActiveMeasurements(this.measurements)\n      }\n    }\n    \n    onErrorOpenImageClose = () => {\n      this.setState({errorOnOpenImage: null})\n    }\n\n    onErrorCorsClose = () => {\n      this.setState({errorOnCors: false})\n    }    \n\n    /*overlayImage = () => {\n      const viewport = cornerstone.getViewport(this.dicomImage)\n\n      if (this.isDicom) document.getElementById(\n        `mrtopleft-${this.props.index}`\n      ).textContent = `${this.PatientsName}`\n\n      document.getElementById(\n        `mrtopright-${this.props.index}`\n      ).textContent = `${viewport.displayedArea.brhc.x}x${viewport.displayedArea.brhc.y}`\n\n      document.getElementById(\n        `mrbottomleft-${this.props.index}`\n      ).textContent = `WW/WC: ${Math.round(viewport.voi.windowWidth)}/${Math.round(viewport.voi.windowCenter)}`\n\n      document.getElementById(\n        `mrbottomright-${this.props.index}`\n      ).textContent = `Zoom: ${Math.round(viewport.scale.toFixed(2)*100)}%`\n\n      if (this.isDicom && this.state.visibleCinePlayer && this.numberOfFrames > 1) {\n        document.getElementById(\n          `frameLabel-${this.props.index}`\n        ).textContent = `${this.state.frame} / ${this.numberOfFrames}`\n        if (this.state.inPlay) {\n          let frame = this.state.frame === this.numberOfFrames ? 1 : this.state.frame+1\n          this.setState({frame: frame})\n        }\n      }\n    }*/\n\n    displayImageFromFiles = (index) => {\n      //console.log('displayImageFromFiles: ', index)\n      //console.log('displayImageFromFiles - use: ', this.props.use)\n\n      const files = this.files === null ? this.props.files : this.files\n\n      //console.log('displayImageFromFiles - this.files: ', this.files)\n\n      const image = files[index].image\n      const imageId = files[index].imageId\n      this.filename = files[index].name\n\n      const element = this.dicomImage\n      element.addEventListener(\"cornerstonenewimage\", this.onNewImage)\n      element.addEventListener(\"cornerstoneimagerendered\", this.onImageRendered)\n      element.addEventListener(\"cornerstonetoolsmeasurementadded\", this.onMeasurementAdded)\n      element.addEventListener(\"cornerstonetoolsmeasurementmodified\", this.onMeasurementModified)\n      element.addEventListener(\"cornerstonetoolsmeasurementcompleted\", this.onMeasurementCompleted)\n      cornerstone.enable(element)\n\n      this.image = image\n\n      this.isDicom = true\n      \n      this.PatientsName = image.data.string('x00100010')\n      this.sopInstanceUid = this.getSopInstanceUID()\n\n      let stack = { currentImageIdIndex: 0, imageIds: \"\" }\n      this.numberOfFrames = image.data.intString('x00280008')\n      if (this.numberOfFrames > 0) {\n        let imageIds = []\t\n        for(var i=0; i < this.numberOfFrames; ++i) {\n          imageIds.push(imageId + \"?frame=\"+i)\n        }\t\n        stack.imageIds = imageIds\n      }\n\n      cornerstone.displayImage(element, image)\n\n      this.mprPlanePosition()\n      \n      this.enableTool()\n\n      if (this.numberOfFrames > 1) {\n        cornerstoneTools.addStackStateManager(element, ['stack', 'playClip']);    \n        cornerstoneTools.addToolState(element, 'stack', stack)\n        this.setState({frame: 1})\n      }\n\n      // Load the possible measurements from DB and save in the store \n      db.measurement.where('sopinstanceuid').equals(this.sopInstanceUid).each(measure => {\n        //console.log('load measure from db: ', measure)\n        this.measurementSave(measure)\n        cornerstoneTools.addToolState(element, measure.tool, measure.data)\n        this.runTool(measure.tool)\n        cornerstone.updateImage(element)\n        cornerstoneTools.setToolEnabled(measure.tool)\n      }).then(() => {\n        if (this.props.use === 'normal') {\n          this.props.setActiveMeasurements(this.measurements)\n          this.props.setActiveDcm({image: this.image, element: this.dicomImage, isDicom: this.isDicom})             \n          this.props.setIsOpenStore({index: this.props.index, value: true})  \n        }   \n      })   \n      \n      //this.overlayImage()\n\n    }\n\n    loadImageFromCanvas = (canvas) => {\n      //console.log('loadImageFromCanvas, dcmViewer: ', this.props.index)\n\n      const element = this.dicomImage\n      element.addEventListener(\"cornerstonenewimage\", this.onNewImage)\n      element.addEventListener(\"cornerstoneimagerendered\", this.onImageRendered)\n      element.addEventListener(\"cornerstonetoolsmeasurementadded\", this.onMeasurementAdded)\n      element.addEventListener(\"cornerstonetoolsmeasurementmodified\", this.onMeasurementModified)\n      element.addEventListener(\"cornerstonetoolsmeasurementcompleted\", this.onMeasurementCompleted)\n      cornerstone.enable(element)\n\n      const imageId = cornerstoneFileImageLoader.fileManager.addCanvas(canvas)\n\n      cornerstone.loadImage(imageId).then(image => {\n        //this.t1 = performance.now()\n        //console.log(`performance load image: ${this.t1-this.t0} milliseconds`)\n\n        //console.log('loadImageFromCanvas, image: ', image)\n\n        this.image = image\n\n        this.isDicom = false\n\n        cornerstone.displayImage(element, image)\n\n        this.enableTool()\n\n        //this.props.setActiveDcm({image: this.image, element: this.dicomImage, isDicom: this.isDicom})\n        this.props.setIsOpenStore({index: this.props.index, value: true})\n\n        //this.t2 = performance.now()\n        //console.log(`performance: ${this.t2-this.t1} milliseconds`)\n\n        //this.overlayImage()\n\n      }, (e) => {\n        console.log('error', e)\n        this.setState({errorOnOpenImage: \"This is not a valid canvas.\"})\n      })\n    }\n\n    loadImageFromCustomObject = (columns, rows, pixelData) => {\n      //console.log('loadImageFromCustomObject: ')\n\n      const element = this.dicomImage\n      element.addEventListener(\"cornerstonenewimage\", this.onNewImage)\n      element.addEventListener(\"cornerstoneimagerendered\", this.onImageRendered)\n      element.addEventListener(\"cornerstonetoolsmeasurementadded\", this.onMeasurementAdded)\n      element.addEventListener(\"cornerstonetoolsmeasurementmodified\", this.onMeasurementModified)\n      element.addEventListener(\"cornerstonetoolsmeasurementcompleted\", this.onMeasurementCompleted)\n      cornerstone.enable(element)\n      \n      let customObj = {\n        rows: rows,\n        columns: columns,\n        pixelData: pixelData,\n        image: this.originImage,\n      }\n\n      const imageId = cornerstoneFileImageLoader.fileManager.addCustom(customObj)\n\n      cornerstone.loadImage(imageId).then(image => {\n        //console.log('loadImageFromCustomObject, image: ', image)\n\n        this.image = image\n\n        this.isDicom = true\n\n        cornerstone.displayImage(element, image)\n\n        //this.enableTool()\n\n        this.props.setIsOpenStore({index: this.props.index, value: true})\n\n      }, (e) => {\n        console.log('error', e)\n        this.setState({errorOnOpenImage: \"This is not a valid canvas.\"})\n      })\n    }\n\n    loadImage = (localfile, url=undefined, fsItem=undefined) => {\n      //console.log('loadImage, localfile: ', localfile)\n      //console.log('loadImage, fsItem: ', fsItem)\n      //console.log('loadImage, url: ', url)\n\n      if (localfile === undefined && url === undefined && fsItem === undefined) return\n      \n      if (fsItem !== undefined) {\n        this.fsItem = fsItem\n      } else if (localfile !== undefined) {\n        this.localfile = localfile\n      } else {\n        this.localurl = url\n      }\n \n      const element = this.dicomImage\n\n      element.addEventListener(\"cornerstonenewimage\", this.onNewImage)\n      element.addEventListener(\"cornerstoneimagerendered\", this.onImageRendered)\n      element.addEventListener(\"cornerstonetoolsmeasurementadded\", this.onMeasurementAdded)\n      element.addEventListener(\"cornerstonetoolsmeasurementmodified\", this.onMeasurementModified)\n      element.addEventListener(\"cornerstonetoolsmeasurementcompleted\", this.onMeasurementCompleted)\n\n      let imageId = undefined\n\n      cornerstone.enable(element)\n\n      let size = 0\n\n      if (localfile === undefined && isUrlImage(url)) { // check if it's a simple image [jpeg or png] from url\n        //console.log('image: ', file)\n        cornerstone.loadImage(url).then(image => {\n          //console.log('loadImage, image from url: ', image)\n\n          this.hideOpenUrlDlg()\n\n          this.image = image\n\n          this.isDicom = false\n\n          cornerstone.displayImage(element, image)\n          \n          this.enableTool()\n\n          this.props.setActiveDcm({image: this.image, element: this.dicomImage, isDicom: this.isDicom})\n          this.props.isOpenStore(true)\n\n        }, (e) => {\n          console.log('error', e)\n          this.setState({errorOnOpenImage: \"This is not a valid JPG or PNG file.\"})\n        })\n\n      } else if ((localfile !== undefined && isFileImage(localfile)) || (fsItem !== undefined && isFsFileImage(fsItem))) { // otherwise try to open as local image file (JPEG, PNG) \n        if (fsItem !== undefined) {\n          imageId = cornerstoneFileImageLoader.fileManager.addBuffer(fsItem.data)\n        } else {\n          imageId = cornerstoneFileImageLoader.fileManager.add(localfile)\n        }\n        cornerstone.loadImage(imageId).then(image => {\n          console.log('loadImage, image from local: ', image)\n\n          this.image = image\n          this.isDicom = false\n          this.PatientsName = ''\n\n          cornerstone.displayImage(element, image)\n          \n          this.enableTool()\n\n          this.props.setActiveDcm({image: this.image, element: this.dicomImage, isDicom: this.isDicom})\n          //this.props.isOpenStore(true)\n          this.props.setIsOpenStore({index: this.props.index, value: true})\n\n        }, (e) => {\n          console.log('error', e)\n          this.setState({errorOnOpenImage: \"This is not a valid JPG or PNG file.\"})\n        })\n\n      } else { // otherwise try to open as Dicom file\n\n        if (fsItem !== undefined) {\n          imageId = cornerstoneWADOImageLoader.wadouri.fileManager.addBuffer(fsItem.data)\n          this.filename = fsItem.name\n          size = fsItem.size\n        } else if (localfile !== undefined) {\n          imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(localfile)\n          this.filename = localfile.name\n          size = localfile.size\n        } else { // it's a web dicom image\n          imageId = \"wadouri:\"+url\n        }\n  \n        //console.log('loadImage, imageId: ', imageId)\n\n        cornerstone.loadAndCacheImage(imageId).then(image => {\n          //console.log('loadImage, image: ', image)\n          //let pixelDataElement = image.data.elements.x7fe00010\n          //console.log('loadImage, pixelDataElement: ', pixelDataElement)\n          //console.log('loadImage, getPixelData: ', image.getPixelData())\n          \n          this.hideOpenUrlDlg()\n\n          this.image = image\n\n          this.isDicom = true\n          \n          this.PatientsName = image.data.string('x00100010')\n          this.sopInstanceUid = this.getSopInstanceUID()\n\n          let stack = { currentImageIdIndex: 0, imageIds: \"\" }\n          this.numberOfFrames = image.data.intString('x00280008')\n          if (this.numberOfFrames > 0) {\n            let imageIds = []\t\n            for(var i=0; i < this.numberOfFrames; ++i) {\n              imageIds.push(imageId + \"?frame=\"+i)\n            }\t\n            stack.imageIds = imageIds\n          }\n\n          cornerstone.displayImage(element, image)\n          //cornerstoneTools.mouseInput.enable(element);\n          //cornerstoneTools.mouseWheelInput.enable(element);\n\n          this.enableTool()\n\n          if (this.numberOfFrames > 1) {\n            cornerstoneTools.addStackStateManager(element, ['stack', 'playClip']);    \n            cornerstoneTools.addToolState(element, 'stack', stack)\n            //cornerstoneTools.setToolActive('StackScrollMouseWheel', { })\n            this.setState({frame: 1})\n          }\n  \n          // Load the possible measurements from DB and save in the store \n          db.measurement.where('sopinstanceuid').equals(this.sopInstanceUid).each(measure => {\n            //console.log('load measure from db: ', measure)\n            //this.props.measurementStore(measure)\n            this.measurementSave(measure)\n            cornerstoneTools.addToolState(element, measure.tool, measure.data)\n            this.runTool(measure.tool)\n            cornerstone.updateImage(element)\n            cornerstoneTools.setToolEnabled(measure.tool)\n          }).then(() => {\n            //console.log('this.measurements: ', this.measurements)\n            this.props.setActiveMeasurements(this.measurements)\n            this.props.setActiveDcm({name: this.filename, size: size, image: this.image, element: this.dicomImage, isDicom: this.isDicom})\n            this.props.setIsOpenStore({index: this.props.index, value: true})            \n          })       \n\n        }, (e) => {\n          console.log('error', e)   \n          this.hideOpenUrlDlg()      \n          //console.log('toString: ', e.error.toString())\n          const error = e.error.toString()\n          if (error === '[object XMLHttpRequest]') {\n            this.setState({errorOnCors: true})\n          } else {\n            const pos = error.indexOf(\":\")\n            this.setState({errorOnOpenImage: pos < 0 ? e.error : error.substring(pos+1)})            \n          } \n        })\n      }\n    }\n  \n    enableTool = (toolName, mouseButtonNumber) => {\n      // Enable all tools we want to use with this element\n      const WwwcTool = cornerstoneTools.WwwcTool\n      const LengthTool = cornerstoneTools['LengthTool']\n      const PanTool = cornerstoneTools.PanTool\n      const ZoomTouchPinchTool = cornerstoneTools.ZoomTouchPinchTool\n      const ZoomTool = cornerstoneTools.ZoomTool\n      const ProbeTool = cornerstoneTools.ProbeTool\n      const EllipticalRoiTool = cornerstoneTools.EllipticalRoiTool\n      const RectangleRoiTool = cornerstoneTools.RectangleRoiTool\n      const FreehandRoiTool = cornerstoneTools.FreehandRoiTool\n      const AngleTool = cornerstoneTools.AngleTool\n      const MagnifyTool = cornerstoneTools.MagnifyTool\n      const StackScrollMouseWheelTool = cornerstoneTools.StackScrollMouseWheelTool\n\n      cornerstoneTools.addTool(MagnifyTool)\n      cornerstoneTools.addTool(AngleTool)    \n      cornerstoneTools.addTool(WwwcTool)\n      cornerstoneTools.addTool(LengthTool)\n      cornerstoneTools.addTool(PanTool)\n      cornerstoneTools.addTool(ZoomTouchPinchTool)\n      cornerstoneTools.addTool(ZoomTool)\n      cornerstoneTools.addTool(ProbeTool)\n      cornerstoneTools.addTool(EllipticalRoiTool)\n      cornerstoneTools.addTool(RectangleRoiTool)\n      cornerstoneTools.addTool(FreehandRoiTool)\n      cornerstoneTools.addTool(StackScrollMouseWheelTool)      \n    }\n  \n    // helper function used by the tool button handlers to disable the active tool\n    // before making a new tool active\n    disableAllTools = () => {\n      cornerstoneTools.setToolEnabled('Length')\n      cornerstoneTools.setToolEnabled('Pan')\n      cornerstoneTools.setToolEnabled('Magnify')\n      cornerstoneTools.setToolEnabled('Angle')\n      cornerstoneTools.setToolEnabled('RectangleRoi')\n      cornerstoneTools.setToolEnabled('Wwwc')\n      cornerstoneTools.setToolEnabled('ZoomTouchPinch')\n      cornerstoneTools.setToolEnabled('Probe')\n      cornerstoneTools.setToolEnabled('EllipticalRoi')\n      cornerstoneTools.setToolEnabled('FreehandRoi')\n      cornerstoneTools.setToolEnabled('StackScrollMouseWheel')\n    }\n  \n    runTool = (toolName, opt) => {\n      //console.log(`runTool: ${toolName}, ${opt}`)\n      // this.disableAllTools()\n      if (this.state.inPlay) {\n        this.runCinePlayer('pause')\n      }\n      switch (toolName) {\n        case 'setfiles': {\n          this.files = opt\n          this.sliceMax = this.files.length\n          break   \n        }        \n        case 'openimage': {\n          cornerstone.disable(this.dicomImage)\n          this.displayImageFromFiles(opt)\n          break   \n        }\n        case 'openLocalFs': {\n          cornerstone.disable(this.dicomImage)\n          this.loadImage(opt)\n          break   \n        } \n        case 'openSandboxFs': {\n          cornerstone.disable(this.dicomImage)\n          //this.setState({ file: opt })\n          this.loadImage(undefined, undefined, opt)\n          break   \n        }         \n        case 'openurl': {\n          this.showOpenUrlDlg(opt)\n          break                 \n        }\n        case 'clear': {\n          this.setState({ visibleCinePlayer: false })\n          this.mprPlane = ''\n          //this.props.clearingStore()\n          this.files = null\n          this.props.setIsOpenStore({index: this.props.index, value: false}) \n          cornerstone.disable(this.dicomImage)\n          break\n        }  \n        case 'notool': {\n          this.disableAllTools()\n\n          //const element = this.dicomImage\n\n          //cornerstoneTools.clearToolState(element, 'Length')\n          \n          //const toolStateManager = cornerstoneTools.getElementToolStateManager(element)\n          //console.log('toolStateManager.toolState: ', toolStateManager.toolState)\n          /*\n          const toolState = toolStateManager.toolState\n          // const allTools = Object.keys(toolState).map(key => toolState[key])\n          let key = Object.keys(toolState)[0]\n          let allTools = toolState[key]\n          //console.log('allTools: ', allTools)\n\n          for (let [tool, data] of Object.entries(allTools)) {\n            //console.log(`${tool}: `, data)\n            let key = Object.keys(data)[0]\n            let tools = data[key]\n            //console.log('tools: ', tools)\n            tools.forEach(item => {\n              //console.log('tool: ', tool)\n              //console.log(item)\n              const measure = {\n                tool: tool,\n                note: '',\n                data: item\n              }\n              console.log('measure: ', measure)\n              this.props.measurementStore(measure)\n            })\n          }\n          */\n          //const toolState = toolStateManager.get(element, 'Length')\n          //console.log('toolState: ', toolState)\n\n          /*\n          const measurementData = {\n            visible: true,\n            active: true,\n            invalidated: true,\n            handles: {\n                start: {\n                    x: 100,\n                    y: 100,\n                    highlight: true,\n                    active: false\n                },\n                end: {\n                    x: 200,\n                    y: 200,\n                    highlight: true,\n                    active: true\n                },\n                textBox: {\n                    active: false,\n                    hasMoved: false,\n                    movesIndependently: false,\n                    drawnIndependently: true,\n                    allowedOutsideImage: true,\n                    hasBoundingBox: true\n                }\n              }\n          }\n          cornerstoneTools.addToolState(element, 'RectangleRoi', measurementData)    \n          cornerstoneTools.setToolActive('RectangleRoi', { mouseButtonMask: 1 })\n          */  \n          //cornerstone.updateImage(element)   \n          break\n        }\n        case 'Wwwc': {\n          cornerstoneTools.setToolActive('Wwwc', { mouseButtonMask: 1 })\n          break\n        }  \n        case 'Pan': {\n          cornerstoneTools.setToolActive('Pan', { mouseButtonMask: 1 })\n          break   \n        }  \n        case 'Zoom': {\n          cornerstoneTools.setToolActive(isMobile ? 'ZoomTouchPinch' : 'Zoom', { mouseButtonMask: 1 })\n          break\n        }\n        case 'Length': {\n          cornerstoneTools.setToolActive('Length', isMobile ? { isTouchActive: true } : { mouseButtonMask: 1 })\n          break  \n        }\n        case 'Probe': {\n            cornerstoneTools.setToolActive('Probe', { mouseButtonMask: 1 })\n          break\n        }\n        case 'EllipticalRoi': {\n          cornerstoneTools.setToolActive('EllipticalRoi', { mouseButtonMask: 1 })\n          break   \n        }\n        case 'RectangleRoi': {\n          cornerstoneTools.setToolActive('RectangleRoi', { mouseButtonMask: 1 })\n          break  \n        }\n        case 'Angle': {\n          cornerstoneTools.setToolActive('Angle', { mouseButtonMask: 1 })\n          break \n        }\n        case 'Magnify': {\n          cornerstoneTools.setToolActive('Magnify', { mouseButtonMask: 1 })\n          break  \n        }\n        case 'FreehandRoi': {\n          cornerstoneTools.setToolActive('FreehandRoi', { mouseButtonMask: 1 })\n          break \n        }\n        case 'Invert': {\n          const element = this.dicomImage\n          const viewport = cornerstone.getViewport(element)\n          viewport.invert = !viewport.invert\n          cornerstone.setViewport(element, viewport)\n          break \n        }         \n        case 'saveas': {\n            let type = localStorage.getItem(SETTINGS_SAVEAS)\n            if (getSettingsSaveInto() === 'local') {\n              // cornerstoneTools.SaveAs(this.dicomImage, `${this.filename}.${type}`, `image/${type}`)   \n              const element = this.dicomImage\n              const viewport = cornerstone.getViewport(element)\n              const canvas = document.getElementsByClassName('cornerstone-canvas')[this.props.activeDcmIndex]\n              const zoom = viewport.scale.toFixed(2)\n              const cols = this.image.columns * zoom\n              const rows = this.image.rows * zoom\n\n              let myCanvas = document.createElement('canvas')\n              myCanvas = this.cropCanvas(canvas, \n                Math.round(canvas.width / 2 - cols / 2), \n                Math.round(canvas.height / 2 - rows / 2), \n                cols, rows)   \n\n              let a = document.createElement(\"a\")\n              a.href = myCanvas.toDataURL(`image/${type}`)\n              a.download = `${this.filename}.${type}`    \n              document.body.appendChild(a) // Required for this to work in FireFox\n              a.click()           \n\n            } else { // store image into sandbox file system\n              const element = this.dicomImage\n              const viewport = cornerstone.getViewport(element)\n              const canvas = document.getElementsByClassName('cornerstone-canvas')[this.props.activeDcmIndex]\n              const zoom = viewport.scale.toFixed(2)\n              const cols = this.image.columns * zoom\n              const rows = this.image.rows * zoom\n\n              let myCanvas = document.createElement('canvas')\n              myCanvas = this.cropCanvas(canvas, \n                Math.round(canvas.width / 2 - cols / 2), \n                Math.round(canvas.height / 2 - rows / 2), \n                cols, rows)           \n              \n              blobUtil.canvasToBlob(myCanvas, `image/${type}`).then(blob => {\n                blobUtil.blobToArrayBuffer(blob).then(arrayBuffer => {\n                  const name = `${getFileName(this.filename)}-MPR-${this.mprPlane}`     \n                  let newName = name\n                  let counter = 1\n                  let done = false             \n                  do {\n                      let filename = `${newName}.${type}`\n                      const checkName = this.props.fsCurrentList.find(e => e.name === filename)\n                      if (checkName === undefined) {\n                          fs.transaction('rw', fs.files, async () => {\n                              await fs.files.add({\n                                  parent: this.props.fsCurrentDir,\n                                  name: filename,\n                                  type: type,\n                                  size: arrayBuffer.byteLength,\n                                  data: arrayBuffer\n                              })\n                          }).then(() => {\n                            this.props.makeFsRefresh()\n                          })\n                          done = true\n                      } else {\n                          newName = `${name} - ${counter}`\n                          counter++\n                      }\n                  } while (!done)\n                })\n              })\n            }  \n          break\n        }\n        case 'cine': {\n          this.setState({ visibleCinePlayer: !this.state.visibleCinePlayer })\n          break\n        }\n        case 'reset': {\n          this.reset()\n          break\n        }\n        case 'removetool': {\n          //console.log('removetool index: ', opt)\n          const element = this.dicomImage\n          cornerstoneTools.removeToolState(element, this.measurements[opt].tool, this.measurements[opt].data)\n          cornerstone.updateImage(element)\n          //this.props.measurementRemoveStore(opt)\n          this.measurementRemove(opt)\n          this.props.setActiveMeasurements(this.measurements)\n          break\n        }  \n        case 'removetools': {   \n          const element = this.dicomImage\n          // for each measurement remove it \n          this.measurements.forEach(measure => {\n            cornerstoneTools.clearToolState(element, measure.tool)         \n          })\n          cornerstone.updateImage(element)\n          this.measurementClear()\n          // also remove all measurements from db\n          db.measurement.where('sopinstanceuid').equals(this.sopInstanceUid).delete()\n          this.props.setActiveMeasurements(this.measurements)\n          break\n        }  \n        case 'savetools': {\n          // first, remove eventually previous measurements from db\n          db.measurement.where('sopinstanceuid').equals(this.sopInstanceUid).delete()\n          // then save all the current measurements\n          this.measurements.forEach(measure => {\n            try {\n              db.measurement.add({\n                sopinstanceuid: this.sopInstanceUid, \n                tool: measure.tool,\n                note: measure.note,\n                data: measure.data\n              })\n            } catch(error) {\n              console.error(error)\n            }                       \n          })\n          break\n        }\n        default: {\n          break\n        }\n      }\n    } \n\n    cropCanvas = (canvas, x, y, width, height) => {\n      //console.log(`canvas: ${canvas.width}, ${canvas.height}`)\n      //console.log(`x, y: ${x}, ${y}`)\n      //console.log(`width, height: ${width}, ${height}`)\n\n      // create a temp canvas\n      const newCanvas = document.createElement('canvas')\n      // set its dimensions\n      newCanvas.width = width\n      newCanvas.height = height\n      // draw the canvas in the new resized temp canvas \n      newCanvas.getContext('2d').drawImage(canvas, x, y, width, height, 0, 0, width, height)\n      return newCanvas\n    }\n\n    changeTool = (toolName, value) => {\n      //console.log('change tool, value: ', toolName, value)\n\n      switch (toolName) {\n        case 'Wwwc':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Wwwc', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Wwwc')\n          }\n          break  \n        case 'Pan':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Pan', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Pan')\n          }\n          break    \n        case 'Zoom':\n          if (value === 1) {\n            cornerstoneTools.setToolActive(isMobile ? 'ZoomTouchPinch' : 'Zoom', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive(isMobile ? 'ZoomTouchPinch' : 'Zoom')\n          }\n          break                             \n        case 'Length':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Length', isMobile ? { isTouchActive: true } : { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Length')\n          }\n          break   \n        case 'Probe':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Probe', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Probe')\n          }\n          break        \n        case 'Angle':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Angle', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Angle')\n          }          \n          break   \n        case 'Magnify':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('Magnify', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('Magnify')\n          }          \n          break        \n        case 'EllipticalRoi':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('EllipticalRoi', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('EllipticalRoi')\n          }\n          break   \n        case 'RectangleRoi':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('RectangleRoi', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('RectangleRoi')\n          }\n          break\n        case 'FreehandRoi':\n          if (value === 1) {\n            cornerstoneTools.setToolActive('FreehandRoi', { mouseButtonMask: 1 })\n          } else if (value === 0) {\n            cornerstoneTools.setToolPassive('FreehandRoi')\n          }\n          break     \n        default:\n            break\n        }  \n    }\n\n    runCinePlayer = (cmdName) => {\n      //console.log('this.state.frame: ', this.state.frame)\n      const element = this.dicomImage\n      switch (cmdName) {\n        case 'firstframe': {\n          let frame = 1\n          this.setState({frame: frame})\n          scrollToIndex(element, 0)\n          break\n        }\n        case 'previousframe': {\n          if (this.state.frame > 1) {\n            let frame = this.state.frame-1\n            this.setState({frame: frame})     \n            scrollToIndex(element, frame-1)       \n          }\n          break\n        }\n        case 'play': {\n          cornerstoneTools.playClip(element, 30)\n          this.setState({inPlay: true})\n          break\n        }\n        case 'pause': {\n            cornerstoneTools.stopClip(element)\n            this.setState({inPlay: false})\n          break\n        }\n        case 'nextframe': {\n          if (this.state.frame < this.numberOfFrames) {\n            let frame = this.state.frame+1\n            this.setState({frame: frame})            \n            scrollToIndex(element, frame-1)\n          }\n          break  \n        }\n        case 'lastframe': {\n          let frame = this.numberOfFrames\n          this.setState({frame: frame})   \n          scrollToIndex(element, frame-1)      \n          break    \n        }                       \n        default:\n          break\n      }\n    }\n\n    reset = () => {\n      const element = this.dicomImage\n      const defaultViewport = cornerstone.getDefaultViewportForImage(element, this.image)\n      let viewport = cornerstone.getViewport(element)\n      viewport.voi.windowWidth = defaultViewport.voi.windowWidth\n      viewport.voi.windowCenter = defaultViewport.voi.windowCenter\n      viewport.invert = false\n      cornerstone.setViewport(element, viewport)\n    }\n\n    // -------------------------------------------------------------------------------------------- MPR\n\n    mprPlanePosition = () => {\n      try {\n        if (!this.isDicom) return this.mprPlane\n        //console.log('DicomViewer - mprPlanePosition - files: ', this.files)\n        //console.log('DicomViewer - mprPlanePosition - image: ', this.image)\n        const image = this.files[0].image\n        const imageOrientation = image.data.string('x00200037').split('\\\\')\n        let v = new Array(6).fill(0)\n        v[0] = parseFloat(imageOrientation[0]) // the x direction cosines of the first row X\n        v[1] = parseFloat(imageOrientation[1]) // the y direction cosines of the first row X\n        v[2] = parseFloat(imageOrientation[2]) // the z direction cosines of the first row X\n        v[3] = parseFloat(imageOrientation[3]) // the x direction cosines of the first column Y\n        v[4] = parseFloat(imageOrientation[4]) // the y direction cosines of the first column Y\n        v[5] = parseFloat(imageOrientation[5]) // the z direction cosines of the first column Y    \n        v = v.map((x) => Math.round(x))\n        let p = [v[1]*v[5] - v[2]*v[4], v[2]*v[3] - v[0]*v[5], v[0]*v[4] - v[1]*v[3]] // cross product of X x Y\n        p = p.map((x) => Math.abs(x))\n        if (p[0] === 1) {\n          this.mprPlane = 'sagittal'\n        } else if (p[1] === 1) {\n          this.mprPlane = 'coronal'\n        } else if (p[2] === 1) {\n          this.mprPlane = 'axial'\n        }\n      } catch(error) { // it's not possible to build MPR\n        this.mprPlane = ''\n      } \n      //console.log('DicomViewer - mprPlanePosition - mprPlane: ', this.mprPlane)\n      return this.mprPlane \n    }\n\n    transpose = (matrix) => {\n      return Object.keys(matrix[0]).map(colNumber => matrix.map(rowNumber => rowNumber[colNumber]));\n    }\n\n    mprRenderYZPlane = (filename, origin, x, mprData) => {\n      if (this.volume === null) return\n      \n      const files = this.files === null ? this.props.files : this.files\n\n      this.sliceIndex = x\n      \n      this.filename = filename\n      cornerstone.disable(this.dicomImage)\n      //console.log(`mprRenderYZPlane, origin: ${origin}, x: ${x}`)\n      //console.log('mprRenderYZPlane, volume: ', this.volume)\n\n      if (origin === 'sagittal') \n        this.mprPlane = 'coronal'\n      else if (origin === 'axial') \n        this.mprPlane = 'sagittal'\n      else\n        this.mprPlane = 'sagittal'\n\n      this.xSize = files[0].columns\n      this.ySize = files[0].rows \n      this.zSize = mprData.zDim\n\n      const i = Math.round(x / this.xSize * files.length)\n      this.originImage = files[i].image\n\n      if (origin === 'sagittal') {\n        let xoffset = Math.floor(this.xSize / 2) - Math.floor(this.zSize / 2)\n        let plane = new Int16Array(this.xSize * this.ySize)\n        for (let y = 0; y < this.ySize; y++) \n          for (let z = 0; z < this.zSize; z++) \n            plane[z + this.ySize * y + xoffset] = this.volume[z][x + this.ySize * y]        \n        this.loadImageFromCustomObject(this.xSize, this.ySize, plane)\n\n      } else if (origin === 'coronal') {\n        let xoffset = Math.floor(this.xSize / 2) - Math.floor(this.zSize / 2)\n        let plane = new Int16Array(this.xSize * this.ySize)\n        for (let y = 0; y < this.ySize; y++) \n          for (let z = 0; z < this.zSize; z++) \n            plane[z + this.ySize * y + xoffset] = this.volume[z][x + this.ySize * y]        \n        this.loadImageFromCustomObject(this.xSize, this.ySize, plane)\n\n      } else { // axial\n        const yzPlane = this.mprBuildYZPlane(x)\n        this.loadImageFromCustomObject(this.ySize, this.zSize, yzPlane)\n      }\n    }\n\n    mprBuildYZPlane = (x) => {\n      //console.log(`mprBuildYZPlane, ySize: ${this.ySize}, zSize: ${this.zSize} `)\n      let plane = new Int16Array(this.ySize * this.zSize)\n      for (var y = 0; y < this.ySize; y++) \n        for (var z = 0; z < this.zSize; z++) \n          plane[y + this.ySize * z] = this.volume[z][x + this.ySize * y]\n      //console.log('mprBuildYZPlane, plane: ', plane)\n      return plane\n    }\n\n    mprRenderXZPlane = (filename, origin, y, mprData) => {\n      if (this.volume === null) return\n\n      const files = this.files === null ? this.props.files : this.files\n\n      this.sliceIndex = y\n\n      this.filename = filename\n      cornerstone.disable(this.dicomImage)\n      //console.log(`mprRenderXZPlane, origin: ${origin}, y: ${y}`)\n      //console.log('mprRenderXZPlane, volume: ', this.volume)\n\n      if (origin === 'sagittal') \n        this.mprPlane = 'axial'\n      else if (origin === 'axial') \n        this.mprPlane = 'coronal'\n      else\n        this.mprPlane = 'axial'\n\n      this.xSize = files[0].columns\n      this.ySize = files[0].rows\n      this.zSize = mprData.zDim\n\n      const i = Math.trunc(y / this.ySize * files.length)\n      this.originImage = files[i].image\n\n      if (origin === 'sagittal') {\n        let xoffset = Math.floor(this.xSize / 2) - Math.floor(this.zSize / 2)\n        let plane = new Int16Array(this.xSize * this.ySize)\n        for (let x = 0; x < this.xSize; x++) \n          for (let z = 0; z < this.zSize; z++)\n            plane[z + this.xSize * x + xoffset] = this.volume[z][x + this.xSize * y] \n        this.loadImageFromCustomObject(this.xSize, this.ySize, plane)\n\n      } else {\n        const xzPlane = this.mprBuildXZPlane(y)\n        this.loadImageFromCustomObject(this.xSize, this.zSize, xzPlane)\n      }\n    }\n  \n    mprBuildXZPlane = (y) => {\n      //console.log(`mprBuildXZPlane, xSize: ${this.xSize}, zSize: ${this.zSize} `)\n      let plane = new Int16Array(this.xSize * this.zSize)\n      for (let x = 0; x < this.xSize; x++) \n        for (let z = 0; z < this.zSize; z++)\n          plane[x + this.xSize * z] = this.volume[z][x + this.xSize * y] \n      //console.log('mprBuildXZPlane, plane: ', plane)    \n      return plane\n    }  \n\n    mprIsOrthogonalView = () => {\n      //console.log('mprIsOrthogonalView: ', this.mprPlane)\n      return (this.mprPlane !== '' && this.props.layout[0] === 1 && this.props.layout[1] === 3)\n    }\n\n    // -------------------------------------------------------------------------------------------- MPR\n    \n    dicomImageRef = el => {\n      this.dicomImage = el\n    }\n\n    onImageClick = () => {\n      //console.log('onImageClick: ')\n    }\n\n    getSeriesLength = () => {\n      if (this.props.series === undefined || this.props.series === null || this.props.use !== 'preview') return\n      return this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index]).length\n    }\n\n    getSeriesDescription = () => {\n      if (this.props.series === undefined || this.props.series === null || this.props.use !== 'preview') return\n      if (this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index])[this.props.index] === undefined) return\n      //console.log('getSeriesDescription - this.props.index: ', this.props.index)\n      //console.log('getSeriesDescription - this.props.series.seriesKeys[this.props.index]): ', this.props.series.seriesKeys[this.props.index])\n      //console.log(': ', this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index])[this.props.index])\n      return this.props.series.seriesList.get(this.props.series.seriesKeys[this.props.index])[this.props.index].series.seriesDescription\n    }\n\n    render() {\n      \n      //console.log('DicomViewer render: ')\n\n      //this.props.visible ? document.body.style = 'background: #000000;' : document.body.style = 'background: $md-grey-700;'\n\n      const visible = this.props.visible ? 'visible' : 'hidden'\n      const isOpen = this.props.isOpen[this.props.index]\n      const visibleOpenUrlDlg = this.state.visibleOpenUrlDlg\n      const errorOnOpenImage = this.state.errorOnOpenImage\n      const progress = this.state.progress\n\n      const styleContainer = {\n        width: '100%', \n        height: '100%', \n        border: (this.props.use === 'preview' && this.props.explorerActiveSeriesIndex === this.props.index) || (this.props.use === 'normal' && this.props.activeDcmIndex === this.props.index && (this.props.layout[0] > 1 || this.props.layout[1] > 1)) ? 'solid 1px #AAAAAA' : null,\n        position: 'relative',\n      }\n\n      const styleDicomImage = {\n        width: '100%', \n        height: '100%', \n        position: 'relative',\n      }\n\n      const overlay = getSettingsOverlay() && this.props.overlay\n\n      return ( \n        <div className=\"container\" style={styleContainer} >\n\n          {visibleOpenUrlDlg ? <OpenUrlDlg progress={progress} onClose={this.hideOpenUrlDlg} /> : null}\n\n          <Dialog\n            open={errorOnOpenImage !== null}\n            onClose={this.onErrorOpenImageClose}\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Error on opening image\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                {this.state.errorOnOpenImage}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.onErrorOpenImageClose} autoFocus>\n                Ok\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={this.state.errorOnCors}\n            onClose={this.onErrorCorsClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Error on loading image\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Typography gutterBottom>\n                  CORS or Cross Origin Resource Sharing is a browser security policy \n                  that prevents javascript from loading data from a server with a different base URL \n                  than the server that served up the javascript file. \n                </Typography> \n                <Typography gutterBottom>\n                  See the &nbsp; \n                  <Link href=\"http://enable-cors.org/\" target='_blank' color='textPrimary'>\n                    Enable CORS site\n                  </Link>\n                  &nbsp; for information about CORS.                     \n                </Typography>                                \n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.onErrorCorsClose} autoFocus>\n                Ok\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <div\n            style={{\n              width: '100%', \n              height: '100%', \n              position: \"relative\",\n              color:  this.props.use === 'preview' ? '#AAAAAA' : '#FFFFFF',\n              fontSize: this.props.use === 'preview' ? '0.80em' : '1.00em',\n              textShadow: '1px 1px #000000',\n              visibility: visible\n            }}\n            onContextMenu={() => false}\n            className=\"cornerstone-enabled-image\"\n          >\n            <div \n              ref={this.dicomImageRef} style={styleDicomImage}\n            >\n            </div>\n\n            <div\n              id={`mrtopleft-${this.props.index}`}\n              style={{ position: \"absolute\", top: 0, left: 3, display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n             \n            </div>\n            <div\n              id={`mrtopright-${this.props.index}`}\n              style={{ position: \"absolute\", top: 0, right: 3, display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>\n            <div\n              id={`mrbottomright-${this.props.index}`}\n              style={{ position: \"absolute\", bottom: 0, right: 3, display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              {this.getSeriesLength()}\n            </div>\n            <div\n              id={`mrbottomleft-${this.props.index}`}\n              style={{ position: \"absolute\", bottom: 0, left: 3, display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n               {this.getSeriesDescription()}\n            </div>   \n\n            <div\n              id={`mrtopcenter-${this.props.index}`}\n              style={{ position: \"absolute\", top: 0, width: '60px', left: '50%', marginLeft: '0px', display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>\n\n            <div\n              id={`mrleftcenter-${this.props.index}`}\n              style={{ position: \"absolute\", top: '50%', width: '30px', left: 3, marginLeft: '0px', display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>    \n\n            <div\n              id={`mrrightcenter-${this.props.index}`}\n              style={{ position: \"absolute\", top: '50%', width: '30px', right: 3, marginRight: '-20px', display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>                \n\n            <div\n              id={`mrbottomcenter-${this.props.index}`}\n              style={{ position: \"absolute\", bottom: 0, width: '60px', left: '50%', marginLeft: '0px', display: isOpen && overlay ? \"\" : \"none\" }}\n            >\n              \n            </div>\n\n            { this.state.visibleCinePlayer && this.numberOfFrames > 1 ? (\n              <div style={{position:\"absolute\", width:'100%', bottom:0, textAlign:'center'}}>\n                <div style={{margin:'0 auto', width:'240px', backgroundColor:'rgba(136, 136, 136, 0.5)'}}>\n                  <CinePlayer runCinePlayer={this.runCinePlayer} inPlay={this.state.inPlay} />  \n                  <div \n                    id={`frameLabel-${this.props.index}`}\n                    style={{ width:230, margin:'0 auto', marginTop:-10, textAlign:\"center\" }}\n                  >\n                    {this.state.frame} / {this.numberOfFrames}\n                  </div> \n                </div>               \n              </div> \n              ) : null\n            }  \n            {/*<div style={{position:\"absolute\", width:'100%', height:'100%', top:0, left:0}}></div>*/}\n          </div>\n        </div>\n      )\n    }\n  }\n  \nconst mapStateToProps = (state) => {\n  return {\n    files: state.files,\n    series: state.series,\n    url: state.url,\n    isOpen: state.isOpen,\n    tool: state.tool,\n    activeDcmIndex: state.activeDcmIndex,\n    activeDcm: state.activeDcm,\n    explorerActiveSeriesIndex: state.explorerActiveSeriesIndex,\n    measurements: state.measurements,\n    layout: state.layout,\n    fsCurrentDir: state.fsCurrentDir,\n    fsCurrentList: state.fsCurrentList,\n    volume: state.volume,\n    lut: state.lut,\n    //sandboxedFile: state.sandboxedFile,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearingStore: () => dispatch(clearStore()),\n    setIsOpenStore: (value) => dispatch(dcmIsOpen(value)),\n    toolStore: (tool) => dispatch(dcmTool(tool)),\n    setActiveDcm: (dcm) => dispatch(activeDcm(dcm)),\n    setActiveMeasurements: (measurements) => dispatch(activeMeasurements(measurements)),\n    makeFsRefresh: (dcm) => dispatch(doFsRefresh()),\n    //setLutStore: (lut) => dispatch(setLut(lut)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DicomViewer)\n","import React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Icon from '@mdi/react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { SETTINGS_DCMHEADER } from '../constants/settings'\r\nimport { toCsv } from '../functions'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n    mdiContentSaveOutline\r\n} from '@mdi/js'\r\n\r\nconst DicomHeader = ({dcmViewer, classes, color}) => {\r\n    let header = []\r\n    header.push({name: 'Transfer Syntax', value: dcmViewer.getTransferSyntax()})\r\n    header.push({name: 'SOP Class', value: dcmViewer.getSopClass()})\r\n    header.push({name: 'SOP Instance UID', value: dcmViewer.getSopInstanceUID()})\r\n    header.push({name: 'Modality', value: dcmViewer.image.data.string('x00080060')})\r\n    header.push({name: 'Manufacturer', value: dcmViewer.image.data.string('x00080070')})\r\n    header.push({name: 'Study Description', value: dcmViewer.image.data.string('x00081030')})\r\n    header.push({name: 'Series Description', value: dcmViewer.image.data.string('x0008103E')})\r\n    header.push({name: 'Patient Name', value: dcmViewer.image.data.string('x00100010')})\r\n    header.push({name: 'Frame Rate', value: dcmViewer.image.data.string('x00082144')})\r\n\r\n    header.push({name: 'MR Acquisition Type', value: dcmViewer.image.data.string('x00180023')})\r\n    header.push({name: 'Slice Thickness', value: dcmViewer.image.data.string('x00180050')})\r\n    header.push({name: 'Spacing Between Slice', value: dcmViewer.image.data.string('x00180088')})\r\n    header.push({name: 'Patient Position', value: dcmViewer.image.data.string('x00185100')})\r\n\r\n    header.push({name: 'Study ID', value: dcmViewer.image.data.string('x00200010')})\r\n    header.push({name: 'Series Number', value: dcmViewer.image.data.string('x00200011')})\r\n    header.push({name: 'Acquisition Number', value: dcmViewer.image.data.string('x00200012')})\r\n    header.push({name: 'Instance Number', value: dcmViewer.image.data.string('x00200013')})\r\n    header.push({name: 'Image Position (Patient)', value: dcmViewer.image.data.string('x00200032')})\r\n    header.push({name: 'Image Orientation (Patient)', value: dcmViewer.image.data.string('x00200037')})\r\n    header.push({name: 'Images in Acquisition', value: dcmViewer.image.data.string('x00201002')}) \r\n    header.push({name: 'Slice Location', value: dcmViewer.image.data.string('x00201041')})        \r\n\r\n    header.push({name: 'Samples per Pixel', value: dcmViewer.image.data.uint16('x00280002')})\r\n    header.push({name: 'Photometric Interpretation', value: dcmViewer.image.data.string('x00280004')})\r\n    header.push({name: 'Number of Frames', value: dcmViewer.image.data.string('x00280008')})\r\n    header.push({name: 'Planar Configuration', value: dcmViewer.getPlanarConfiguration()})\r\n    header.push({name: 'Rows', value: dcmViewer.image.data.uint16('x00280010')})\r\n    header.push({name: 'Columns', value: dcmViewer.image.data.uint16('x00280011')})\r\n    header.push({name: 'Pixel Spacing', value: dcmViewer.image.data.string('x00280030')})\r\n    header.push({name: 'Bits Allocated', value: dcmViewer.image.data.uint16('x00280100')})\r\n    header.push({name: 'Bits Stored', value: dcmViewer.image.data.uint16('x00280101')})\r\n    header.push({name: 'High Bit', value: dcmViewer.image.data.uint16('x00280102')})\r\n    header.push({name: 'Pixel Representation', value: dcmViewer.getPixelRepresentation()})\r\n    header.push({name: 'Window Center', value: dcmViewer.image.data.string('x00281050')})\r\n    header.push({name: 'Window Width', value: dcmViewer.image.data.string('x00281051')})\r\n    header.push({name: 'Rescale Intercept', value: dcmViewer.image.data.string('x00281052')})\r\n    header.push({name: 'Rescale Slope', value: dcmViewer.image.data.string('x00281053')})\r\n    header.push({name: 'Min Stored Pixel Value', value: dcmViewer.image.minPixelValue})\r\n    header.push({name: 'Max Stored Pixel Value', value: dcmViewer.image.maxPixelValue})\r\n\r\n    header.push({name: 'Image Orientation', value: dcmViewer.image.data.string('x00700042')})\r\n    header.push({name: 'Image Horizontal Flip', value: dcmViewer.image.data.string('x00700041')})\r\n\r\n    const listItems = header.map((item, index) => {\r\n        if (item.value !== undefined) \r\n            return (\r\n                <ListItem dense={true} key={index}>\r\n                    <ListItemText primary={item.name} secondary={item.value} />\r\n                </ListItem>\r\n            ) \r\n        else return null\r\n    })\r\n\r\n    const saveHeader = () => {\r\n        let exportAs = localStorage.getItem(SETTINGS_DCMHEADER)\r\n        if (exportAs === null) {\r\n          exportAs = \"json\"\r\n          localStorage.setItem(SETTINGS_DCMHEADER, exportAs)\r\n        }  \r\n    \r\n        let fileData = ''\r\n        \r\n        if (exportAs === 'csv') {\r\n          fileData = toCsv(header)\r\n        } else {\r\n          const obj = header.reduce((o, item) => ({ ...o, [item.name]: item.value}), {})\r\n          fileData = JSON.stringify(obj)\r\n        }\r\n        \r\n        const element = document.createElement(\"a\")\r\n        const file = new Blob([fileData], {type: 'text/plain'})\r\n        element.href = URL.createObjectURL(file)\r\n        element.download = `${dcmViewer.localfile.name}.${exportAs}`\r\n        document.body.appendChild(element) // Required for this to work in FireFox\r\n        element.click()\r\n    }\r\n\r\n    console.log('dcmViewer', dcmViewer)\r\n\r\n    return (\r\n      <PerfectScrollbar>\r\n        <div style={{marginTop: '48px'}}>\r\n          <Toolbar variant=\"dense\">\r\n            <Typography variant=\"subtitle1\" className={classes.title}>\r\n              Dicom Header\r\n            </Typography>\r\n            <div className={classes.grow} />\r\n            <IconButton color=\"inherit\" onClick={saveHeader}>\r\n              <Icon path={mdiContentSaveOutline} size={'1.2rem'} color={color} />\r\n            </IconButton>\r\n          </Toolbar>    \r\n          <div>          \r\n            <List dense={true} component=\"div\">\r\n                {listItems}             \r\n            </List>\r\n          </div>      \r\n        </div>\r\n      </PerfectScrollbar>\r\n    )\r\n}\r\n  \r\nexport default DicomHeader\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport {\r\n  setZippedFile,\r\n} from '../actions/index'\r\n\r\nconst CancelToken = axios.CancelToken\r\nconst source = CancelToken.source()\r\n\r\nclass DownloadZipDlg extends PureComponent {\r\n\r\n  state = {\r\n    loading: 0\r\n  }\r\n\r\n  componentDidMount(previousProps) {\r\n    this.requestDownloadZip()\r\n  }\r\n\r\n  hide = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  cancel = () => {\r\n    source.cancel('Operation canceled by the user.')\r\n    this.hide()\r\n  }\r\n\r\n  requestDownloadZip = () => {\r\n    console.log('this.props.url', this.props.url)\r\n    this.setState({loading: 0})\r\n    axios({\r\n      method: 'get',\r\n      url: this.props.url,\r\n      responseType: 'arraybuffer',\r\n      cancelToken: source.token,\r\n      onDownloadProgress: (progressEvent) => {\r\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n        this.setState({ loading: percentCompleted })\r\n        console.log('loading: ', percentCompleted)\r\n      },\r\n    }).then((response) => {\r\n        console.log('response: ', response)\r\n        this.props.setFsZippedFile(response.data)\r\n        this.hide()\r\n    }).catch((error) => {\r\n      console.log('error: ', error)\r\n    })\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n            open={true}\r\n            onClose={this.hide}\r\n        >\r\n            <DialogTitle>{\"Downloading zip archive...\"}</DialogTitle>\r\n            <DialogContent>\r\n              <LinearProgress variant=\"determinate\" value={this.state.loading} color='secondary' />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFsZippedFile: (file) => dispatch(setZippedFile(file))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DownloadZipDlg)\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport DicomViewer from './DicomViewer'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport {\r\n    seriesStore,\r\n    filesStore,\r\n    explorer,\r\n    explorerActivePatientIndex,\r\n    explorerActiveStudyIndex,\r\n    explorerActiveSeriesIndex,\r\n  } from '../actions'\r\n\r\nimport {\r\n    groupBy,\r\n} from '../functions'\r\n\r\nconst style = {\r\n    width: '200px', \r\n    padding: '8px 8px 8px 8px', \r\n    marginTop: '40px',\r\n}\r\n\r\nconst styleScrollbar = {\r\n    height: 'calc(100vh - 48px)',\r\n}\r\n\r\nconst styleDicomViewerStack = {\r\n    width: '182px', \r\n    marginTop: '10px',\r\n    marginLeft: '7px',\r\n}\r\n\r\nconst styleDicomViewer = { \r\n    padding: '4px 4px 4px 4px', \r\n}\r\n\r\nconst styles = theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 180,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    selectText: {\r\n        fontSize: '0.85em',\r\n    },    \r\n    menuItemText: {\r\n        fontSize: '0.85em',\r\n    },\r\n})\r\n\r\nclass Explorer extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.dicomViewersRefs = []\r\n        this.dicomViewers = []\r\n        for(let i=0; i < 16; i++) {\r\n          this.dicomViewers.push(this.setDcmViewer(i))\r\n        }\r\n      }\r\n\r\n    state = {\r\n        patientName: this.props.explorer.patient.keys[0],\r\n        studies: [],\r\n        study: '',\r\n        series: [],\r\n        seriesActiveIndex: 0,\r\n    }\r\n\r\n    setDcmViewer = (index) => {\r\n        return (\r\n          <div style={styleDicomViewer}>  \r\n            <DicomViewer \r\n                dcmRef={(ref) => {this.dicomViewersRefs[index] = ref}}\r\n                index={index}\r\n                runTool={ref => (this.runTool = ref)} \r\n                changeTool={ref => (this.changeTool = ref)}\r\n                onLoadedImage={this.onLoadedImage}\r\n                overlay={true}\r\n                visible={true} \r\n                use='preview'\r\n            />   \r\n          </div> \r\n        )\r\n    }\r\n    \r\n    onLoadedImage = () => {\r\n        //console.log('Explorer - onLoadedImage: ')\r\n    }\r\n\r\n    getDcmViewerRef = (index) => {\r\n        return this.dicomViewersRefs[index]\r\n    }\r\n\r\n    getDcmViewer = (index) => {\r\n        return this.dicomViewers[index]\r\n    }\r\n\r\n    buildPreviewStack = (rows) => {\r\n        this.dicomviewers = []\r\n        for(let i=0; i < rows; i++) {\r\n            this.dicomviewers.push(\r\n              <div \r\n                key={i} \r\n                onClick={() => this.previewStackClick(i)} \r\n                onTouchStart={() => this.previewStackTouch(i)}\r\n              >\r\n                {this.getDcmViewer(i)}\r\n              </div>        \r\n            )\r\n        }\r\n        \r\n        return (\r\n          <div\r\n            id=\"dicomviewer-grid\"\r\n            style={{\r\n              display: 'grid',\r\n              gridTemplateRows: `repeat(${rows}, ${100 / rows}%)`,\r\n              gridTemplateColumns: `repeat(${1}, ${100}%)`,\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {this.dicomviewers}\r\n          </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log('Explorer - componentDidMount: ')\r\n\r\n        const patientIndex = this.props.explorerActivePatientIndex\r\n        const studyIndex = this.props.explorerActiveStudyIndex\r\n        const patientName = this.props.explorer.patient.keys[patientIndex]\r\n        \r\n        this.setState({patientName: patientName}, () => {\r\n            this.filesListForPatient = this.props.allFiles.filter((a) => {\r\n                return a.patient.patientName === patientName}\r\n            )\r\n            //console.log('filesListForPatient: ', this.filesListForPatient)\r\n            \r\n            this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDateTime)\r\n            let studyKeys = [...this.studyList.keys()]\r\n            if (this.studyList.get(studyKeys[0])[0].study.studyDate === undefined) {\r\n                this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDescription)\r\n                studyKeys = [...this.studyList.keys()]\r\n            }\r\n            this.study = {\r\n              list: this.studyList,\r\n              keys: studyKeys\r\n            }\r\n\r\n            //console.log('this.studyList: ', this.studyList.get(studyKeys[0]))\r\n            //console.log('study: ', this.study)\r\n\r\n            this.seriesList = groupBy(this.studyList.get(studyKeys[0]), a => a.series.seriesNumber) // this.filesListForPatient\r\n            const seriesKeys = [...this.seriesList.keys()]\r\n            \r\n            //console.log('seriesList: ', this.seriesList)\r\n            //console.log('seriesKeys: ', seriesKeys)\r\n\r\n            this.series = {\r\n                seriesList: this.seriesList,\r\n                seriesKeys: seriesKeys\r\n            }\r\n            this.files = this.series.seriesList.get(seriesKeys[0])\r\n            this.props.setSeriesStore(this.series)\r\n\r\n            this.setState({study: this.study.keys[studyIndex], studies: studyKeys, series: seriesKeys}, () => {               \r\n\r\n                //this.props.setSeriesStore(this.series)\r\n\r\n                //this.files = this.series.seriesList.get(this.state.series[0])\r\n\r\n                //this.props.setFilesStore(this.files)\r\n                //this.props.onSelectSeries(this.seriesList.get(seriesKeys[0]))\r\n                this.previewStackClick(0)\r\n            })\r\n\r\n            //this.props.setExplorerActiveSeriesIndex(0) \r\n            \r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log('Explorer - componentDidUpdate: ', this.state.series)\r\n        for(let i=0; i < this.state.series.length; i++) {\r\n            this.dicomViewersRefs[i].runTool('setfiles', this.seriesList.get(this.state.series[i]))\r\n            this.dicomViewersRefs[i].runTool('openimage', 0)\r\n        }\r\n    }\r\n\r\n    handlePatientChange = (event, value) => {\r\n        //console.log('handlePatientChange: ', value)\r\n\r\n        this.patientName = event.target.value\r\n        const patientIndex = value.key\r\n\r\n        //console.log('patientIndex: ', patientIndex)\r\n\r\n        this.filesListForPatient = this.props.allFiles.filter((a) => {\r\n            return a.patient.patientName === this.patientName}\r\n        )\r\n        //console.log('filesListForPatient: ', this.filesListForPatient)\r\n\r\n        this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDateTime)\r\n        const studyKeys = [...this.studyList.keys()]\r\n        this.study = {\r\n          list: this.studyList,\r\n          keys: studyKeys\r\n        }\r\n        //console.log('study: ', this.study)\r\n        \r\n        this.seriesList = groupBy(this.studyList.get(studyKeys[0]), a => a.series.seriesNumber) // this.filesListForPatient\r\n        const seriesKeys = [...this.seriesList.keys()]\r\n\r\n        this.series = {\r\n            seriesList: this.seriesList,\r\n            seriesKeys: seriesKeys\r\n        }\r\n        this.props.setSeriesStore(this.series)\r\n\r\n        this.setState({patientName: this.patientName, study: this.study.keys[0], studies: studyKeys, series: seriesKeys}, () => {\r\n            //for(let i=0; i < this.state.series.length; i++) {\r\n                //const file = this.seriesList.get(this.state.series[i])[0]\r\n                //const index = this.props.allFiles.map(e => e.name).indexOf(file.name)\r\n            //    this.dicomViewersRefs[i].runTool('openimage', 0)\r\n            //}\r\n            //this.series = {\r\n            //    seriesList: this.seriesList,\r\n            //    seriesKeys: this.state.series\r\n            //}\r\n\r\n            /*const explorerData = {\r\n                patient: patientName,\r\n                study: this.study,\r\n                series: series,\r\n            }\r\n\r\n            this.props.setExplorer(explorerData)*/\r\n\r\n            this.props.setExplorerActivePatientIndex(patientIndex)\r\n            //this.props.setSeriesStore(this.series)\r\n\r\n            //this.props.setFilesStore(this.series.seriesList.get(this.state.series[0]))\r\n\r\n            //console.log('handlePatientChange - handlePatientChange: ')\r\n            //this.props.onSelectSeries(this.series.seriesList.get(seriesKeys[0]))\r\n            this.previewStackClick(0)\r\n            //console.log('this.dicomviewers: ', this.dicomviewers[0].props.onClick())\r\n            //this.dicomviewers[0].onClick()\r\n            //this.dicomviewers[0].props.onClick()\r\n        })\r\n    }\r\n\r\n    handleStudyChange = (event, value) => {\r\n        //console.log('handleStudyChange, event: ', event)\r\n        //console.log('handleStudyChange, value: ', value)\r\n\r\n        const studyIndex = value.key\r\n\r\n        this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDateTime)\r\n        let studyKeys = [...this.studyList.keys()]\r\n        if (this.studyList.get(studyKeys[0])[0].study.studyDate === undefined) {\r\n            this.studyList = groupBy(this.filesListForPatient, a => a.study.studyDescription)\r\n            studyKeys = [...this.studyList.keys()]\r\n        }\r\n        this.study = {\r\n          list: this.studyList,\r\n          keys: studyKeys\r\n        }\r\n        \r\n        //console.log('this.studyList: ', this.studyList.get(studyKeys[studyIndex]))\r\n        //console.log('study: ', this.study)\r\n\r\n        this.seriesList = groupBy(this.studyList.get(studyKeys[studyIndex]), a => a.series.seriesNumber) // this.filesListForPatient\r\n        const seriesKeys = [...this.seriesList.keys()]\r\n\r\n        //console.log('seriesList: ', this.seriesList)\r\n        //console.log('seriesKeys: ', seriesKeys)\r\n\r\n        this.series = {\r\n            seriesList: this.seriesList,\r\n            seriesKeys: seriesKeys\r\n        }\r\n        this.props.setSeriesStore(this.series)\r\n\r\n        //this.files = this.seriesList.get(seriesKeys[0])\r\n\r\n        this.setState({study: this.study.keys[studyIndex], studies: studyKeys, series: seriesKeys}, () => {\r\n            //for(let i=0; i < seriesKeys.length; i++) {\r\n            //    console.log('i: ', i)\r\n                //const file = this.seriesList.get(seriesKeys[i])[0]\r\n                //console.log('file: ', file)\r\n                //const index = this.props.allFiles.map(e => e.name).indexOf(file.name)\r\n                //this.dicomViewersRefs[i].runTool('setfiles', this.seriesList.get(seriesKeys[i]))\r\n                //this.dicomViewersRefs[i].runTool('openimage', 0)\r\n            //}\r\n            //this.props.setFilesStore(this.files) \r\n            //this.props.onSelectSeries(this.files) \r\n            //this.props.setExplorerActiveStudyIndex(studyIndex)\r\n            //this.props.onSelectSeries(this.series.seriesList.get(seriesKeys[0]))  \r\n            this.previewStackClick(0)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    previewStackClick = (index) => {\r\n        //console.log('previewStackClick: ', index)\r\n        //console.log('previewStackClick - this.state.seriesActiveIndex: ', this.state.seriesActiveIndex)\r\n        //if (index === this.state.seriesActiveIndex) return\r\n        this.props.setExplorerActiveSeriesIndex(index) \r\n        this.setState({seriesActiveIndex: index}, () => {\r\n            this.props.onSelectSeries(this.series.seriesList.get(this.state.series[index]))\r\n        })\r\n    }\r\n\r\n    previewStackTouch = (index) => {\r\n        //if (index === this.state.seriesActiveIndex) return\r\n        this.props.setExplorerActiveSeriesIndex(index)\r\n        this.setState({seriesActiveIndex: index}, () => {\r\n            this.props.onSelectSeries(this.series.seriesList.get(this.state.series[index]))\r\n        })\r\n    }\r\n\r\n    render() {   \r\n        const { classes } = this.props\r\n    \r\n        //console.log('Explorer render:')\r\n\r\n        return (\r\n            <PerfectScrollbar> \r\n                <div style={styleScrollbar}>\r\n                    <div style={style}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"patient-label\">Patient</InputLabel>\r\n                            <Select\r\n                                className={classes.selectText}\r\n                                labelId=\"patient-select-label\"\r\n                                id=\"patient-select\"\r\n                                value={this.state.patientName}\r\n                                onChange={this.handlePatientChange}\r\n                            >\r\n                                {this.props.explorer.patient.keys.map((patient, index) => (\r\n                                    <MenuItem className={classes.menuItemText} value={patient} key={index}>{patient}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"study-label\">Study</InputLabel>\r\n                            <Select\r\n                                className={classes.selectText}\r\n                                labelId=\"study-select-label\"\r\n                                id=\"study-select\"\r\n                                value={this.state.study}\r\n                                onChange={this.handleStudyChange}\r\n                            >\r\n                                {this.state.studies.map((study, index) => (\r\n                                    // `${studyDate} - ${studyTime}`\r\n                                    <MenuItem className={classes.menuItemText} value={study} key={index}>{study}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        \r\n                        <div style={styleDicomViewerStack}>\r\n                            {\r\n                                this.buildPreviewStack(this.state.series.length)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n          </PerfectScrollbar> \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      allFiles: state.allFiles,\r\n      explorerActivePatientIndex: state.explorerActivePatientIndex,\r\n      explorerActiveStudyIndex: state.explorerActiveStudyIndex,\r\n      explorerActiveSeriesIndex: state.explorerActiveSeriesIndex,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setFilesStore: (files) => dispatch(filesStore(files)),\r\n        setExplorer: (data) => dispatch(explorer(data)),\r\n        setExplorerActivePatientIndex: (index) => dispatch(explorerActivePatientIndex(index)),\r\n        setExplorerActiveStudyIndex: (index) => dispatch(explorerActiveStudyIndex(index)),\r\n        setExplorerActiveSeriesIndex: (index) => dispatch(explorerActiveSeriesIndex(index)),\r\n        setSeriesStore: (series) => dispatch(seriesStore(series)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Explorer))\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport * as cornerstone from \"cornerstone-core\"\r\nimport * as cornerstoneWADOImageLoader from \"cornerstone-wado-image-loader\"\r\nimport {\r\n  allFilesStore,\r\n  filesStore,\r\n} from '../actions'\r\nimport { \r\n  getDicomPatientName,\r\n  getDicomStudyId,\r\n  getDicomStudyDate,\r\n  getDicomStudyTime,\r\n  getDicomStudyDescription,\r\n  getDicomSeriesDate,\r\n  getDicomSeriesTime,\r\n  getDicomSeriesDescription,\r\n  getDicomSeriesNumber,\r\n  getDicomInstanceNumber,\r\n  getDicomSliceLocation,\r\n  getDicomSliceDistance,\r\n  getDicomRows,\r\n  getDicomColumns,\r\n  getFileNameCorrect,\r\n  dicomDateTimeToLocale,\r\n} from '../functions'\r\n\r\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone\r\n\r\nclass OpenMultipleFilesDlg extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.items = []\r\n    this.count = 0\r\n    this.step = 0\r\n    //this.slicesDistance = []\r\n  }\r\n\r\n  state = {\r\n    progress: 0,\r\n    cancel: false,\r\n  }  \r\n\r\n  componentDidMount() {\r\n    //console.log('OpenMultipleFilesDlg - componentDidMount: ', this.props.files.length)\r\n    this.step = this.props.files.length / 50\r\n    this.nextProgress = this.step\r\n    this.t0 = performance.now()\r\n\r\n    for (let i=0; i<this.props.files.length; i++) {\r\n      const file = this.props.files[i]\r\n      if (this.state.cancel) {\r\n        this.props.setAllFilesStore(null)\r\n        this.props.setFilesStore(null)\r\n        this.close()\r\n        return\r\n      }\r\n      let imageId = null \r\n      \r\n      if (this.props.origin === 'local')\r\n        imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(file)\r\n      else // it's fs item\r\n        imageId = cornerstoneWADOImageLoader.wadouri.fileManager.addBuffer(file.data)  \r\n\r\n      cornerstone.loadImage(imageId).then((image) => {\r\n\r\n        const patientName = getDicomPatientName(image)\r\n\r\n        const studyId = getDicomStudyId(image)\r\n        const studyDate = getDicomStudyDate(image)\r\n        const studyTime = getDicomStudyTime(image)\r\n        const studyDescription = getDicomStudyDescription(image)\r\n\r\n        const seriesDate = getDicomSeriesDate(image)\r\n        const seriesTime = getDicomSeriesTime(image)\r\n        const seriesDescription = getDicomSeriesDescription(image)        \r\n        const seriesNumber = getDicomSeriesNumber(image)\r\n\r\n        const instanceNumber = getDicomInstanceNumber(image)\r\n        const sliceDistance = getDicomSliceDistance(image)\r\n        const sliceLocation = getDicomSliceLocation(image)  \r\n        const columns = getDicomColumns(image)       \r\n        const rows = getDicomRows(image)\r\n\r\n        const studyDateTime = studyDate === undefined ? undefined : dicomDateTimeToLocale(`${studyDate}.${studyTime}`)\r\n\r\n        let item = null\r\n        if (this.props.origin === 'local')\r\n          \r\n          item = {\r\n            imageId: imageId, \r\n            instanceNumber: instanceNumber, \r\n            name: getFileNameCorrect(file.name), \r\n            image: image, \r\n            rows: rows, \r\n            columns: columns, \r\n            sliceDistance: sliceDistance,\r\n            sliceLocation: sliceLocation,\r\n            patient: {\r\n              patientName: patientName\r\n            },\r\n            study: {\r\n              studyId: studyId,\r\n              studyDate: studyDate,\r\n              studyTime: studyTime,\r\n              studyDateTime: studyDateTime,\r\n              studyDescription: studyDescription\r\n            },\r\n            series: {\r\n              seriesDate: seriesDate,\r\n              seriesTime: seriesTime,\r\n              seriesDescription: seriesDescription,\r\n              seriesNumber: seriesNumber\r\n            }\r\n          }\r\n        else\r\n          item = {\r\n            imageId: imageId, \r\n            instanceNumber: instanceNumber, \r\n            name: file.name, \r\n            image: image, \r\n            rows: rows, \r\n            columns: columns, \r\n            sliceDistance: sliceDistance,\r\n            sliceLocation: sliceLocation,  \r\n            patient: {\r\n              patientName: patientName\r\n            },\r\n            study: {\r\n              studyId: studyId,\r\n              studyDate: studyDate,\r\n              studyTime: studyTime,\r\n              studyDateTime: studyDateTime,\r\n              studyDescription: studyDescription\r\n            },\r\n            series: {\r\n              seriesDate: seriesDate,\r\n              seriesTime: seriesTime,\r\n              seriesDescription: seriesDescription,\r\n              seriesNumber: seriesNumber\r\n            }          \r\n          }\r\n        this.items.push(item)\r\n        this.count++\r\n\r\n        const progress = Math.floor(this.count*(100/this.props.files.length))\r\n        //\r\n        if (progress > this.nextProgress) {\r\n          this.nextProgress += this.step\r\n          this.setState({progress: progress})\r\n        }\r\n        if (this.count === this.props.files.length) {\r\n          this.items.sort((l, r) => {\r\n            return l.instanceNumber - r.instanceNumber\r\n            // return l.sliceDistance - r.sliceDistance\r\n            // return l.sliceLocation - r.sliceLocation\r\n          })\r\n          this.t1 = performance.now()\r\n          console.log(`performance load image: ${this.t1-this.t0} milliseconds`)\r\n          this.props.setAllFilesStore(this.items)\r\n          this.props.setFilesStore(this.items)\r\n          this.close()\r\n        }\r\n\t\t\t}, (e) => {\r\n        console.log('Error in reading multiple files: ', e)\r\n        this.count++\r\n      })\r\n      if (this.count === this.props.files.length) {\r\n        \r\n      }   \r\n    }\r\n    //this.close()\r\n  }\r\n\r\n  close = () => {\r\n    //console.log('this.slicesDistance: ', this.slicesDistance)\r\n    this.props.onClose()\r\n  }\r\n\r\n  cancel = () => {\r\n    this.setState({cancel: true}) \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n            open={true}\r\n            onClose={this.close}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Opening multiple files ...\"}</DialogTitle>\r\n            <DialogContent>\r\n              <LinearProgress variant=\"determinate\" value={this.state.progress} color='secondary' />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      setAllFilesStore: (files) => dispatch(allFilesStore(files)),\r\n      setFilesStore: (files) => dispatch(filesStore(files)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OpenMultipleFilesDlg)\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Icon from '@mdi/react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\n// import {List as ListVirtual} from 'react-virtualized'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver'\r\nimport fs from '../fs/fs'\r\nimport OpenMultipleFilesDlg from './OpenMultipleFilesDlg'\r\nimport {\r\n    getFileExt,\r\n    getFileExtReal,\r\n    getFileName,\r\n    formatBytes,\r\n    getSettingsFsView,\r\n    getFileNameCorrect,\r\n} from '../functions'\r\nimport {\r\n    //setFsCurrentId,\r\n    setFsCurrentDir,\r\n    setFsCurrentList,\r\n    setZippedFile,\r\n    fsFileStore,\r\n} from '../actions'\r\nimport {\r\n    mdiCheck,\r\n    mdiChevronLeft,\r\n    mdiClose,\r\n    mdiContentCopy,\r\n    mdiContentCut,\r\n    mdiContentPaste,\r\n    mdiContentSaveOutline,\r\n    mdiDeleteOutline,\r\n    mdiDotsHorizontal,\r\n    mdiExportVariant, \r\n    mdiFolderOutline,   \r\n    mdiFolderPlusOutline,\r\n    mdiCheckBoxOutline,\r\n    mdiSquareEditOutline,\r\n} from '@mdi/js'\r\n\r\nconst styles = theme => ({\r\n    table: {\r\n        minWidth: 250,\r\n    },\r\n    tableCellText: {\r\n        fontSize: '0.80em',\r\n    },\r\n    toolbarButtons: {\r\n        marginLeft: 'auto',\r\n        marginRight: -20,\r\n    },\r\n    leftButtons: {\r\n        marginLeft: -25,\r\n    },\r\n    textPaper: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 250,\r\n    },\r\n    textInput: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    textButton: {\r\n        padding: 10,\r\n    },\r\n})\r\n\r\nconst styleScrollbar = {\r\n    height: 'calc(100vh - 48px)'\r\n}\r\n\r\nclass FsUI extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.files = []\r\n        this.cut = false\r\n        this.itemsCount = 0\r\n        this.saveAsField = React.createRef()\r\n\r\n      }\r\n\r\n    state = {\r\n        textFieldLabel: '',\r\n        textFieldValue: '',\r\n        selected: [],\r\n        selectedCopy: [],\r\n        visibleTextField: false,\r\n        visibleDeleteDlg: false,\r\n        visibleOthers: false,\r\n        visibleAlreadyExistDlg: false,\r\n        visibleOSaveAsDlg: false,\r\n        visibleWaiting: false,\r\n        visibleOpenMultipleFilesDlg: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fsListDir(this.props.fsCurrentDir)\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        //console.log('componentDidUpdate: ', this.props)\r\n        if (this.props.fsZippedFile !== null) {\r\n            const zip = new JSZip()\r\n            zip.loadAsync(this.props.fsZippedFile).then((contents) => {\r\n                //console.log('zip file contents: ', contents)\r\n                contents.forEach((relativePath, zipEntry) => {\r\n                    //console.log('zipEntry: ', zipEntry)\r\n                    if (zipEntry.dir) { \r\n                        //console.log('dir relativePath: ', relativePath)\r\n                    } else {                  \r\n                        //console.log('file relativePath: ', relativePath)\r\n                        zip.file(relativePath).async('uint8array').then((content) => {\r\n                            this.fsAddItem(relativePath, content)\r\n                        })\r\n                    }\r\n                })\r\n            }).then(() => {\r\n                this.props.setFsZippedFile(null)\r\n                //this.fsListDir(this.props.fsCurrentDir)\r\n            })\r\n        } else {\r\n            //this.fsListDir(this.props.fsCurrentDir)\r\n        }\r\n    }\r\n\r\n    fsBuildParent(parent, name) {\r\n        let newParent = ''\r\n        if (parent === '') {\r\n            if (name !== '') \r\n                newParent = name\r\n        } else {\r\n            if (name !== '') \r\n                newParent = `${parent}/${name}` \r\n            else\r\n                newParent = parent\r\n        }\r\n        return newParent\r\n    }\r\n\r\n    fsAddItem(filename, data) {\r\n        //console.log('fsAddItem filename: ', filename)\r\n        //console.log('fsAddItem data: ', data)\r\n        let components = filename.split('/')\r\n        const name = components.pop()\r\n        const parent = this.fsBuildParent(this.props.fsCurrentDir, components.join('/'))\r\n        //console.log(`add file, parent: ${parent}, name: ${name}`)\r\n        fs.transaction('rw', fs.files, async () => {\r\n            await fs.files.add({\r\n                parent: parent,\r\n                name: name,\r\n                type: getFileExt(name),\r\n                size: data.length,\r\n                data: data\r\n            })             \r\n        }).then(() => {\r\n            // store subdirectory\r\n            while (components.length > 0) {\r\n                const name = components.pop()\r\n                const parent = this.fsBuildParent(this.props.fsCurrentDir, components.join('/'))\r\n                //console.log(`put dir, parent: ${parent}, name: ${name}`)\r\n                fs.transaction('rw', fs.files, async () => {\r\n                    await fs.files.put({\r\n                        parent: parent,\r\n                        name: name,\r\n                        type: 'dir',\r\n                        size: '' \r\n                    }) \r\n                }).then(() => {\r\n                    this.fsListDir(this.props.fsCurrentDir)\r\n                })\r\n            }            \r\n        })\r\n    }\r\n\r\n    fsExistDir(dir, create = true) {\r\n        const item = this.props.fsCurrentList.find(e => e.name === dir)\r\n        if (item !== undefined) {\r\n            if (create) {\r\n                this.fsCreateDir(this.props.fsCurrentDir, dir)\r\n                return true\r\n            } else return false\r\n        } else return false\r\n    }\r\n\r\n    fsListDir(dir) {\r\n        //console.log('fsListDir: ', dir)\r\n        let listItems = []\r\n        fs.transaction('r', fs.files, () => {\r\n            fs.files.where({parent: dir, type: 'dir'}).sortBy('name').then((list) => { // first list all dirs\r\n                listItems = list\r\n            }).then(() => { // after list all files\r\n                fs.files.where({parent: dir}).and(item => item.type !== 'dir').sortBy('name').then((list) => {\r\n                    listItems = listItems.concat(list)\r\n                }).then(() => {\r\n                    this.props.setCurrentList(listItems)\r\n                    setTimeout(() => this.setState({visibleWaiting: false}), 1000)\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    fsCreateDir(parent, name) {\r\n        fs.files.add({parent: parent, name: name, type: 'dir', size: ''}).then(() => { \r\n            this.fsListDir(this.props.fsCurrentDir)\r\n        })\r\n    }\r\n\r\n    doSelectUnselect = () => {\r\n        let newSelected = []\r\n        if (this.state.selected.length > 0) { // unselect the files\r\n            this.setState({selected: newSelected})            \r\n        } else { // select only files not dir\r\n            this.props.fsCurrentList.forEach((item) => {\r\n                if (item.type !== 'dir') {\r\n                    newSelected.push(item.name)\r\n                }\r\n                this.setState({selected: newSelected}, () => {\r\n                    //console.log('this.state.selected: ', this.state.selected)\r\n                })\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    openSelectedFilesRetrieveItems = async () => {\r\n        await fs.transaction('r', fs.files, async () => {\r\n            this.state.selected.forEach( async (name, index) => {\r\n                await fs.files.where({parent: this.props.fsCurrentDir, name: name}).first((item) => {\r\n                    //console.log('item: ', item)\r\n                    if (item !== undefined && item.type !== 'dir') {\r\n                        this.files.push(item)\r\n                    } else if (item.type === 'dir') {\r\n                        fs.files.where('parent').startsWithIgnoreCase(item.name).each((e) => {\r\n                            if (e !== undefined && e.type !== 'dir') {\r\n                                //console.log(' e: ', e) \r\n                                this.files.push(e)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n             })\r\n        })\r\n    }\r\n\r\n    openSelectedFiles = () => {\r\n        if (this.state.selected.length === 0) return\r\n        this.files = []\r\n        this.openSelectedFilesRetrieveItems().then(() => {\r\n            this.setState({visibleOpenMultipleFilesDlg: true})\r\n            this.setState({selected: []})  \r\n        })\r\n    }\r\n\r\n    hideOpenMultipleFilesDlg = () => {\r\n        this.setState({ visibleOpenMultipleFilesDlg: false })\r\n        if (this.props.files.length > 1) {\r\n            this.props.onOpenMultipleFilesCompleted()\r\n        } else this.props.onOpenImage(0)\r\n    }\r\n\r\n    createDir = () => {\r\n        this.setState({textFieldLabel: 'new folder name', visibleTextField: !this.state.visibleTextField})\r\n    }\r\n\r\n    renameItem = () => {\r\n        this.lastSelected = this.state.selected[this.state.selected.length-1]\r\n        this.setState({textFieldLabel: '', textFieldValue: this.lastSelected, visibleTextField: !this.state.visibleTextField})\r\n    }\r\n\r\n    previousDir = () => {\r\n        //console.log('this.state.parentDir: ', this.state.parentDir)\r\n        if (this.props.fsCurrentDir === '') return\r\n        const nextDir = this.props.fsCurrentDir.split('/').slice(0, -1).join('/')\r\n        this.props.setCurrentDir(nextDir)\r\n        this.fsListDir(nextDir)\r\n    }\r\n\r\n    confirmText = (e) => {\r\n        if (this.state.textFieldLabel === '') { // it's a rename\r\n            // check if the new name already exist\r\n            const check = this.props.fsCurrentList.find(e => e.name === this.state.textFieldValue)\r\n            if (check !== undefined) {\r\n                this.setState({visibleAlreadyExistDlg: true})\r\n                return\r\n            }\r\n            const item = this.props.fsCurrentList.find(e => e.name === this.lastSelected)\r\n            if (item !== undefined) {\r\n                if (item.type === 'dir') {\r\n                    const oldParent = this.fsBuildParent(item.parent, item.name)\r\n                    const newParent = this.fsBuildParent(item.parent, this.state.textFieldValue)\r\n                    // rename parent for all subitems\r\n                    fs.transaction('rw', fs.files, async () => {\r\n                        await fs.files.where({parent: oldParent}).each((e) => {\r\n                            fs.transaction('rw', fs.files, async () => { // since is a new primary key then add it as new item \r\n                                await fs.files.add({\r\n                                parent: newParent,\r\n                                name: e.name,\r\n                                type: e.type,\r\n                                size: e.size,\r\n                                data: e.data\r\n                                }).then(() => { // then delete old one\r\n                                    fs.files.where({parent: oldParent}).delete()\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                } \r\n                fs.transaction('rw', fs.files, async () => { // a new primary key, add it as new item \r\n                    await fs.files.add({\r\n                      parent: item.parent,\r\n                      name: this.state.textFieldValue,\r\n                      type: item.type,\r\n                      size: item.size,\r\n                      data: item.data\r\n                    }).then(() => { // then delete old one\r\n                        fs.files.where({parent: item.parent, name: item.name}).delete()\r\n                    })\r\n                })\r\n                this.setState({visibleTextField: false})\r\n                this.fsListDir(this.props.fsCurrentDir)                \r\n            }\r\n        } else { // it's a new directory\r\n            this.setState({visibleTextField: false}, () => {\r\n                this.fsCreateDir(this.props.fsCurrentDir, this.state.textFieldValue)\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelDir = () => {\r\n         this.setState({visibleTextField: false})\r\n    }\r\n\r\n    saveItem = () => {\r\n        //console.log('this.props.localFileStore: ', this.props.localFileStore)\r\n        //console.log('this.props.fsFileStore: ', this.props.fsFileStore)\r\n        //console.log('this.props.activeDcm: ', this.props.activeDcm)\r\n\r\n        if (this.props.localFileStore !== null) {\r\n            const file = this.props.localFileStore\r\n            if (file === null) return\r\n            let reader = new FileReader()\r\n            reader.onload = (event) => {\r\n                let buffer = event.target.result\r\n                const ext = getFileExtReal(file.name)\r\n                //console.log('ext: ', ext)\r\n                const name = getFileName(getFileNameCorrect(file.name))   \r\n                //console.log('name: ', name)\r\n                let newName = name\r\n                let counter = 0\r\n                let done = false             \r\n                do {\r\n                    let filename = ext === '' ? newName : `${newName}.${ext}`\r\n                    const checkName = this.props.fsCurrentList.find(e => e.name === filename)\r\n                    if (checkName === undefined) {\r\n                        fs.transaction('rw', fs.files, async () => {\r\n                            await fs.files.add({\r\n                                parent: this.props.fsCurrentDir,\r\n                                name: filename,\r\n                                type: ext === '' ? getFileExt(name) : ext,\r\n                                size: file.size,\r\n                                data: buffer\r\n                            })\r\n                        }).then(() => {\r\n                            this.fsListDir(this.props.fsCurrentDir)\r\n                        })\r\n                        done = true\r\n                    } else {\r\n                        newName = `${name} - Copy`\r\n                        if (counter > 0) newName = `${newName} (${counter})`\r\n                        counter++\r\n                    }\r\n                } while (!done)\r\n            }\r\n            reader.readAsArrayBuffer(file)\r\n        } else if (this.props.fsFileStore !== null) {\r\n            const file = this.props.fsFileStore\r\n            let buffer = file.data\r\n            const ext = getFileExtReal(file.name)\r\n            const name = getFileName(getFileNameCorrect(file.name))   \r\n            let newName = name\r\n            let counter = 0\r\n            let done = false             \r\n            do {\r\n                let filename = ext === '' ? newName : `${newName}.${ext}`\r\n                const checkName = this.props.fsCurrentList.find(e => e.name === filename)\r\n                if (checkName === undefined) {\r\n                    fs.transaction('rw', fs.files, async () => {\r\n                        await fs.files.add({\r\n                            parent: this.props.fsCurrentDir,\r\n                            name: filename,\r\n                            type: getFileExt(name),\r\n                            size: file.size,\r\n                            data: buffer\r\n                        })\r\n                    }).then(() => {\r\n                        this.fsListDir(this.props.fsCurrentDir)\r\n                    })\r\n                    done = true\r\n                } else {\r\n                    newName = `${name} - Copy`\r\n                    if (counter > 0) newName = `${newName} (${counter})`\r\n                    counter++\r\n                }\r\n            } while (!done)           \r\n        }\r\n    }\r\n\r\n    copyItem = () => {\r\n        let newSelectedCopy = []\r\n        this.state.selected.forEach(name => {\r\n            const item = this.props.fsCurrentList.find(e => e.name === name)\r\n            if (item !== undefined) {\r\n                newSelectedCopy.push({parent: item.parent, name: item.name})\r\n            }\r\n        })\r\n        this.setState({selectedCopy: newSelectedCopy})\r\n    }\r\n\r\n    cutItem = () => {\r\n        let newSelectedCopy = []\r\n        this.state.selected.forEach(name => {\r\n            let item = this.props.fsCurrentList.find(e => e.name === name)\r\n            if (item !== undefined) {\r\n                newSelectedCopy.push({parent: item.parent, name: item.name})\r\n            }\r\n        })\r\n        this.setState({selectedCopy: newSelectedCopy})\r\n        this.cut = true\r\n    }\r\n\r\n    pasteItem = () => {\r\n        //console.log('this.state.selectedCopy: ', this.state.selectedCopy)\r\n        //console.log('this.props.fsCurrentList: ', this.props.fsCurrentList)\r\n        this.state.selectedCopy.forEach(async (selected, index) => {\r\n            await fs.files.where({parent: selected.parent, name: selected.name}).first((item) => {\r\n                if (item !== undefined) {\r\n                    //console.log('item: ', item)\r\n                    if (item.type === 'dir') {\r\n                        // create a new name\r\n                        let counter = 0\r\n                        let done = false\r\n                        let newName = item.name\r\n                        do {\r\n                            let filename = newName\r\n                            const checkName = this.props.fsCurrentList.find(e => e.name === filename)\r\n                            if (checkName === undefined) {\r\n                                done = true\r\n                            } else {\r\n                                newName = `${item.name} - Copy`\r\n                                if (counter > 0) newName = `${newName} (${counter})`\r\n                                counter++\r\n                            }\r\n                        } while (!done)   \r\n                        //console.log('this.props.fsCurrentDir: ', this.props.fsCurrentDir)\r\n                        //console.log('newName: ', newName)\r\n                        // copy the folder\r\n                        fs.files.add({\r\n                            parent: this.props.fsCurrentDir,\r\n                            name: newName,\r\n                            type: item.type,\r\n                            size: item.size,\r\n                            data: item.data\r\n                        })   \r\n                        // copy all subdirs and files\r\n                        const oldParent = this.fsBuildParent(item.parent, item.name) \r\n                        const newParent = this.fsBuildParent(this.props.fsCurrentDir, newName) \r\n                        //console.log('oldParent: ', oldParent)\r\n                        //console.log('newParent: ', newParent)\r\n                        let listItems = []\r\n                        fs.files.where('parent').startsWithIgnoreCase(oldParent).each((e) => {\r\n                            listItems.push(e)\r\n                        }).then(() => {\r\n                            listItems.forEach(e => {\r\n                                //console.log('listItems e: ', e)\r\n                                //const parent = e.parent.replace(oldParent, newParent)\r\n                                //console.log('parent: ', parent)\r\n                                fs.files.add({\r\n                                    parent: newParent,\r\n                                    name: e.name,\r\n                                    type: e.type,\r\n                                    size: e.size,\r\n                                    data: e.data\r\n                                })                          \r\n                            })                            \r\n                        })\r\n                    } else { // it's a file\r\n                        const ext = getFileExtReal(item.name)\r\n                        const name = getFileName(item.name)    \r\n                        let newName = name\r\n                        let counter = 0\r\n                        let done = false             \r\n                        do {\r\n                            let filename = ext === '' ? newName : `${newName}.${ext}`\r\n                            const checkName = this.props.fsCurrentList.find(e => e.name === filename)\r\n                            if (checkName === undefined) {\r\n                                fs.transaction('rw', fs.files, async () => {\r\n                                    await fs.files.add({\r\n                                        parent: this.props.fsCurrentDir,\r\n                                        name: filename,\r\n                                        type: item.type,\r\n                                        size: item.size,\r\n                                        data: item.data\r\n                                    })\r\n                                })\r\n                                done = true\r\n                            } else {\r\n                                newName = `${name} - Copy`\r\n                                if (counter > 0) newName = `${newName} (${counter})`\r\n                                counter++\r\n                            }\r\n                        } while (!done)\r\n                    }\r\n                }\r\n            })\r\n            if (index === this.state.selectedCopy.length-1) {\r\n                if (this.cut) {\r\n                    this.state.selectedCopy.forEach((selected) => {\r\n                        fs.files.where({parent: selected.parent, name: selected.name}).delete()\r\n                    })\r\n                    this.setState({selectedCopy: []})\r\n                    this.cut = false                    \r\n                }\r\n                this.fsListDir(this.props.fsCurrentDir)\r\n            }\r\n        })\r\n        this.setState({selected: []})\r\n    }\r\n\r\n    deleteItem = () => {\r\n        this.state.selected.forEach(name => {\r\n            let item = this.props.fsCurrentList.find(e => e.name === name)\r\n            if (item !== undefined) {\r\n                if (item.type === 'dir') { // delete also all subitems\r\n                    fs.files.where('parent').startsWithIgnoreCase(this.fsBuildParent(item.parent, item.name)).delete()\r\n                }\r\n                fs.files.where({parent: item.parent, name: item.name}).delete().then(() => {\r\n                    this.fsListDir(this.props.fsCurrentDir)\r\n                })\r\n            }\r\n        })\r\n        this.setState({selected: []}) \r\n    }\r\n\r\n    showOthers = () => {\r\n        this.setState({visibleOthers: !this.state.visibleOthers})\r\n    }\r\n\r\n    exportItem = () => {\r\n        if (this.state.selected.length === 0) return\r\n        this.setState({visibleOSaveAsDlg: true})\r\n    }\r\n\r\n    itemClick = (e, row) => {\r\n        //console.log('itemClick: ', row.name)\r\n        const selectedIndex = this.state.selected.indexOf(row.name)\r\n        //console.log('selectedIndex: ', selectedIndex)\r\n        let newSelected = []\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, row.name)\r\n        } else if (selectedIndex >= 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            )\r\n        }\r\n        this.setState({selected: newSelected}, () => {\r\n            //console.log('this.state.selected: ', this.state.selected)\r\n        })\r\n    }\r\n\r\n    itemDoubleClick = (e, item) => {\r\n        if (item.type === 'dir') {\r\n            this.setState({visibleWaiting: true})\r\n            const fsCurrentDir = this.fsBuildParent(item.parent, item.name)\r\n            this.props.setCurrentDir(fsCurrentDir)\r\n            this.fsListDir(fsCurrentDir)\r\n        } else if (item.name === 'DICOMDIR') {\r\n            this.props.onOpenDicomdir(item)\r\n        } else {\r\n            this.props.setFsFileStore(item)\r\n            this.props.onOpen(item)\r\n        }\r\n    }\r\n\r\n    showDeleteDlg = () => {\r\n        this.setState({ visibleDeleteDlg: true })\r\n      }\r\n    \r\n    hideDeleteDlg = () => {\r\n        this.setState({ visibleDeleteDlg: false })\r\n    }\r\n\r\n    confirmDeleteDlg = () => {\r\n        this.hideDeleteDlg()\r\n        this.deleteItem()\r\n    }\r\n\r\n    hideAlreadyExistDlg = () => {\r\n        this.setState({ visibleAlreadyExistDlg: false })\r\n    }  \r\n\r\n    hideSaveAs = () => {\r\n        this.setState({ visibleOSaveAsDlg: false })\r\n    }\r\n\r\n    closeSaveAs = () => {\r\n        const filename = `${this.saveAsField.value}.zip`\r\n        this.setState({ visibleOSaveAsDlg: false }, () => {\r\n            let zip = new JSZip()\r\n            let listItems = []\r\n            fs.files.where('parent').startsWithIgnoreCase(this.props.fsCurrentDir).each((e) => {\r\n                if (this.state.selected.indexOf(e.parent) >= 0 || this.state.selected.indexOf(e.name) >= 0)\r\n                    listItems.push(e)\r\n            }).then(() => {\r\n                listItems.forEach((e) => {\r\n                    if (e.type !== 'dir') {\r\n                        zip.folder(e.parent).file(e.name, e.data)\r\n                    }\r\n                })\r\n                zip.generateAsync({type:\"blob\"}).then(blob => {\r\n                    saveAs(blob, filename)\r\n                })\r\n            })\r\n        })\r\n    }    \r\n\r\n    mouseDown = (e, item) => {\r\n        this.timer = setTimeout(() => { \r\n            this.itemDoubleClick(e, item)\r\n        }, 500)\r\n    }\r\n\r\n    mouseUp = (e) => {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    render() {   \r\n        const { classes } = this.props\r\n        const isSelected = name => this.state.selected.indexOf(name) !== -1\r\n        const visibleTextField = this.state.visibleTextField\r\n        const visibleOthers = this.state.visibleOthers\r\n        const visibleDeleteDlg = this.state.visibleDeleteDlg\r\n        const visibleAlreadyExistDlg = this.state.visibleAlreadyExistDlg\r\n        const visibleOSaveAsDlg = this.state.visibleOSaveAsDlg\r\n        const visibleOpenMultipleFilesDlg = this.state.visibleOpenMultipleFilesDlg\r\n        const visibleWaiting = this.state.visibleWaiting\r\n\r\n        let styleComponent = null\r\n        if (getSettingsFsView() === 'bottom') {\r\n            styleComponent = {marginTop: '0px', height: '275px'}\r\n        } else {\r\n            styleComponent = {marginTop: '48px', width: '350px'}\r\n        }\r\n\r\n        let totalItemsCount = ''\r\n        if (this.state.selected.length > 0)\r\n            totalItemsCount = `(${this.state.selected.length} / ${this.props.fsCurrentList.length} items)`\r\n        else \r\n            totalItemsCount = `(${this.props.fsCurrentList.length} items)`\r\n\r\n        //console.log('this.props.fsCurrentDir: ', this.props.fsCurrentDir)\r\n\r\n        return (\r\n            <PerfectScrollbar>\r\n                <div style={styleScrollbar}> \r\n                    <div style={styleComponent}>\r\n                    { visibleTextField ? \r\n                        <Paper component=\"form\" className={classes.textPaper}>\r\n                            <InputBase\r\n                                autoFocus\r\n                                className={classes.textInput}\r\n                                placeholder={this.state.textFieldLabel}\r\n                                defaultValue={this.state.textFieldValue}\r\n                                onChange={(event) => {\r\n                                    this.setState({textFieldValue: event.target.value})\r\n                                }}\r\n                            />\r\n                            <IconButton className={classes.textButton} onClick={this.confirmText}>\r\n                                <Icon path={mdiCheck} size={'1.2rem'} color={this.props.color} />\r\n                            </IconButton>\r\n                            <IconButton className={classes.textButton} onClick={this.cancelDir}>\r\n                                <Icon path={mdiClose} size={'1.2rem'} color={this.props.color} />\r\n                            </IconButton>                        \r\n                        </Paper>\r\n                    : \r\n                        <div>\r\n\r\n                            <div>\r\n                                <Toolbar variant=\"dense\">\r\n                                    <div className={classes.leftButtons}>\r\n                                    { visibleWaiting ?\r\n                                        <CircularProgress style={{marginLeft: '10px'}} size={20} color=\"secondary\" />\r\n                                    : \r\n                                        <Tooltip title=\"Previous folder\">\r\n                                            <IconButton color=\"inherit\" onClick={this.previousDir} >\r\n                                                <Icon path={mdiChevronLeft} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>       \r\n                                        </Tooltip>                                     \r\n                                    }\r\n                        \r\n                                    </div>\r\n                                    <div className={classes.toolbarButtons}>\r\n                                        <Tooltip title=\"Select/unselect all files\">\r\n                                            <IconButton color=\"inherit\" onClick={this.doSelectUnselect}>\r\n                                                <Icon path={mdiCheckBoxOutline} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>\r\n                                        </Tooltip>    \r\n                                        <Tooltip title=\"Open selected files\">\r\n                                            <IconButton color=\"inherit\" onClick={this.openSelectedFiles}>\r\n                                                <Icon path={mdiFolderOutline} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>\r\n                                        </Tooltip>                            \r\n                                        <Tooltip title=\"Create a new directory\">\r\n                                            <IconButton color=\"inherit\" onClick={this.createDir}>\r\n                                                <Icon path={mdiFolderPlusOutline} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Rename the last selected item\">\r\n                                            <IconButton color=\"inherit\" onClick={this.renameItem}>\r\n                                                <Icon path={mdiSquareEditOutline} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton> \r\n                                        </Tooltip>\r\n\r\n                                        <IconButton color=\"inherit\" onClick={this.showOthers}>\r\n                                            <Icon path={mdiDotsHorizontal} size={'1.2rem'} color={this.props.color} />\r\n                                        </IconButton>                           \r\n                                    </div>            \r\n                                </Toolbar>\r\n                            </div> \r\n\r\n                            { visibleOthers ?\r\n                                <div>\r\n                                    <Toolbar variant=\"dense\">\r\n                                        <div className={classes.toolbarButtons}>\r\n                                            <Tooltip title=\"Move the selected items to the clipboard\">                          \r\n                                                <IconButton color=\"inherit\" onClick={this.cutItem}>\r\n                                                    <Icon path={mdiContentCut} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton> \r\n                                            </Tooltip>  \r\n                                            <Tooltip title=\"Copy the selected items to the clipboard\">\r\n                                                <IconButton color=\"inherit\" onClick={this.copyItem}>\r\n                                                    <Icon path={mdiContentCopy} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Paste clipboard contents to current location\">                             \r\n                                                <IconButton color=\"inherit\" onClick={this.pasteItem}>\r\n                                                    <Icon path={mdiContentPaste} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>   \r\n                                            </Tooltip>  \r\n                                            <Tooltip title=\"Delete the selected items\">    \r\n                                                <IconButton color=\"inherit\" onClick={this.showDeleteDlg}>\r\n                                                    <Icon path={mdiDeleteOutline} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>  \r\n                                            </Tooltip>                                    \r\n                                            <Tooltip title=\"Save the opened image to sandbox file system\"> \r\n                                                <IconButton color=\"inherit\" onClick={this.saveItem}>\r\n                                                    <Icon path={mdiContentSaveOutline} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>      \r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Export the selected items as zipped archive\">\r\n                                                <IconButton color=\"inherit\" onClick={this.exportItem}>\r\n                                                    <Icon path={mdiExportVariant} size={'1.2rem'} color={this.props.color} />\r\n                                                </IconButton>   \r\n                                            </Tooltip>     \r\n                                            {/*<IconButton color=\"inherit\" onClick={this.downloadItem}>\r\n                                                <Icon path={mdiDownload} size={'1.2rem'} color={this.props.color} />\r\n                                            </IconButton>*/}                                     \r\n                                        </div>            \r\n                                    </Toolbar>\r\n                                </div>\r\n                            : null\r\n                            }\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <Typography \r\n                                        type=\"caption text\" \r\n                                        style={{fontSize: '0.75em', marginLeft: '15px', color: 'rgba(146, 146, 146, 1)', float: 'left'}}>\r\n                                            {'/'+this.props.fsCurrentDir+' '}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography \r\n                                        type=\"caption text\" \r\n                                        style={{fontSize: '0.75em', marginRight: '5px', color: 'rgba(146, 146, 146, 1)', float: 'right'}}>\r\n                                            { totalItemsCount }\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>    \r\n\r\n                            { visibleWaiting ?\r\n                                <div style={{marginTop: '20px', position: 'absolute'}}>\r\n                                    <LinearProgress color=\"secondary\" />\r\n                                </div>\r\n                            : null  \r\n                            }\r\n        \r\n                        </div>\r\n                        \r\n                    }\r\n                    \r\n                    <div style={{height: '200px'}}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Name</TableCell>\r\n                                        <TableCell align=\"left\">Type</TableCell>\r\n                                        <TableCell align=\"left\">Size</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.props.fsCurrentList.map((row) => {\r\n                                    const isItemSelected = isSelected(row.name)\r\n                                    return (\r\n                                        <TableRow \r\n                                            key={`${row.parent}/${row.name}`} \r\n                                            role='button' \r\n                                            hover\r\n                                            selected={isItemSelected}\r\n                                            onClick={(e) => {this.itemClick(e, row)}}\r\n                                            onDoubleClick={(e) => {this.itemDoubleClick(e, row)}}\r\n                                            onTouchStart={(e) => this.mouseDown(e, row)} \r\n                                            onTouchEnd={(e) => this.mouseUp(e, row)}\r\n                                            onMouseDown={(e) => this.mouseDown(e, row)} \r\n                                            onMouseUp={(e) => this.mouseUp(e, row)}\r\n                                        >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                            <Typography className={classes.tableCellText}>\r\n                                                {row.name}\r\n                                            </Typography>    \r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{row.type}</TableCell>\r\n                                            <TableCell align=\"left\">{formatBytes(row.size)}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>   \r\n\r\n                    <Dialog\r\n                        open={visibleDeleteDlg}\r\n                        onClose={this.hideDeleteDlg}\r\n                    >\r\n                        <DialogTitle>{\"Are you sure to delete selected items?\"}</DialogTitle>\r\n                        <DialogActions>\r\n                            <Button onClick={this.hideDeleteDlg}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.confirmDeleteDlg} autoFocus>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>    \r\n\r\n                    <Dialog\r\n                        open={visibleAlreadyExistDlg}\r\n                        onClose={this.hideAlreadyExistDlg}\r\n                    >\r\n                        <DialogTitle>{\"An item with this name already exists!\"}</DialogTitle>\r\n                        <DialogActions>\r\n                            <Button onClick={this.hideAlreadyExistDlg} autoFocus>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>    \r\n\r\n                    <Dialog\r\n                        open={visibleOSaveAsDlg}\r\n                    >\r\n                        <DialogTitle>Export archive</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Specify a file name for the archive:\r\n                            </DialogContentText>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"id-open-url\"\r\n                                inputRef={input => (this.saveAsField = input)}\r\n                                fullWidth\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={() => this.hideSaveAs()} >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={() => this.closeSaveAs()}>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>          \r\n\r\n                    {visibleOpenMultipleFilesDlg ? <OpenMultipleFilesDlg onClose={this.hideOpenMultipleFilesDlg} files={this.files} origin={'fs'} /> : null}                    \r\n                </div>\r\n                </div>\r\n            </PerfectScrollbar>\r\n        )\r\n    }              \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      files: state.files,\r\n      localFileStore: state.localFile,\r\n      fsFileStore: state.fsFile,  \r\n      activeDcm: state.activeDcm,\r\n      fsCurrentDir: state.fsCurrentDir,\r\n      fsCurrentList: state.fsCurrentList,\r\n      fsZippedFile: state.fsZippedFile,\r\n      fsRefresh: state.fsRefresh,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentDir: (dir) => dispatch(setFsCurrentDir(dir)),\r\n        setCurrentList: (list) => dispatch(setFsCurrentList(list)),\r\n        setFsZippedFile: (file) => dispatch(setZippedFile(file)),\r\n        setFsFileStore: (file) => dispatch(fsFileStore(file)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FsUI))\r\n","import React, { PureComponent } from 'react'\r\n//import Draggable from 'react-draggable'\r\n//import IconButton from '@material-ui/core/IconButton'\r\nimport Slider from '@material-ui/core/Slider'\r\n//import HighlightOffIcon from '@material-ui/icons/HighlightOff'\r\nimport {connect} from 'react-redux'\r\n//import * as cornerstone from 'cornerstone-core'\r\n// import { import as csTools } from 'cornerstone-tools'\r\n\r\n// const getRGBPixels = csTools('util/getRGBPixels')\r\n\r\nconst HIST_WIDTH = 256\r\nconst HIST_HEIGHT = 128\r\nconst N_BINS = 256\r\n\r\nconst style = {\r\n  width: '273px', \r\n  padding: '8px 8px 8px 8px', \r\n  backgroundColor: '#444444',\r\n}\r\n\r\nconst styleSlider = {\r\n  width: '255px',\r\n  marginTop: '-9px',\r\n}\r\n\r\nconst styleCanvasGradient = {\r\n  marginTop: '-9px',\r\n}\r\n\r\nconst styleTable = {\r\n  borderCollapse: 'collapse',\r\n  fontFamily: 'Courier, monospace',\r\n  fontSize: '67%',\r\n  width: '100%',\r\n}\r\n\r\nconst styleTableTd = {\r\n  tableLayout: 'fixed',\r\n  width: '25%',\r\n}\r\n\r\nclass Histogram extends PureComponent {\r\n    constructor(props) {\r\n      super(props)\r\n      this.canvasHistogram = React.createRef()\r\n      this.canvasGradient = React.createRef()\r\n    }\r\n\r\n    state = {\r\n      activeDrags: 0,\r\n      deltaPosition: {\r\n        x: 0, y: 0\r\n      },\r\n      controlledPosition: {\r\n        x: -400, y: 200\r\n      },\r\n      value: 128,\r\n      histCount: 0,\r\n      valueScale: 0,\r\n      minHist: 0,\r\n      maxHist: 0,\r\n      mean: 0,\r\n      stdDev: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n      //console.log('Histogram - componentDidMount: ')\r\n      //this.image = this.props.activeDcm.image\r\n      //this.element = this.props.activeDcm.element\r\n      //this.isDicom = this.props.activeDcm.isDicom\r\n      //this.pixelData = this.props.activeDcm.image.getPixelData()\r\n      const canvasH = this.canvasHistogram.current\r\n      const ctxH = this.canvasHistogram.current.getContext(\"2d\")\r\n      ctxH.translate(0, canvasH.height)\r\n      ctxH.scale(1, -1)\r\n\r\n      this.updateCanvas()     \r\n    }\r\n    \r\n    componentDidUpdate() {\r\n      //console.log('Histogram - componentDidUpdate: ')\r\n      if (this.props.activeDcm === null) {\r\n        const ctxH = this.canvasHistogram.current.getContext(\"2d\")\r\n        ctxH.clearRect(0, 0, ctxH.canvas.width, ctxH.canvas.height)\r\n        return\r\n      }\r\n      this.updateCanvas() \r\n    }\r\n\r\n    getMousePos(canvas, evt) {\r\n      const rect = canvas.getBoundingClientRect()\r\n      return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n      }\r\n    }\r\n\r\n    getRGBPixelsImage(x, y, width, height) {\r\n      const pixelData = this.props.activeDcm.image.getPixelData()\r\n      const storedPixelData = []\r\n      x = Math.round(x)\r\n      y = Math.round(y)   \r\n      let index = 0\r\n      let spIndex, row, column\r\n    \r\n      for (row = 0; row < height; row++) {\r\n        for (column = 0; column < width; column++) {\r\n          spIndex = ((row + y) * this.props.activeDcm.image.rows + (column + x)) * 4\r\n          const red = pixelData[spIndex]\r\n          const green = pixelData[spIndex + 1]\r\n          const blue = pixelData[spIndex + 2]\r\n          const alpha = pixelData[spIndex + 3]\r\n  \r\n          storedPixelData[index++] = red\r\n          storedPixelData[index++] = green\r\n          storedPixelData[index++] = blue\r\n          storedPixelData[index++] = alpha\r\n        }\r\n      }\r\n      return storedPixelData\r\n    }\r\n\r\n    getPixelsImage(x, y, width, height) {\r\n      const pixelData = this.props.activeDcm.image.getPixelData()\r\n      const storedPixelData = []\r\n      x = Math.round(x)\r\n      y = Math.round(y)   \r\n      let index = 0\r\n      let spIndex, row, column\r\n    \r\n      for (row = 0; row < height; row++) {\r\n        for (column = 0; column < width; column++) {\r\n          spIndex = ((row + y) * this.props.activeDcm.image.rows + (column + x)) \r\n          storedPixelData[index++] = pixelData[spIndex]\r\n        }\r\n      }\r\n      return storedPixelData\r\n    }    \r\n\r\n    getPixel(x, y) {\r\n      let sp = []\r\n      if (this.props.activeDcm.isDicom) {\r\n        if (this.props.activeDcm.image.color) {\r\n          //sp = getRGBPixels(this.element, x, y, 1, 1)\r\n          //sp = cornerstone.getStoredPixels(this.element, x, y, 1, 1)\r\n          sp = this.getRGBPixelsImage(x, y, 1, 1)\r\n        } else {\r\n          // sp = cornerstone.getStoredPixels(this.props.activeDcm.element, x, y, 1, 1)\r\n          sp = this.getPixelsImage(x, y, 1, 1)\r\n        }\r\n      } else {\r\n        sp = this.getRGBPixelsImage(x, y, 1, 1)\r\n      }\r\n      return sp[0]\r\n    }\r\n\r\n    updateCanvas() {\r\n      const image = this.props.activeDcm.image\r\n      if (image === null) return\r\n      //const element = this.props.element\r\n      const maxPixelValue = image.maxPixelValue\r\n      const minPixelValue = image.minPixelValue\r\n      //const k = Math.pow(2, this.props.bitsStored)\r\n      const minHist = minPixelValue+image.intercept\r\n      const maxHist = maxPixelValue+image.intercept\r\n      const lenHist = maxHist-minHist+1\r\n      const binSize = lenHist / N_BINS\r\n      let zero256 = Math.floor(Math.abs(minHist) / binSize)\r\n      let stepWW = Math.round(image.windowWidth / binSize / 2)\r\n      let stepWC = Math.round(image.windowCenter / binSize)\r\n\r\n      this.setState({minHist: minHist})\r\n      this.setState({maxHist: maxHist})\r\n      this.binSize = binSize\r\n\r\n      //console.log('activeDcm: ', this.props.activeDcm)\r\n      //console.log('image: ', )\r\n      //console.log('getPixelData: ', image.getPixelData())\r\n      //console.log('columns: ', image.columns)\r\n      //console.log('rows: ', image.rows)\r\n      //console.log('isDicom: ', this.props.activeDcm.isDicom)\r\n      //console.log('bitsStored: ', k)\r\n      //console.log('minHist: ', minHist)\r\n      //console.log('maxHist: ', maxHist)\r\n      //console.log('lenHist: ', lenHist)\r\n      //console.log('binSize: ', binSize)\r\n      //console.log('zeroHist: ', zero256)\r\n      //console.log('stepWW: ', stepWW)\r\n      //console.log('stepWC: ', stepWC)\r\n      //console.log('zero256-stepWW: ', zero256-stepWW)\r\n      //console.log('zero256+stepWW: ', zero256+stepWW)   \r\n      //console.log('image.color: ', image.color)\r\n      //console.log('image.slope: ', image.slope)\r\n      //console.log('image.intercept: ', image.intercept)\r\n\r\n      let m = 0 // the mean\r\n      // build histogram\r\n      let hist = Array(lenHist).fill(0) \r\n      for (let y = 0; y < image.columns; y++) {\r\n        for (let x = 0; x < image.rows; x++) {\r\n          let sp = this.getPixel(x, y)\r\n          let mo = sp * image.slope + image.intercept\r\n          hist[mo-minHist] += 1\r\n          m += mo\r\n        } \r\n      }  \r\n\r\n      m = m / (image.columns * image.rows)\r\n      this.setState({mean: m})  \r\n\r\n      //console.log('hist: ', hist)\r\n      //console.log('mean: ', m)\r\n\r\n      // calculate standard deviation\r\n      let s = 0\r\n      for (let y = 0; y < image.columns; y++)\r\n        for (let x = 0; x < image.rows; x++) {\r\n          let sp = this.getPixel(x, y)\r\n          let mo = sp * image.slope + image.intercept\r\n          s += Math.pow(mo-m, 2)\r\n        }  \r\n      s = Math.sqrt(s / (image.columns * image.rows))\r\n      this.setState({stdDev: s})\r\n\r\n      // binning the histogram \r\n      let hist256 = Array(N_BINS).fill(0) \r\n      let max = 0\r\n\r\n      if (binSize < 1) {\r\n        let binStep = Math.round(N_BINS / lenHist)\r\n        let iHist = 0\r\n        let i = 0\r\n        while (i < N_BINS) {\r\n          for (let j=0; j < binStep; j++) { \r\n            hist256[i] = iHist < lenHist ? hist[iHist] : 0\r\n            if (max < hist256[i]) max = hist256[i]  \r\n            i++\r\n          }   \r\n          iHist++     \r\n        }\r\n\r\n        /*for (let i=0; i < N_BINS; i+=binStep) {\r\n          const k = Math.floor(i)\r\n          //console.log(`i: ${k} `)\r\n          for (let j=0; j < Math.round(binStep); j++) { \r\n            console.log(`i: ${k} - j: ${j} - iHist: ${iHist} - hist[iHist]: ${hist[iHist]}`)\r\n            hist256[k+j] = hist[iHist]\r\n          }\r\n          iHist++\r\n          if (max < hist256[k]) max = hist256[k] \r\n        }*/\r\n      } else {\r\n        let step = 0\r\n        for (let i=0; i < N_BINS; i++) {\r\n          for (let j=step; j < Math.round(step+binSize); j++) {\r\n            if (j >= lenHist) break\r\n            hist256[i] += hist[j]\r\n          }\r\n          if (max < hist256[i]) { max = hist256[i] }\r\n          step = Math.round(step+binSize)\r\n        }        \r\n      }\r\n\r\n      this.hist256 = hist256\r\n\r\n      //console.log('hist256: ', hist256)\r\n      //console.log('max: ', max)\r\n\r\n      if (max / HIST_HEIGHT > 100) max = max / 5\r\n      \r\n      const canvasH = this.canvasHistogram.current\r\n      const ctxH = this.canvasHistogram.current.getContext(\"2d\")\r\n      ctxH.clearRect(0, 0, ctxH.canvas.width, ctxH.canvas.height)\r\n\r\n      canvasH.addEventListener('pointermove', (evt) => {\r\n        const mousePos = this.getMousePos(canvasH, evt)\r\n        this.setState({histCount: hist256[mousePos.x]})\r\n        let p = Math.round(mousePos.x * this.binSize)\r\n        this.setState({valueScale: p+minHist})\r\n      }, true)\r\n\r\n      //console.log('value: ', (m-minHist)/binSize)\r\n      let value = Math.round((m-minHist)/binSize)\r\n      this.setState({value: value})\r\n      this.setState({valueScale: m})\r\n      this.setState({histCount: hist256[value]})\r\n\r\n      // draw WindowWidth area\r\n      ctxH.beginPath()\r\n      ctxH.fillStyle = 'rgba(210, 210, 210, 0.5)'\r\n      ctxH.fillRect(zero256-stepWW+stepWC, 0, stepWW*2, HIST_HEIGHT)\r\n\r\n      // draw histogram\r\n      ctxH.beginPath()\r\n      ctxH.strokeStyle = 'rgba(0, 0, 0, 1.0)'\r\n      for (let i = 0; i < N_BINS; i++) {\r\n        let h = Math.round((hist256[i]/max)*HIST_HEIGHT)\r\n        ctxH.moveTo(i, 0)\r\n        ctxH.lineTo(i, h)\r\n        ctxH.stroke()\r\n      }\r\n      \r\n      // draw WindowCenter cursor\r\n      ctxH.beginPath()\r\n      ctxH.strokeStyle = 'rgba(140, 140, 140, 0.5)'\r\n      ctxH.moveTo(zero256+stepWC, 0)\r\n      ctxH.lineTo(zero256+stepWC, HIST_HEIGHT)\r\n      ctxH.lineWidth = 1\r\n      ctxH.stroke()\r\n          \r\n      let lowX = zero256-stepWW+stepWC\r\n      let highX = zero256+stepWW+stepWC\r\n\r\n      // draw gradient scale\r\n      const canvasG = this.canvasGradient.current\r\n      const ctxG = canvasG.getContext(\"2d\")\r\n\r\n      ctxG.fillStyle = \"#000000\"\r\n      ctxG.fillRect(0, 0, lowX, 10)\r\n\r\n      let grd = ctxG.createLinearGradient(lowX, 0, highX+(lowX < 0 ? lowX : 0), 0)\r\n      grd.addColorStop(0, \"black\")\r\n      grd.addColorStop(1, \"white\")\r\n      ctxG.fillStyle = grd\r\n      ctxG.fillRect(lowX, 0, highX, 10)\r\n    }\r\n        \r\n    handleChangeValue = (event, newValue) => {\r\n      //console.log('newValue: ', newValue)\r\n      //console.log('(newValue*this.binSize)+this.state.minHist: ', (newValue*this.binSize)+this.state.minHist)\r\n      //console.log('this.hist256[newValue]: ', this.hist256[newValue])\r\n      this.setState({value: newValue})\r\n      this.setState({valueScale: (newValue*this.binSize)+this.state.minHist})\r\n      this.setState({histCount: this.hist256[newValue]})\r\n    }\r\n      \r\n    hide = () => {\r\n      this.props.onClose()\r\n    }\r\n\r\n    onDrag = (e, ui) => {\r\n      const {x, y} = this.state.deltaPosition;\r\n      this.setState({\r\n        deltaPosition: {\r\n          x: x + ui.deltaX,\r\n          y: y + ui.deltaY,\r\n        }\r\n      })\r\n    }\r\n  \r\n    onStart = () => {\r\n      this.setState({activeDrags: this.state.activeDrags+1})\r\n    }\r\n  \r\n    onStop = () => {\r\n      this.setState({activeDrags: this.state.activeDrags-1})\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div style={style}>\r\n          <div>\r\n            <canvas \r\n              ref={this.canvasHistogram} \r\n              width={HIST_WIDTH} \r\n              height={HIST_HEIGHT} \r\n              style={{backgroundColor: \"#FFFFFF\", cursor:'crosshair'}} \r\n            />\r\n          </div>  \r\n          <div style={styleCanvasGradient}>\r\n            <canvas ref={this.canvasGradient} width={HIST_WIDTH} height={10} style={{backgroundColor: \"#FFFFFF\"}} />\r\n          </div>\r\n          <div style={styleSlider}>\r\n            <Slider\r\n              value={this.state.value}\r\n              onChange={this.handleChangeValue}\r\n              aria-labelledby=\"continuous-slider\"\r\n              color=\"secondary\"\r\n              min={0}\r\n              max={255}\r\n            />\r\n          </div>\r\n          <div>\r\n            <table style={styleTable}>\r\n              <tbody>\r\n                <tr>\r\n                  <td style={styleTableTd}>min:</td>\r\n                  <td style={styleTableTd}>{this.state.minHist}</td>\r\n                  <td style={styleTableTd}>max:</td>\r\n                  <td style={styleTableTd}>{this.state.maxHist}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>mean:</td>\r\n                  <td>{parseFloat(this.state.mean).toFixed(3)}</td>\r\n                  <td>std dev:</td>\r\n                  <td>{parseFloat(this.state.stdDev).toFixed(3)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>count:</td>\r\n                  <td>{this.state.histCount}</td>\r\n                  <td>value:</td>\r\n                  <td>{parseFloat(this.state.valueScale).toFixed(3)}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activeDcmIndex: state.activeDcmIndex,\r\n    activeDcm: state.activeDcm,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Histogram)\r\n","import React, { PureComponent } from 'react'\r\n\r\nconst styleTable = {\r\n  borderCollapse: 'collapse',\r\n  width: '100px',\r\n  height: '100px',\r\n}\r\n\r\nconst styleTableTd = {\r\n  width: '25px',\r\n  height: '25px',\r\n  border: 'solid 1px black',\r\n}\r\n\r\nclass LayoutTool extends PureComponent {\r\n    constructor(props) {\r\n      super(props)\r\n      this.tableRef = React.createRef()\r\n      this.state = {\r\n        row: this.props.row,\r\n        col: this.props.col,\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.initTable()\r\n    }\r\n\r\n    initTable = () => {\r\n      let row = this.state.row\r\n      let col = this.state.col\r\n      let rows = this.tableRef.current.rows\r\n      for (let i=0; i <= row; i++) {\r\n        for(let j=0; j <= col; j++) {\r\n          rows[i].cells[j].bgColor = '#AAAAAA'\r\n        }\r\n      }\r\n    }\r\n\r\n    cellClick = (e) => {\r\n      let row = e.target.parentNode.rowIndex\r\n      let col = e.target.cellIndex\r\n\r\n      this.setState({row: row, col: col})\r\n\r\n      let rows = this.tableRef.current.rows\r\n      for (let i=0; i <= 3; i++) {\r\n        for(let j=0; j <= 3; j++) {\r\n          rows[i].cells[j].bgColor = '#444444'\r\n        }\r\n      }\r\n      for (let i=0; i <= row; i++) {\r\n        for(let j=0; j <= col; j++) {\r\n          rows[i].cells[j].bgColor = '#AAAAAA'\r\n        }\r\n      }\r\n      this.props.onChange(row+1, col+1)\r\n    }\r\n\r\n    renderTable() {\r\n      const rows = ['', '', '', '']\r\n      return (\r\n        rows.map((row, i) => {\r\n          return (\r\n            <tr key={`${i}`}>\r\n               <td style={styleTableTd} onClick={this.cellClick} />\r\n               <td style={styleTableTd} onClick={this.cellClick} />\r\n               <td style={styleTableTd} onClick={this.cellClick} />\r\n               <td style={styleTableTd} onClick={this.cellClick} />\r\n            </tr>\r\n          )\r\n        })\r\n      )\r\n   }\r\n\r\n    render() {  \r\n      return (\r\n          <div>            \r\n            <table style={styleTable} ref={this.tableRef}>\r\n              <tbody>\r\n                {this.renderTable()}                   \r\n              </tbody>\r\n            </table>\r\n          </div>     \r\n      )\r\n    }\r\n\r\n}\r\n\r\nexport default LayoutTool\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    listItemText:{\r\n        fontSize:'0.9em',\r\n    }\r\n})\r\n\r\nclass MeasureItem extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.noteField = React.createRef()\r\n    \r\n      }\r\n\r\n    state = { \r\n        visibleDlgNote: false,\r\n        visibleDlgDelete: false,\r\n    }\r\n\r\n    showDlgNote = () => {\r\n        this.setState({ visibleDlgNote: true })\r\n    }\r\n    \r\n    hideDlgNote = () => {\r\n        this.setState({ visibleDlgNote: false })\r\n    }\r\n\r\n    showDlgDelete = () => {\r\n        this.setState({ visibleDlgDelete: true })\r\n    }\r\n    \r\n    hideDlgDelete = () => {\r\n        this.setState({ visibleDlgDelete: false })\r\n    }\r\n\r\n    handleOnChangeNote = event => {\r\n        this.setState({ note: event.target.value })\r\n    }\r\n\r\n    confirmNote = (index) => {\r\n        this.hideDlgNote()\r\n        this.props.measurements[index].note = this.noteField.value\r\n    }   \r\n\r\n    confirmDelete = (index) => {\r\n        this.hideDlgDelete()\r\n        this.props.toolRemove(index)\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.showDlgNote()\r\n    }\r\n    \r\n    onDelete = () => {\r\n        this.showDlgDelete()\r\n    }\r\n    \r\n    render() {    \r\n        const { classes } = this.props\r\n\r\n        const item = this.props.item\r\n        let index = this.props.index\r\n        let pText = ''\r\n        let sText = ''\r\n        //console.log('item: ', item)\r\n        switch (item.tool) {\r\n            case 'Length':\r\n                pText = `${item.data.length.toFixed(2)} ${item.data.unit}`\r\n                sText = item.note\r\n                break\r\n            case 'Angle':\r\n                pText = `${item.data.rAngle} °`\r\n                sText = item.note\r\n                break\r\n            case 'EllipticalRoi':\r\n                pText = <div>\r\n                            <div> A: {item.data.cachedStats.area.toFixed(2)} mm² </div>\r\n                            <div> M: {item.data.cachedStats.mean.toFixed(2)} {item.data.unit} </div>\r\n                            <div> SD: {item.data.cachedStats.stdDev.toFixed(2)} {item.data.unit} </div>\r\n                        </div>\r\n                sText = item.note            \r\n                break    \r\n            case 'RectangleRoi':\r\n                pText = <div>\r\n                            <div> A: {item.data.cachedStats.area.toFixed(2)} mm² </div>\r\n                            <div> M: {item.data.cachedStats.mean.toFixed(2)} {item.data.unit} </div>\r\n                            <div> SD: {item.data.cachedStats.stdDev.toFixed(2)} {item.data.unit} </div>\r\n                        </div>\r\n                sText = item.note\r\n                break          \r\n            case 'FreehandRoi':\r\n                //console.log('item: ', item.data.area)\r\n                //if (item.data.area !== undefined) {\r\n                pText = <div>\r\n                            <div> A: {item.data.area.toFixed(2)} mm² </div>\r\n                            <div> M: {item.data.meanStdDev.mean.toFixed(2)} {item.data.unit} </div>\r\n                            <div> SD: {item.data.meanStdDev.stdDev.toFixed(2)} {item.data.unit} </div>\r\n                        </div>\r\n                sText = item.note\r\n                //}\r\n                break                                  \r\n            default:\r\n                break    \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ListItem>\r\n                    <ListItemText classes={{primary:classes.listItemText}} primary={pText} secondary={sText} />\r\n                    <Toolbar>\r\n                        <IconButton edge=\"end\" onClick={() => this.onEdit(index)}>\r\n                            <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" onClick={() => this.onDelete(index)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </ListItem>\r\n                \r\n                { this.state.visibleDlgNote ?\r\n                    <Dialog\r\n                        open={this.state.visibleDlgNote}\r\n                        onClose={this.hideDlgNote}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                    >\r\n                        <DialogTitle id=\"form-dialog-title\">{\"Note for measurement:\"}</DialogTitle>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                ref=\"noteField\"\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"note\"\r\n                                fullWidth\r\n                                defaultValue={this.props.measurements[index].note}\r\n                                inputRef={input => (this.noteField = input)}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.hideDlgNote} >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={() => this.confirmNote(index)} autoFocus>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                : null }\r\n\r\n                <Dialog\r\n                    open={this.state.visibleDlgDelete}\r\n                    onClose={this.hideDlgNote}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete the measurement?\"}</DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.hideDlgDelete}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={() => this.confirmDelete(index)} autoFocus>\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        measurements: state.measurements,\r\n    }\r\n}\r\n\r\n//export default connect(mapStateToProps, )(MeasureItem)\r\nexport default connect(mapStateToProps)(withStyles(styles)(MeasureItem))\r\n","import React, { PureComponent } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport MeasureItem from './MeasureItem'\r\n\r\nclass Measurements extends PureComponent {\r\n\r\n  state = { \r\n    visibleClearMeasureDlg: false,\r\n  }\r\n\r\n  showClearMeasureDlg = () => {\r\n    this.setState({ visibleClearMeasureDlg: true })\r\n  }\r\n\r\n  hideClearMeasureDlg = () => {\r\n      this.setState({ visibleClearMeasureDlg: false })\r\n  }\r\n\r\n  confirmClearMeasureDlg = () => {\r\n    this.hideClearMeasureDlg()\r\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools')\r\n  }\r\n\r\n  render() {   \r\n    //const classes = this.props.classes\r\n\r\n    return (\r\n      <div>\r\n\r\n        <div>\r\n          { this.props.measurements !== null ?\r\n              this.props.measurements.map((item, index) => {\r\n                  return <MeasureItem item={item} index={index} toolRemove={this.props.toolRemove} key={index} />\r\n              }) \r\n            : null }\r\n        </div>\r\n        \r\n        <Dialog\r\n            open={this.state.visibleClearMeasureDlg}\r\n            onClose={this.hideClearMeasureDlg}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to remove all the measurements?\"}</DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={this.hideClearMeasureDlg}>\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={this.confirmClearMeasureDlg} autoFocus>\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    measurements: state.measurements,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Measurements)\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { \r\n  getSettingsSaveAs, \r\n  setSettingsSaveAs, \r\n  getSettingsSaveInto,\r\n  setSettingsSaveInto,\r\n  getSettingsDcmHeader, \r\n  setSettingsDcmHeader, \r\n  getSettingsOverlay, \r\n  setSettingsOverlay,\r\n  getSettingsFsView,\r\n  setSettingsFsView,\r\n  getSettingsDicomdirView,\r\n  setSettingsDicomdirView,\r\n  getSettingsMprInterpolation,\r\n  setSettingsMprInterpolation,\r\n} from '../functions'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  formLabel: {\r\n    fontSize: '0.85em',\r\n  },\r\n  radioControl: {\r\n    size: 'small',\r\n  },  \r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n    fontSize: '0.95em',\r\n  },\r\n}))\r\n\r\n/*const Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n})*/\r\n\r\nconst Settings = ({ onClose }) => {\r\n  \r\n  let saveAs = getSettingsSaveAs()\r\n  let saveInto = getSettingsSaveInto()\r\n  let exportAs = getSettingsDcmHeader()\r\n  let overlay = getSettingsOverlay()\r\n  let fsView = getSettingsFsView()\r\n  let dicomdirView = getSettingsDicomdirView()\r\n  let mprInterpolation = getSettingsMprInterpolation()\r\n\r\n  //const isIndexedDB = false // 'indexedDB' in window\r\n  \r\n  const handleChangeSaveAs = event => {\r\n    setState({ ...state, 'saveAs': event.target.value })\r\n    setSettingsSaveAs(event.target.value)\r\n  }\r\n  \r\n  const handleChangeSaveInto = event => {\r\n    setState({ ...state, 'saveInto': event.target.value })\r\n    setSettingsSaveInto(event.target.value)\r\n  }\r\n\r\n  const handleChangeExportAs = event => {\r\n    setState({ ...state, 'exportAs': event.target.value })\r\n    setSettingsDcmHeader(event.target.value)\r\n  }\r\n\r\n  const handleChangeOverlay = event => {\r\n    setState({ ...state, 'overlay': event.target.checked })\r\n    setSettingsOverlay(event.target.checked)\r\n  }\r\n\r\n  const handleChangeFsView = event => {\r\n    setState({ ...state, 'fsView': event.target.value })\r\n    setSettingsFsView(event.target.value)\r\n  }\r\n\r\n  const handleChangeDicomdirView = event => {\r\n    setState({ ...state, 'dicomdirView': event.target.value })\r\n    setSettingsDicomdirView(event.target.value)\r\n  }  \r\n\r\n  const handleChangeMprInterpolation = event => {\r\n    setState({ ...state, 'mprInterpolation': event.target.value })\r\n    setSettingsMprInterpolation(event.target.value)\r\n  }  \r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = React.useState({\r\n    saveAs: saveAs,\r\n    saveInto: saveInto,\r\n    exportAs: exportAs,\r\n    overlay: overlay,\r\n    fsView: fsView,\r\n    dicomdirView: dicomdirView,\r\n    mprInterpolation: mprInterpolation,\r\n  })\r\n\r\n  return (\r\n    <Dialog fullScreen open={true} onClose={onClose}> {/* TransitionComponent={Transition} */}\r\n      <AppBar className={classes.appBar} elevation={0}>\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Settings\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <PerfectScrollbar> \r\n      <div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox \r\n                checked={state.overlay} \r\n                onChange={handleChangeOverlay}\r\n                value=\"overlay\" \r\n                size='small'\r\n              />\r\n            }\r\n            label=\"Show overlay Information\"\r\n          />\r\n        </FormControl>\r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Open sandbox file system from:</FormLabel>\r\n          <RadioGroup size='small' aria-label=\"filesystem\" name=\"filesystem\" value={state.fsView} onChange={handleChangeFsView}>\r\n            <FormControlLabel value=\"left\" control={<Radio size='small' />} label=\"left\" />\r\n            <FormControlLabel value=\"right\" control={<Radio size='small' />} label=\"right\" />\r\n            <FormControlLabel value=\"bottom\" control={<Radio size='small' />} label=\"bottom\" />\r\n          </RadioGroup>\r\n        </FormControl>    \r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Open DICOMDIR panel from:</FormLabel>\r\n          <RadioGroup size='small' aria-label=\"dicomdir\" name=\"dicomdir\" value={state.dicomdirView} onChange={handleChangeDicomdirView}>\r\n            <FormControlLabel value=\"left\" control={<Radio size='small' />} label=\"left\" />\r\n            <FormControlLabel value=\"right\" control={<Radio size='small' />} label=\"right\" />\r\n            <FormControlLabel value=\"bottom\" control={<Radio size='small' />} label=\"bottom\" />\r\n          </RadioGroup>\r\n        </FormControl>                    \r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Save screenshot as:</FormLabel>\r\n          <RadioGroup aria-label=\"saveas\" name=\"saveas\" value={state.saveAs} onChange={handleChangeSaveAs}>\r\n            <FormControlLabel value=\"jpeg\" control={<Radio size='small' />} label=\"JPEG\" />\r\n            <FormControlLabel value=\"png\" control={<Radio size='small' />} label=\"PNG\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Save screenshot into:</FormLabel>\r\n          <RadioGroup aria-label=\"saveinto\" name=\"saveinto\" value={state.saveInto} onChange={handleChangeSaveInto}>\r\n            <FormControlLabel value=\"local\" control={<Radio size='small' />} label=\"local file system\" />\r\n            <FormControlLabel value=\"sandbox\" control={<Radio size='small' />} label=\"sandbox file system\" />\r\n          </RadioGroup>\r\n        </FormControl>          \r\n        </div>\r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>Export Dicom header as:</FormLabel>\r\n          <RadioGroup aria-label=\"exportas\" name=\"exportas\" value={exportAs} onChange={handleChangeExportAs}>\r\n            <FormControlLabel value=\"json\" control={<Radio size='small' />} label=\"JSON\" />\r\n            <FormControlLabel value=\"csv\" control={<Radio size='small' />} label=\"CSV\" />\r\n          </RadioGroup>\r\n        </FormControl> \r\n        </div> \r\n        <div>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\" className={classes.formLabel}>MPR interpolation method:</FormLabel>\r\n          <RadioGroup aria-label=\"mprinterpolation\" name=\"mprinterpolation\" value={mprInterpolation} onChange={handleChangeMprInterpolation}>\r\n            <FormControlLabel value=\"no\" control={<Radio size='small' />} label=\"No interpolation (duplicate planes)\" />\r\n            <FormControlLabel value=\"weightedlinear\" control={<Radio size='small' />} label=\"Weighted linear interpolation\" />\r\n          </RadioGroup>\r\n        </FormControl> \r\n        </div>            \r\n      </div>\r\n      </PerfectScrollbar>\r\n    </Dialog>\r\n  )\r\n\r\n}\r\n\r\nexport default Settings\r\n","import React, { PureComponent } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport {connect} from 'react-redux'\nimport AboutDlg from './components/AboutDlg'\nimport Dicomdir from './components/Dicomdir'\nimport DicomViewer from './components/DicomViewer'\nimport DicomHeader from './components/DicomHeader'\nimport DownloadZipDlg from './components/DownloadZipDlg'\nimport Explorer from './components/Explorer'\nimport FsUI from './components/FsUI'\nimport Histogram from './components/Histogram'\nimport LayoutTool from './components/LayoutTool'\nimport Measurements from './components/Measurements'\nimport OpenMultipleFilesDlg from './components/OpenMultipleFilesDlg'\nimport Settings from './components/Settings'\nimport AppBar from '@material-ui/core/AppBar'\nimport Collapse from '@material-ui/core/Collapse'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Icon from '@mdi/react'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Popover from '@material-ui/core/Popover'\nimport Slider from '@material-ui/core/Slider'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport TextField from '@material-ui/core/TextField'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n//import { FixedSizeList } from 'react-window'\n//import {List as ListVirtual} from 'react-virtualized'\nimport 'react-perfect-scrollbar/dist/css/styles.css'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { \n  isMobile, \n  isTablet,\n} from 'react-device-detect'\nimport {\n  clearStore,\n  localFileStore,\n  dcmIsOpen,\n  activeDcm,\n  activeDcmIndex,\n  activeMeasurements,\n  setLayout,\n  dcmTool, \n  setDicomdir,\n  setZippedFile,\n  setVolume,\n  filesStore,\n} from './actions/index'\nimport { \n  log,\n  getDicomPixelSpacing,\n  getDicomSpacingBetweenSlice,\n  getDicomSliceThickness,\n  getDicomSliceLocation,\n  //getFileNameCorrect,\n  getFileExtReal,\n  isInputDirSupported,\n  getSettingsFsView,\n  getSettingsDicomdirView,\n  getSettingsMprInterpolation,\n  groupBy,\n  objectIsEmpty,\n  //getDicomSeriesDescription,\n} from './functions'\nimport { \n  mdiAngleAcute,\n  mdiAnimationOutline,\n  mdiArrowAll,\n  mdiAxisArrow,\n  mdiCamera,\n  mdiChartHistogram,\n  mdiCheck,\n  mdiCheckboxIntermediate,\n  mdiContentSaveOutline,   \n  mdiCursorDefault, \n  mdiCursorPointer,\n  mdiDelete,\n  mdiEllipse,\n  mdiEyedropper,\n  mdiFileCabinet,\n  mdiFileDocument, \n  mdiFileCad, \n  mdiFolder,\n  mdiFolderMultiple,\n  mdiGesture,\n  mdiViewGridPlusOutline,\n  mdiImageEdit,\n  mdiInformationOutline,\n  mdiInvertColors,\n  mdiMagnify,\n  mdiFolderOpen,\n  mdiRefresh,\n  mdiRectangle,\n  mdiRuler,\n  mdiSettings,\n  mdiToolbox,\n  mdiTools,\n  mdiTrashCanOutline, \n  mdiVideo,\n  mdiWeb,\n\n  mdiPlay,\n  mdiPause,\n  mdiSkipBackward,\n  mdiSkipForward,\n  mdiSkipNext,\n  mdiSkipPrevious,\n} from '@mdi/js'\n\nimport './App.css'\n\nlog()\n\n//localStorage.setItem(\"debug\", \"cornerstoneTools\")\n\nconst drawerWidth = 240\nconst iconColor = '#FFFFFF'\nlet iconTool = null\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n        backgroundColor: theme.palette.common.black,\n    },\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n\n  title: {\n    flexGrow: 1,\n  },\n\n  appBar: {\n    position: 'relative',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  hide: {\n    display: 'none',\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n\n  // Loads information about the app bar, including app bar height\n  toolbar: theme.mixins.toolbar,\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  listItemText: {\n    fontSize: '0.85em',\n    marginLeft: '-20px'\n  },\n\n})\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.files = []\n    this.folder = null\n    this.file = null\n    this.url = null\n    this.explorer = null\n    this.series = null\n  \n    this.mprData = {}\n    this.mprPlane = ''\n    \n    this.volume = []\n    //this.mprSliceIndex = [0, 0, 0]\n\n    this.fileOpen = React.createRef()\n    this.showFileOpen = this.showFileOpen.bind(this)\n\n    this.openDicomdir = React.createRef()\n    this.showOpenDicomdir = this.showOpenDicomdir.bind(this)\n\n    this.openFolder = React.createRef()\n    this.showOpenFolder = this.showOpenFolder.bind(this)    \n\n    this.openUrlField = React.createRef()\n    \n    this.dicomViewersRefs = []\n    this.dicomViewers = []\n    for(let i=0; i < 16; i++) {\n      this.dicomViewers.push(this.setDcmViewer(i))\n    }\n  }\n\n  state = { \n    anchorElLayout: null,   \n    openMenu: false,\n    openImageEdit: false,\n    openTools: false,\n    openMpr: false,\n    textMessage: '',\n    titleMessage: '',\n    visibleMainMenu: true,\n    visibleHeader: false,\n    visibleSettings: false,\n    visibleToolbar: true,\n    visibleOpenUrl: false,\n    visibleToolbox: false,\n    visibleMeasure: false,\n    visibleClearMeasureDlg: false,\n    visibleAbout: false,\n    visibleDicomdir: false,\n    visibleFileManager: false,\n    visibleZippedFileDlg: false,\n    visibleDownloadZipDlg: false,\n    visibleOpenMultipleFilesDlg: false,\n    toolState: 1,\n    sliceIndex: 0,\n    sliceMax: 1,\n    listOpenFilesScrolling: false,\n    visibleVolumeBuilding: false,\n    visibleMprOrthogonal: false,\n    visibleMprCoronal: false,\n    visibleMprSagittal: false,\n    visibleMprAxial: false,\n    visibleExplorer: false,\n    visibleMessage: false,\n  }\n\n  /*componentDidUpdate() {\n    console.log('App - componentDidUpdate: ', this.props.explorerActiveSeriesIndex)\n\n  }*/\n\n  setDcmViewer = (index) => {\n    return (\n      <DicomViewer \n        dcmRef={(ref) => {this.dicomViewersRefs[index] = ref}}\n        index={index}\n        runTool={ref => (this.runTool = ref)} \n        changeTool={ref => (this.changeTool = ref)}\n        onLoadedImage={this.onLoadedImage}\n        overlay={true}\n        visible={true}\n        use='normal'\n      />   \n    )\n  }\n\n  onLoadedImage = () => {\n    //console.log('App - onLoadedImage: ')\n    //if (this.state.visibleMprOrthogonal) return\n    //this.mprPlane = ''\n    //this.mprPlanePosition()\n    //console.log('App - onLoadedImage - mprPlane: ', this.mprPlane)\n    /*if (!this.state.visibleMprOrthogonal) {\n      if (this.mprPlane === 'sagittal')\n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: true, visibleMprAxial: false, visibleMprCoronal: false})\n      else if (this.mprPlane === 'coronal')\n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: false, visibleMprAxial: false, visibleMprCoronal: true })  \n      else \n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: false, visibleMprAxial: true, visibleMprCoronal: false })\n    }*/\n  }\n\n  getDcmViewerRef = (index) => {\n    return this.dicomViewersRefs[index]\n  }\n\n  getDcmViewer = (index) => {\n    return this.dicomViewers[index]\n  }\n\n  getActiveDcmViewer = () => {\n    return this.dicomViewersRefs[this.props.activeDcmIndex]\n  }  \n\n  showFileOpen() {\n    this.props.isOpenStore(false)\n    this.fileOpen.current.click()\n  }\n\n  handleOpenLocalFs = (filesSelected) => {\n    //console.log('handleOpenLocalFs: ', filesSelected)\n    if (filesSelected.length > 1) {\n      this.files = filesSelected\n      this.changeLayout(1, 1)\n      this.mprPlane = ''\n      this.volume = []\n      this.setState({sliceIndex: 0,\n                     sliceMax: 1,\n                     visibleMprOrthogonal: false, \n                     visibleMprCoronal: false, \n                     visibleMprSagittal: false, \n                     visibleMprAxial: false}, () => {\n                       this.setState({visibleOpenMultipleFilesDlg: true})\n                     })\n    } else {\n      const file = filesSelected[0]\n      if (file.type === 'application/x-zip-compressed' || file.type === 'application/zip') {\n        this.file = file\n        this.url = null\n        this.setState({visibleZippedFileDlg: true})\n      } else {\n        this.setState({sliceIndex: 0, sliceMax: 1})\n        this.props.setLocalFileStore(file)\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file)      \n      }\n    }\n  }\n\n  handleOpenSandboxFs = (fsItem) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openSandboxFs', fsItem)\n  }\n\n  handleOpenImage = (index) => {\n    //console.log('handleOpenImage : ', index)\n    \n    //this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = this.state.sliceMax\n    this.dicomViewersRefs[this.props.activeDcmIndex].sliceIndex = this.state.sliceIndex\n\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal\n    const visibleMprSagittal = this.state.visibleMprSagittal\n    const visibleMprCoronal = this.state.visibleMprCoronal\n    const visibleMprAxial = this.state.visibleMprAxial\n    const plane = this.mprPlanePosition() // plane of source\n\n    if (visibleMprOrthogonal) {\n      if (this.props.activeDcmIndex === 0) {\n        this.dicomViewersRefs[0].runTool('openimage', index)\n\n      } else if (this.props.activeDcmIndex === 1) {\n        if (plane === 'sagittal') { // then open axial plane in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else if (plane === 'axial') { // then open coronal plane in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else { // plane is coronal, then open axial in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }\n\n      } else if (this.props.activeDcmIndex === 2) {\n        if (plane === 'sagittal') { // then open axial plane in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else if (plane === 'axial') { // then open coronal plane in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else { // plane is coronal, then open axial in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }        \n      }\n\n    } else { \n      if (objectIsEmpty(this.mprData)) { // works on new image\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n      } else if ((plane === 'sagittal' && visibleMprSagittal) ||\n          (plane === 'axial' && visibleMprAxial) ||\n          (plane === 'coronal' && visibleMprCoronal))\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n      else if (plane === 'sagittal' && visibleMprAxial)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)  \n      else if (plane === 'sagittal' && visibleMprCoronal)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)   \n      else if (plane === 'axial' && visibleMprSagittal)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n      else if (plane === 'axial' && visibleMprCoronal)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n      else if (plane === 'coronal' && visibleMprSagittal)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData) \n      else if (plane === 'coronal' && visibleMprAxial)\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData) \n      else { // it's not a possible MPR, then open as normal dicom file\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)           \n      }\n    }\n  }\n  \n  handleOpenFileDicomdir = (file) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file)\n  }\n\n  showOpenFolder() {\n    this.openFolder.current.click()\n  }\n\n  showOpenDicomdir() {\n    this.openDicomdir.current.click()\n  }\n\n  handleOpenFolder = (files) => {\n    //console.log('handleOpenFolder: ', files)\n    this.folder = files[0].webkitRelativePath.split('/')[0]\n\n    for (let i=0; i < files.length; i++) {\n      this.files.push(files[i])\n    }\n    this.changeLayout(1, 1)\n    this.mprPlane = ''\n    this.volume = []\n    //for(let i=0; i < 16; i++) \n    //  if (this.dicomViewersRefs[i] !== undefined) {\n    //    // this.dicomViewersRefs[i].runTool('clear')\n    //  }\n    this.setState({sliceIndex: 0,\n                    sliceMax: 1,\n                    visibleMprOrthogonal: false, \n                    visibleMprCoronal: false, \n                    visibleMprSagittal: false, \n                    visibleMprAxial: false}, () => {\n                      \n                    })\n    this.setState({visibleOpenMultipleFilesDlg: true})\n  }\n\n  handleOpenDicomdir = (files) => {\n    this.setState({ visibleDicomdir: false }, () => {\n      let dicomdir = null\n      let datafiles = []\n      for (let i=0; i < files.length; i++) {\n        if (files[i].webkitRelativePath.includes('DICOMDIR')) {\n          dicomdir = files[i]\n        } else {\n          datafiles.push(files[i])\n        }\n      }\n      if (dicomdir !== null) {\n        this.props.setDicomdirStore({origin: 'local', dicomdir: dicomdir, files: datafiles})\n        this.toggleDicomdir()\n      } else {\n        this.setState({titleMessage: 'Warning', textMessage: 'The selected folder does not contains any DICOMDIR file.'}, () => {\n          this.setState({ visibleMessage: true })\n        })\n      }\n    })\n  }\n\n  handleOpenFsDicomdir = (fsItem) => {\n    this.props.setDicomdirStore({origin: 'fs', dicomdir: fsItem, files: []})\n    this.toggleDicomdir()\n  }\n\n  componentDidMount() {\n    // Need to set the renderNode since the drawer uses an overlay\n    //this.dialog = document.getElementById('drawer-routing-example-dialog')\n    window.scrollTo(0, 0)\n  }\n\n\n  showAppBar = () => {\n    window.scrollTo(0, 0)\n  }\n  \n\n  toggleMainMenu = () => {\n    const visibleMainMenu = this.state.visibleMainMenu\n    //const visibleFileManager = this.state.visibleFileManager\n    if (getSettingsFsView() === 'left') {\n      this.setState({ visibleMainMenu: !visibleMainMenu, visibleFileManager: false })\n    } else {\n      this.setState({ visibleMainMenu: !visibleMainMenu })\n    }\n  }\n  \n  showMainMenu = () => {\n    this.setState({ visibleMainMenu: true })\n  }\n\n  hideMainMenu = () => {\n    this.setState({ visibleMainMenu: false })\n  }\n\n  handleVisibility = (visibleMainMenu) => {\n    this.setState({ visibleMainMenu })\n  }\n\n\n  toggleFileManager = () => {\n    if (getSettingsFsView() === 'left') {\n      this.setState({visibleMainMenu: false, visibleFileManager: !this.state.visibleFileManager})\n    } else {\n      //this.setState({visibleFileManager: !this.state.visibleFileManager})\n      const visible = !this.state.visibleFileManager\n      this.setState({ visibleFileManager: visible })\n      if (visible) \n        this.setState({ \n          visibleMeasure: false, \n          visibleHeader: false,\n          visibleToolbox: false, \n          visibleDicomdir: false, \n          visibleExplorer: false\n        })        \n    }\n  }\n  \n  toggleExplorer = () => {\n    const visible = !this.state.visibleExplorer\n    this.setState({ visibleExplorer: visible })\n    if (visible) \n      this.setState({ \n        visibleMeasure: false, \n        visibleHeader: false,\n        visibleToolbox: false, \n        visibleDicomdir: false, \n        visibleFileManager: false\n      })    \n  }\n\n  toggleHeader = () => {\n    const visible = !this.state.visibleHeader\n    this.setState({ visibleHeader: visible })\n    if (visible) \n      this.setState({ \n        visibleMeasure: false, \n        visibleToolbox: false, \n        visibleDicomdir: false, \n        visibleFileManager: false,\n        visibleExplorer: false\n      })    \n  }\n\n\n  toggleToolbox = () => {\n    const visible = !this.state.visibleToolbox\n    this.setState({ visibleToolbox: visible })\n    if (visible) \n      this.setState({ \n        visibleMeasure: false, \n        visibleHeader: false, \n        visibleDicomdir: false, \n        visibleFileManager: false,\n        visibleExplorer: false \n      })\n  }\n\n  saveMeasure = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('savetools')\n  }\n  \n  toggleMeasure = () => {\n    const visible = !this.state.visibleMeasure\n    this.setState({ visibleMeasure: visible })\n    if (visible) \n      this.setState({ \n        visibleToolbox: false, \n        visibleHeader: false, \n        visibleDicomdir: false, \n        visibleFileManager: false,\n        visibleExplorer: false\n      })\n  }\n\n  hideMeasure = () => {\n    this.setState({ visibleMeasure: false })\n  }\n\n  handleVisibilityMeasure = (visibleMeasure) => {\n    this.setState({ visibleMeasure })\n  }\n\n\n  toggleDicomdir = () => {\n    const visible = !this.state.visibleDicomdir\n    this.setState({ visibleDicomdir: visible })\n    if (visible) \n      this.setState({ \n        visibleMeasure: false, \n        visibleToolbox: false, \n        visibleHeader: false, \n        visibleFileManager: false\n      })\n  }\n  \n\n  clearMeasure = () => {\n    this.showClearMeasureDlg()\n  }\n\n  showClearMeasureDlg = () => {\n    this.setState({ visibleClearMeasureDlg: true })\n  }\n\n  hideClearMeasureDlg = () => {\n      this.setState({ visibleClearMeasureDlg: false })\n  }\n\n  confirmClearMeasureDlg = () => {\n    this.hideClearMeasureDlg()\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools')\n  }\n\n\n  showZippedFileDlg = () => {\n    this.setState({ visibleZippedFileDlg: true })\n  }  \n\n  hideZippedFileDlg = () => {\n      this.setState({ visibleZippedFileDlg: false })\n  }\n\n  confirmZippedFileDlg = () => {\n    this.hideZippedFileDlg()\n    this.setState({ visibleFileManager: true }, () => {\n      if (this.url !== null) {\n        this.setState({visibleDownloadZipDlg: true})\n      } else {\n        this.props.setFsZippedFile(this.file)\n      }\n    })\n  }\n\n\n  showAbout = () => {\n    this.setState({ visibleAbout: !this.state.visibleAbout })\n  }\n  \n  showSettings = () => {\n    this.setState({ \n      visibleMainMenu: false, \n      visibleSettings: true, \n      visibleToolbar: false, \n      position: 'right' \n    })\n  }\n\n  hideSettings = () => {\n    this.setState({ \n      visibleMainMenu: true, \n      visibleSettings: false, \n      visibleToolbar: true,\n      visibleFileManager: false,\n      visibleDicomdir: false, \n    })\n  }\n\n  handleVisibilitySettings = (visibleSettings) => {\n    this.setState({ visibleSettings })\n  }\n\n  hideDownloadZipDlg = () => {\n    this.setState({ visibleDownloadZipDlg: false })\n  }\n\n  hideOpenMultipleFilesDlg = () => {\n    this.setState({ visibleOpenMultipleFilesDlg: false })\n    this.openMultipleFilesCompleted()\n  }\n\n  openMultipleFilesCompleted = () => {\n    //console.log('openMultipleFilesCompleted: ', this.props.files)\n\n    if (this.props.files !== null) {\n      this.changeLayout(1, 1)\n\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', 0)\n\n      const sliceMax = this.props.files.length\n\n      this.setState({sliceMax: sliceMax}, () => {\n \n      })\n\n      // check if there are studies and series, if so then prepare Explorer\n      \n      const patientList = groupBy(this.props.files, a => a.patient.patientName)\n      const patientKeys = [...patientList.keys()]\n      const patient = {\n        list: patientList,\n        keys: patientKeys\n      }\n\n      this.explorer = {\n        folder: this.folder,\n        patient: patient,\n        //study: study,\n        //series: series\n      }\n\n      if (sliceMax > 1)\n        this.setState({visibleExplorer: true, visibleFileManager: false})\n    } else {\n      //console.log('openMultipleFilesCompleted, this.props.allFiles: ', this.props.allFiles)\n      //this.setState({titleMessage: 'Warning', textMessage: 'No DICOM files found.'}, () => {\n        //this.setState({ visibleMessage: true })\n      //})\n    }   \n  }\n\n  showOpenUrl = () => {\n    this.setState({ visibleOpenUrl: true })\n  }\n\n  hideOpenUrl = (openDlg) => {\n    this.setState({ visibleOpenUrl: false },\n      () => {\n        if (openDlg) {\n          this.hideMainMenu()\n          this.file = null\n          this.url = this.openUrlField.value\n          //console.log('this.url :', this.url)\n          //const ext = getFileExtReal(this.url)\n          //console.log('ext :', ext)\n          if (getFileExtReal(this.url) === 'zip') {\n            this.setState({visibleZippedFileDlg: true})\n          } else {\n            return this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openurl', this.openUrlField.value)\n          }\n        } \n    })\n  }\n\n  downloadOpenUrl = () => {\n    this.setState({ visibleOpenUrl: false, visibleToolbar: true })\n  }\n  \n  resetImage = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('reset')\n  }\n  \n  saveShot = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('saveas')\n  }\n\n  cinePlayer = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('cine')\n  }\n\n  clear = () => {  \n    this.setState({openImageEdit: false, \n                   openTools: false, \n                   openMpr: false, \n                   visibleToolbox: false, \n                   visibleMeasure: false, \n                   visibleHeader: false, \n                   visibleDicomdir: false})\n    this.changeLayout(1, 1)\n    this.props.setFilesStore(null)\n    this.props.setDicomdirStore(null)\n    this.props.clearingStore()\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n  }\n\n  handleLayout = (event) => {\n    this.setState({anchorElLayout: event.currentTarget})\n  }\n  \n  closeLayout = () => {\n    this.setState({anchorElLayout: null})\n  }\n\n  changeLayout = (row, col) => {\n    // if reduce the grid clear the unused views\n    if (row < this.props.layout[0] || col < this.props.layout[1]) {\n      this.layoutGridClick(0)\n      for(let i=0; i < 4; i++) {\n        for(let j=0; j < 4; j++) {\n          if ((i+1 > row) || (j+1 > col)) {\n            const index = i*4+j\n            if (this.dicomViewersRefs[index] !== undefined) {  \n              //this.dicomViewersRefs[index].runTool('clear')\n            }\n          }\n        }\n      }\n    }\n    this.props.setLayoutStore(row, col)\n  }\n\n  toolExecute = (tool) => {\n    //this.hideMainMenu()\n    switch (tool) {\n      case 'notool': \n        iconTool = null\n        this.setState({toolState: null})\n        break\n      case 'Wwwc':\n        iconTool = mdiArrowAll\n        break\n      case 'Pan':\n        iconTool = mdiCursorPointer\n        break        \n      case 'Zoom':\n        iconTool = mdiMagnify\n        break        \n      case 'Length':\n        iconTool = mdiRuler\n        break       \n      case 'Probe':\n        iconTool = mdiEyedropper\n        break    \n      case 'Angle':\n        iconTool = mdiAngleAcute\n        break   \n      case 'EllipticalRoi':\n        iconTool = mdiEllipse\n        break     \n      case 'RectangleRoi':\n        iconTool = mdiRectangle\n        break\n      case 'FreehandRoi':\n        iconTool = mdiGesture\n        break       \n\n      default:\n          break     \n    }\n    this.props.toolStore(tool)\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool(tool)\n  }\n\n  toolChange = () => {\n    const toolState = 1-this.state.toolState\n    this.setState({toolState: toolState}, () => {\n      this.changeTool.changeTool(this.props.tool, toolState)\n    })\n  }\n\n  toolRemove = (index) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetool', index)\n  }\n\n  toggleOpenMenu = () => {\n    this.setState({openMenu: !this.state.openMenu})\n  } \n\n  toggleImageEdit = () => {\n    this.setState({openImageEdit: !this.state.openImageEdit})\n  }\n\n  toggleTools = () => {\n    this.setState({openTools: !this.state.openTools})\n  } \n\n  toggleMpr = () => {\n    this.setState({openMpr: !this.state.openMpr})\n  } \n\n  layoutGridClick = (index) => {\n    if (isMobile && index === this.props.activeDcmIndex) return\n\n    //console.log('layoutGridClick: ', index)\n    const sliceMax = this.dicomViewersRefs[index].sliceMax\n    const sliceIndex = this.dicomViewersRefs[index].sliceIndex\n    this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex})\n\n    //this.mprSliceIndex[this.props.activeDcmIndex] = sliceIndex\n\n    this.props.setActiveDcmIndex(index)\n\n    if (this.state.visibleMprOrthogonal) {\n      if (index === 0) {\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[0]\n      } else if (index === 1) {\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[1]\n      } else if (index === 2) {\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[2]\n      }\n    }  \n\n    const dcmViewer = this.getDcmViewerRef(index)\n    this.props.setActiveMeasurements(dcmViewer.measurements)\n    this.props.setActiveDcm({image: dcmViewer.image, element: dcmViewer.dicomImage, isDicom: dcmViewer.isDicom})\n  }\n \n  layoutGridTouch = (index) => {\n    if (!isMobile && index === this.props.activeDcmIndex) return\n    \n    const sliceMax = this.dicomViewersRefs[index].sliceMax\n    const sliceIndex = this.dicomViewersRefs[index].sliceIndex\n\n    this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex})\n\n    //this.mprSliceIndex[this.props.activeDcmIndex] = sliceIndex\n\n    this.props.setActiveDcmIndex(index)\n\n    if (this.state.visibleMprOrthogonal) {\n      if (index === 0) {\n        //const sliceMax = this.props.files === null ? 1 : this.props.files.length\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[0]\n\n      } else if (index === 1) {\n        //const sliceMax = this.props.files[0].image.columns\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[1]\n\n      } else if (index === 2) {\n        //const sliceMax = this.props.files[0].image.rows\n        this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex}) //this.mprSliceIndex[2]\n      }\n    }    \n\n    const dcmViewer = this.getDcmViewerRef(index)\n    this.props.setActiveMeasurements(dcmViewer.measurements)\n    this.props.setActiveDcm({image: dcmViewer.image, element: dcmViewer.dicomImage, isDicom: dcmViewer.isDicom})   \n  }\n\n  buildLayoutGrid = () => {\n    let dicomviewers = []\n    for(let i=0; i < this.props.layout[0]; i++) {\n      for(let j=0; j < this.props.layout[1]; j++) {\n        const styleLayoutGrid = {\n          border: this.props.layout[0] === 1 && this.props.layout[1] === 1 ? 'solid 1px #000000' : 'solid 1px #444444',\n        }\n        const index = i*4+j\n        dicomviewers.push(\n          <div \n            key={index} \n            style={styleLayoutGrid} \n            onClick={() => this.layoutGridClick(index)} \n            onTouchStart={() => this.layoutGridTouch(index)}\n          >\n            {this.getDcmViewer(index)}\n          </div>        \n        )\n      }\n    }\n\n    return (\n      <div\n        id=\"dicomviewer-grid\"\n        style={{\n          display: 'grid',\n          gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%',\n        }}\n      >\n        {dicomviewers}\n      </div>\n    )\n  }\n\n  getFileName = (dcmViewer) => {\n    return dcmViewer.filename\n    /*if (dcmViewer.fsItem !== null) {\n      return dcmViewer.fsItem.name\n    } else if (dcmViewer.localfile !== null) {\n      return getFileNameCorrect(dcmViewer.localfile.name)\n    } else {\n      return dcmViewer.localurl.substring(dcmViewer.localurl.lastIndexOf('/')+1)\n    }*/\n  }\n\n  getStringVisiblePlane = () => {\n    if (this.state.visibleMprOrthogonal) \n      return 'orthogonal'    \n    else if (this.state.visibleMprSagittal) \n      return 'sagittal'\n    else if (this.state.visibleMprAxial) \n      return 'axial'\n    else if (this.state.visibleMprCoronal) \n      return 'coronal'\n  }\n\n  appBarTitle = (classes, isOpen, dcmViewer) => {\n    if (isMobile && !isTablet) {\n      if (isOpen) \n        return null\n      else \n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\n          </Typography>          \n        )\n    } else {\n      if (isOpen) {\n        const plane = this.getStringVisiblePlane()\n        if (this.state.sliceMax > 1 && this.mprPlane !== plane && this.mprPlane !== '') {\n          return (\n            <Typography variant=\"overline\" className={classes.title}>\n              {'MPR '+plane}\n            </Typography>\n          )        \n        }\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            {this.getFileName(dcmViewer)}\n          </Typography>\n        )\n      } else if (this.props.dicomdir !== null) {\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            {this.props.dicomdir.dicomdir.webkitRelativePath}\n          </Typography>\n        )\n      } else\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\n          </Typography>\n        )\n    }\n  }\n\n  // ---------------------------------------------------------------------------------------------- MPR\n  \n  getImageOrientationZ = (image) => {\n    const iop = image.data.string('x00200037').split('\\\\') // Image Orientation Patient\n\n    let v = new Array(3).fill(0).map(() => new Array(3).fill(0))\n\n    v[0][0] = parseFloat(iop[0]) // the x direction cosines of the first row X\n    v[0][1] = parseFloat(iop[1]) // the y direction cosines of the first row X\n    v[0][2] = parseFloat(iop[2]) // the z direction cosines of the first row X\n    v[1][0] = parseFloat(iop[3]) // the x direction cosines of the first column Y\n    v[1][1] = parseFloat(iop[4]) // the y direction cosines of the first column Y\n    v[1][2] = parseFloat(iop[5]) // the z direction cosines of the first column Y \n    //console.log('getImageOrientationZ: ', v[1][2])\n    return v[1][2]\n  }\n\n  mprBuildVolume = () => {\n    if (this.volume.length > 0) return\n\n    this.t0 = performance.now()\n\n    const files = this.dicomViewersRefs[0].files\n    const xPixelSpacing = getDicomPixelSpacing(files[0].image, 0)\n    const spacingBetweenSlice = getDicomSpacingBetweenSlice(files[0].image)\n    const sliceThickness = getDicomSliceThickness(files[0].image)\n    const length = files[0].image.getPixelData().length\n    const sliceLocation = getDicomSliceLocation(files[0].image)\n    this.volume = []\n    // see https://stackoverflow.com/questions/58412358/dicom-multiplanar-image-reconstruction\n    this.mprData.zDim = Math.round(files.length * spacingBetweenSlice / xPixelSpacing)\n\n    //console.log('this.mprData.zDim: ', this.mprData.zDim)\n    //console.log('spacingBetweenSlice: ', spacingBetweenSlice)\n    //console.log('sliceThickness: ', sliceThickness)\n    //console.log('xPixelSpacing: ', xPixelSpacing)\n    //console.log('getSliceLocation: ', sliceLocation)\n\n    // If spacing between slices is less than slice thickness, the images are not optimal for 3D reconstruction.\n    // Try an alternative algorithm based on slice distance.\n    let zDimMethod2 = false\n    if (spacingBetweenSlice < sliceThickness && sliceLocation === undefined) {\n      let max = 0\n      let min = 0\n      for(let i=0; i < files.length; i++) {\n        if (files[i].sliceDistance > max)\n          max = files[i].sliceDistance\n        if (files[i].sliceDistance < min)\n          min = files[i].sliceDistance  \n      }\n      this.mprData.zDim = Math.round(Math.abs(max - min) / xPixelSpacing)\n      //console.log('method2, this.mprData.zDim: ', this.mprData.zDim)\n      zDimMethod2 = true\n    }\n    //console.log('this.mprData.zDim: ', this.mprData.zDim)\n\n    if (files.length === this.mprData.zDim) { // slices contiguous\n      for (let i = 0, len = files.length; i < len; i++) {\n        this.volume.push(files[i].image.getPixelData())\n      }\n      \n    } else if (files.length < this.mprData.zDim) { // gap between slices\n      \n      let emptyPlane = new Int16Array(length).fill(0)\n      for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n        this.volume.push(emptyPlane)\n      }\n\n      let order = []\n\n      for (let i = 0; i < files.length; i++) {\n        order.push({iFile: i, instanceNumber: files[i].instanceNumber, sliceDistance: files[i].sliceDistance, sliceLocation: files[i].sliceLocation})\n      }\n      \n      if (zDimMethod2) {\n        // eliminate eventually duplicates\n        order = order.reduce((previous, current) => {\n          let object = previous.filter(object => object.sliceDistance === current.sliceDistance)\n          if (object.length === 0) {\n            previous.push(current)\n          }\n          return previous\n        }, [])\n\n        order.sort((l, r) => {\n          // return r.sliceDistance - l.sliceDistance\n          return l.instanceNumber - r.instanceNumber\n        })     \n        //console.log('order: ', order)     \n      } else {\n        // const reorder = files[0].sliceDistance < files[1].sliceDistance\n        const reorder = files[0].sliceLocation < files[1].sliceLocation\n        if (reorder) {\n          order.sort((l, r) => {\n            // return l.instanceNumber - r.instanceNumber\n            // return r.sliceDistance - l.sliceDistance\n            return r.sliceLocation - l.sliceLocation\n          })\n          //console.log('reorder: ')     \n        }\n      }\n      /*if (this.getImageOrientationZ(files[0].image) < 0) {\n        order.sort((l, r) => {\n          return r.instanceNumber - l.instanceNumber\n          // return r.sliceDistance - l.sliceDistance\n        })     \n        console.log('reorder 2: ')        \n      }*/\n\n      let intervals = [0]\n      this.volume[0] = files[order[0].iFile].image.getPixelData()\n      this.volume[this.mprData.zDim-1] = files[order[order.length-1].iFile].image.getPixelData()  \n      const step = (this.mprData.zDim-2) / (order.length-2)\n      let i = 0\n      for (let k = 1; k <= order.length-2; k++) {  \n          i = Math.ceil(i+step)\n          //console.log(`i: ${i},  k: ${k},  order[k].iFile: ${order[k].iFile}`)\n          this.volume[i] = files[order[k].iFile].image.getPixelData() // order[k-1].iFile\n          intervals.push(i)\n      }\n      intervals.push(this.mprData.zDim-1)\n      //console.log('intervals: ', intervals)\n      \n      //console.log('this.volume: ', this.volume)\n\n      const interpolationMethod = getSettingsMprInterpolation()\n\n      if (interpolationMethod === 'no') {\n        // build missing planes without interpolation, simple duplicate\n        for (let i = 0; i < intervals.length-1; i++) {\n          //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n          for (let j = intervals[i]+1; j <= intervals[i+1]-1; j++) {\n            //console.log(`j: ${j}`)\n            this.volume[j] = this.volume[intervals[i+1]]\n          }\n        }\n\n      } else if (interpolationMethod === 'weightedlinear') {\n        // build the interpolate planes between original planes\n        for (let i = 0; i < intervals.length-1; i++) {\n          //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n          const step = intervals[i+1]-intervals[i]\n\n          for (let j = intervals[i]+1; j < intervals[i+1]; j++) {\n            //console.log(`i: ${i}, intervals[i]: ${intervals[i]}, j: ${j}`)\n\n            let p = new Int16Array(length)\n            const w = (j-intervals[i]) / step\n\n            for (let k = 0; k < length-1; k++) {\n              // simple linear interpolation\n              // const p0 = this.volume[intervals[i]][k]\n              // const p1 = this.volume[intervals[i+1]][k]\n              // p[k] = (p0+p1)/2   \n\n              // weighted linear interpolation\n              const p0 = this.volume[intervals[i]][k] * (1-w)\n              const p1 = this.volume[intervals[i+1]][k] * w\n              p[k] = p0+p1\n\n              // weighted bilinear interpolation\n              /*if (k-1 > 0 && k+1 < length) {\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.5 + this.volume[intervals[i]][k-1] * (1-w) * 0.25 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25 + this.volume[intervals[i+1]][k+1] * w * 0.25\n                p[k] = p0+p1\n              } else if (k-1 < 0) {\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k+1] * w * 0.25\n                p[k] = p0+p1\n              } else { // k+1 > length \n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k-1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25\n                p[k] = p0+p1\n              }*/\n            }\n\n            this.volume[j]= p\n          }\n        }\n      }\n\n      this.t1 = performance.now()\n      console.log(`performance volume building: ${this.t1-this.t0} milliseconds`)\n\n    } else { // overlapping slices\n      this.mprData.zStep = files.length / this.mprData.zDim\n      //console.log('this.mprData.zStep: ', this.mprData.zStep)\n      for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n        const k = Math.round(i*this.mprData.zStep)\n        this.volume.push(files[k].image.getPixelData())\n      }    \n    }\n\n    if (this.state.visibleMprOrthogonal) {\n      this.changeToOrthogonalView()\n\n    } else if (this.state.visibleMprSagittal) {\n      this.changeToSagittalView()\n\n    } else if (this.state.visibleMprCoronal) {\n      this.changeToCoronalView()  \n\n    } else { // axial\n      this.changeToAxialView()\n    }\n  }\n\n  changeToOrthogonalView = () => {  \n    //console.log('changeToOrthogonalView - files: ', this.dicomViewersRefs[0].files)\n    \n    this.changeLayout(1, 3)\n\n    const index = Math.round(this.dicomViewersRefs[0].files.length / 2)\n\n    this.setState({visibleVolumeBuilding: false, sliceIndex: index}, () => {\n      const plane = this.mprPlanePosition()\n\n      if (this.dicomViewersRefs[0].volume === null)\n        this.dicomViewersRefs[0].volume = this.volume\n\n      //this.mprSliceIndex[0] = index  \n      this.dicomViewersRefs[0].runTool('openimage', index)\n\n      if (this.dicomViewersRefs[1].volume === null)\n        this.dicomViewersRefs[1].volume = this.volume\n      const xzIndex = Math.round(this.mprData.zDim / 2) // this.dicomViewersRefs[0].files[index].image.columns\n      //this.mprSliceIndex[1] = xzIndex\n      this.dicomViewersRefs[1].sliceMax = this.mprData.zDim\n      //this.dicomViewersRefs[1].sliceIndex = 0\n      this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, xzIndex, this.mprData)  \n      \n      if (this.dicomViewersRefs[2].volume === null)\n        this.dicomViewersRefs[2].volume = this.volume\n      const yzIndex = Math.round(this.mprData.zDim / 2) // this.dicomViewersRefs[0].files[index].image.rows\n      //this.mprSliceIndex[2] = yzIndex\n      this.dicomViewersRefs[2].sliceMax = this.mprData.zDim\n      //this.dicomViewersRefs[2].sliceIndex = 0\n      this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, yzIndex, this.mprData)      \n    })\n\n  }\n\n  changeToSagittalView = () => {\n    //console.log('changeToSagittalView: ')\n\n    this.changeLayout(1, 1)\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition()\n\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume\n\n        if (plane === 'sagittal') { \n        const sliceMax = this.dicomViewersRefs[0].files === null ? 1 : this.dicomViewersRefs[0].files.length\n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n        })\n      } else if (plane === 'axial') {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })   \n      } else {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }) \n      }      \n    })\n  }\n\n  changeToCoronalView = () => {  \n    this.changeLayout(1, 1)\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition()\n\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume\n\n      if (plane === 'coronal') {\n        const sliceMax = this.dicomViewersRefs[0].files === null ? 1 : this.dicomViewersRefs[0].files.length\n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n        })       \n\n      } else if (plane === 'axial') {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })\n\n      } else { // plane is sagittal\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })  \n      }      \n    })\n  }\n\n  changeToAxialView = () => {  \n    this.changeLayout(1, 1)\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition()\n          \n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume\n\n      if (plane === 'axial') {\n        const sliceMax = this.dicomViewersRefs[0].files === null ? 1 : this.dicomViewersRefs[0].files.length\n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n        })\n        \n\n      } else if (plane === 'sagittal') {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })\n        \n\n      } else {\n        const sliceMax = this.mprData.zDim \n        const index = Math.round(sliceMax / 2)\n        this.setState({sliceIndex: index, sliceMax: sliceMax}, () => {\n          this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax = sliceMax\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        })             \n      }      \n    })\n  }\n\n  mprPlanePosition = (force = false, index = this.props.activeDcmIndex) => {\n    //console.log('App - mprPlanePosition 1: ', this.mprPlane)\n    if (this.mprPlane === '' || force) {\n      this.mprPlane = this.dicomViewersRefs[index].mprPlanePosition()\n      if (this.mprPlane === 'sagittal')\n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: true, visibleMprAxial: false, visibleMprCoronal: false})\n      else if (this.mprPlane === 'coronal')\n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: false, visibleMprAxial: false, visibleMprCoronal: true })  \n      else \n        this.setState({ visibleMprOrthogonal: false, visibleMprSagittal: false, visibleMprAxial: true, visibleMprCoronal: false })\n    }\n    return this.mprPlane  \n  }\n\n  mprOrthogonal = () => {\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal\n    if (!visibleMprOrthogonal) {\n      const index = Math.round(this.dicomViewersRefs[0].files.length / 2)\n      this.mprData.plane = {\n        from: this.mprPlane,\n        to: 'orthogonal'\n      }\n      this.setState({sliceIndex: index})\n      this.setState({visibleMprOrthogonal: true, \n                    visibleMprCoronal: false, \n                    visibleMprSagittal: false, \n                    visibleMprAxial: false}, () => {\n        if (this.volume.length === 0) {   \n          this.setState({visibleVolumeBuilding: true}, () => {           \n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)   \n          })\n        } else {\n          this.changeToOrthogonalView()\n        }\n      })\n    }\n  }\n\n  mprSagittal = () => {\n    const visibleMprSagittal = this.state.visibleMprSagittal\n    if (!visibleMprSagittal) {\n      this.mprData.plane = {\n        from: this.mprPlane,\n        to: 'sagittal'\n      }\n      this.setState({visibleMprOrthogonal: false, \n                    visibleMprSagittal: true, \n                    visibleMprCoronal: false, \n                    visibleMprAxial: false}, () => {\n        if (this.volume.length === 0) {   \n          this.setState({visibleVolumeBuilding: true}, () => {           \n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)   \n          })\n        } else {\n          this.changeToSagittalView()\n        }\n      })\n    }\n  }\n    \n  mprCoronal = () => {\n    const visibleMprCoronal = this.state.visibleMprCoronal\n    if (!visibleMprCoronal) {\n      this.mprData.plane = {\n        from: this.mprPlane,\n        to: 'coronal'\n      }\n      this.setState({visibleMprOrthogonal: false, \n                     visibleMprSagittal: false, \n                     visibleMprCoronal: true, \n                     visibleMprAxial: false}, () => {\n        if (this.volume.length === 0) {   \n          this.setState({visibleVolumeBuilding: true}, () => {           \n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)   \n          })\n        } else {\n          this.changeToCoronalView()\n        }\n      })\n    }\n  }\n\n  mprAxial = () => {\n    const visibleMprAxial = this.state.visibleMprAxial\n    if (!visibleMprAxial) {\n      this.mprData.plane = {\n        from: this.mprPlane,\n        to: 'axial'\n      }\n      this.setState({visibleMprOrthogonal: false, \n                     visibleMprSagittal: false, \n                     visibleMprCoronal: false, \n                     visibleMprAxial: true}, () => {\n        if (this.volume.length === 0) {   \n          this.setState({visibleVolumeBuilding: true}, () => {           \n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)   \n          })\n        } else {\n          this.changeToAxialView()\n        }\n      })\n    }\n  }\n\n  // ---------------------------------------------------------------------------------------------- MPR end\n  \n  listOpenFilesFirstFrame = () => {\n    const index = 0\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  }\n\n  listOpenFilesPreviousFrame = () => {\n    let index = this.state.sliceIndex\n    index = index === 0 ? this.state.sliceMax-1 : index-1\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  } \n\n  listOpenFilesNextFrame = () => {\n    let index = this.state.sliceIndex\n    index = index === this.state.sliceMax-1 ? 0 : index+1\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  }  \n\n  listOpenFilesLastFrame = () => {\n    const index = this.state.sliceMax-1\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  }  \n\n  listOpenFilesScrolling = () => {  \n    const scrolling = this.state.listOpenFilesScrolling\n    this.setState({listOpenFilesScrolling: !scrolling}, () => {\n      if (scrolling) {\n        clearInterval(this.timerScrolling)\n      } else {\n        this.timerScrolling = setInterval(() => {\n          this.listOpenFilesNextFrame()\n        }, 500)\n      }      \n    })\n  }\n\n  handleSliceChange = (event, value) => {\n    this.setState({sliceIndex: Math.floor(value)}, () => {\n      let index = this.state.sliceIndex\n      this.props.setLocalFileStore(this.files[index])\n      this.handleOpenImage(index)\n    })\n  }\n\n  explorerOnSelectSeries = (files) => {\n    //console.log('explorerOnSelectSeries: ', files)\n\n    this.files = files\n    this.mprPlane = ''\n\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('setfiles', this.files)\n\n    const sliceMax = this.dicomViewersRefs[this.props.activeDcmIndex].sliceMax // this.files.length\n    const sliceIndex = this.dicomViewersRefs[this.props.activeDcmIndex].sliceIndex\n    this.setState({sliceMax: sliceMax, sliceIndex: sliceIndex})\n    \n    this.mprData = {}\n    this.mprPlane = ''\n\n    this.handleOpenImage(0)\n  }\n\n  render() {\n    //console.log('App render: ')\n\n    const { classes } = this.props\n\n    const primaryClass = {primary:classes.listItemText}\n    const iconSize = '1.2rem'\n    \n    const isOpen = this.props.isOpen[this.props.activeDcmIndex]\n    const isDicomdir = this.props.dicomdir !== null\n    let isMultipleFiles = false\n    if (this.dicomViewersRefs[this.props.activeDcmIndex] === undefined) {\n      isMultipleFiles = false\n    } else {\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].files !== null) \n        isMultipleFiles = this.dicomViewersRefs[this.props.activeDcmIndex].files.length > 1\n      else\n        isMultipleFiles = false\n    }\n\n    const openMenu = this.state.openMenu\n    const openImageEdit = this.state.openImageEdit\n    const openTools = this.state.openTools\n    const openMpr = this.state.openMpr && isMultipleFiles && this.mprPlane !== ''\n    const visibleMainMenu = this.state.visibleMainMenu\n    const visibleHeader = this.state.visibleHeader\n    const visibleSettings = this.state.visibleSettings\n    const visibleAbout = this.state.visibleAbout\n    const visibleMeasure = this.state.visibleMeasure\n    const visibleToolbox = this.state.visibleToolbox\n    const visibleDicomdir = this.state.visibleDicomdir\n    const visibleFileManager = this.state.visibleFileManager\n    const visibleClearMeasureDlg = this.state.visibleClearMeasureDlg\n    const visibleZippedFileDlg = this.state.visibleZippedFileDlg \n    const visibleDownloadZipDlg = this.state.visibleDownloadZipDlg\n    const visibleOpenMultipleFilesDlg = this.state.visibleOpenMultipleFilesDlg\n    const visibleLayout = Boolean(this.state.anchorElLayout)\n    const visibleVolumeBuilding = this.state.visibleVolumeBuilding\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal\n    const visibleMprCoronal = this.state.visibleMprCoronal\n    const visibleMprSagittal = this.state.visibleMprSagittal\n    const visibleMprAxial = this.state.visibleMprAxial\n    const visibleExplorer = this.state.visibleExplorer\n\n    let iconToolColor = this.state.toolState === 1 ? '#FFFFFF' : '#999999'\n\n    const dcmViewer = this.getActiveDcmViewer()\n\n    const sliceMax = this.state.sliceMax\n\n    return (\n      <div>\n        <AppBar className={classes.appBar} position='static' elevation={0}>\n          <Toolbar variant=\"dense\">\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={this.toggleMainMenu}>\n              <MenuIcon />\n            </IconButton>\n            { this.appBarTitle(classes, isOpen, dcmViewer) }\n            \n            <div className={classes.grow} />\n            { !isOpen && !isDicomdir ? (\n              <IconButton onClick={this.showAbout}>\n                <Icon path={mdiInformationOutline} size={iconSize} color={iconColor} />\n              </IconButton> \n             ) : null\n            }            \n            { iconTool !== null && this.props.tool !== null &&  isOpen ? (\n                <IconButton onClick={this.toolChange}>\n                  <Icon path={iconTool} size={iconSize} color={iconToolColor} />\n                </IconButton>\n              ) : null\n            }\n            { isOpen && dcmViewer.numberOfFrames > 1 &&  isOpen ? (\n              <Tooltip title=\"Cine Player\">\n                <IconButton onClick={this.cinePlayer}>\n                  <Icon path={mdiVideo} size={iconSize} color={iconColor} />\n                </IconButton> \n              </Tooltip>\n              ): null\n            }\n            { isOpen ? (\n              <Tooltip title=\"Reset Image\">\n                <IconButton onClick={this.resetImage}>\n                  <Icon path={mdiRefresh} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n             ) : null\n            }\n            { isOpen ? (\n              <Tooltip title=\"Save Screenshot\">\n                <IconButton color=\"inherit\" onClick={this.saveShot}>\n                  <Icon path={mdiCamera} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n             ) : null\n            }\n            { isOpen ? (\n              <Tooltip title=\"Toolbox\">\n                <IconButton color=\"inherit\" onClick={this.toggleToolbox}>\n                  <Icon path={mdiToolbox} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }              \n            { isOpen ? (\n              <Tooltip title=\"Measurements\">\n                <IconButton color=\"inherit\" onClick={this.toggleMeasure}>\n                  <Icon path={mdiFileCad} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }  \n            { isOpen && dcmViewer.isDicom ? (\n              <Tooltip title=\"Dicom Header\">\n                <IconButton color=\"inherit\" onClick={this.toggleHeader}>\n                  <Icon path={mdiFileDocument} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }  \n            { isDicomdir ? (\n              <Tooltip title=\"DICOMDIR\">\n                <IconButton color=\"inherit\" onClick={this.toggleDicomdir}>\n                  <Icon path={mdiFolderOpen} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }    \n            { isOpen && isMultipleFiles ? (\n              <Tooltip title=\"Explorer\">\n                <IconButton color=\"inherit\" onClick={this.toggleExplorer}>\n                  <Icon path={mdiAnimationOutline} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }             \n            { isOpen ? (\n              <Tooltip title=\"Sandbox File Manager\">\n                <IconButton color=\"inherit\" onClick={this.toggleFileManager}>\n                  <Icon path={mdiFileCabinet} size={iconSize} color={iconColor} />\n                </IconButton>\n              </Tooltip>\n              ) : null\n            }                        \n          </Toolbar>\n        </AppBar>\n\n        <Drawer \n          variant=\"persistent\"\n          open={visibleMainMenu} \n          style={{position:'relative', zIndex: 1}}\n          onClose={this.toggleMainMenu}\n        >\n          <div className={classes.toolbar}>\n          <PerfectScrollbar>   \n            <List dense={true}>\n              <ListItem button onClick={() => this.showAppBar()}>\n                <ListItemIcon><MenuIcon /></ListItemIcon>\n                <ListItemText primary='Tool Bar' />\n              </ListItem>    \n              <ListItem button onClick={() => this.toggleFileManager()}>\n                <ListItemIcon><Icon path={mdiFileCabinet} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='File Manager' />\n              </ListItem>      \n              \n              <ListItem button onClick={() => this.toggleOpenMenu()}>\n                <ListItemIcon><Icon path={mdiFolderMultiple} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Open ...' />\n                {openMenu ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>                    \n              <Collapse in={openMenu} timeout=\"auto\" unmountOnExit>\n                <List dense={true} component=\"div\">\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.showFileOpen()}>\n                    <ListItemIcon><Icon path={mdiFolder} size={'1.0rem'} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-20px'}}>File</Typography>\n                      } />\n                  </ListItem>\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenUrl()}>\n                    <ListItemIcon><Icon path={mdiWeb} size={'1.0rem'} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-20px'}}>URL</Typography>\n                      } />\n                  </ListItem>\n                  { isInputDirSupported() && !isMobile?\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenFolder()}>\n                    <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-20px'}}>Folder</Typography>\n                      } />\n                  </ListItem>    \n                  : null }                     \n                  { isInputDirSupported() && !isMobile?\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenDicomdir()}>\n                    <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-20px'}}>DICOMDIR</Typography>\n                      } />\n                  </ListItem>    \n                  : null }                                          \n                </List>\n              </Collapse>  \n\n              <ListItem button onClick={() => this.clear()}>\n                <ListItemIcon><Icon path={mdiDelete} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Clear All' />\n              </ListItem>  \n              <ListItem button onClick={this.handleLayout}>\n                <ListItemIcon><Icon path={mdiViewGridPlusOutline} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Layout' />              \n              </ListItem>   \n              <ListItem button onClick={() => this.showSettings()}>\n                <ListItemIcon><Icon path={mdiSettings} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Settings' />\n              </ListItem>                \n              <Divider />\n              <ListItem button onClick={() => this.toggleToolbox()} disabled={!isOpen}>\n                <ListItemIcon><Icon path={mdiChartHistogram} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Histogram' />\n              </ListItem>  \n              <ListItem button onClick={() => this.toggleMpr()} disabled={!isOpen || !isMultipleFiles || this.mprPlane === ''}>\n                <ListItemIcon><Icon path={mdiAxisArrow} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='MPR' />\n                {openMpr ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>              \n              <Collapse in={openMpr} timeout=\"auto\" unmountOnExit>\n                <List dense={true} component=\"div\">\n                  <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprOrthogonal()}>\n                    {visibleMprOrthogonal ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'} color={iconColor} /></ListItemIcon> : null}\n                    <ListItemText \n                      style={visibleMprOrthogonal ? {marginLeft: '-7px'} : {marginLeft: '40px'}} \n                      classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Orthogonal</Typography>\n                      } />\n                  </ListItem>\n                  <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprCoronal()}>\n                    {visibleMprCoronal ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'} color={iconColor} /></ListItemIcon> : null}\n                    <ListItemText \n                      style={visibleMprCoronal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n                      classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Coronal</Typography>\n                      } />\n                  </ListItem>    \n                  <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprSagittal()}>\n                    {visibleMprSagittal ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'} color={iconColor} /></ListItemIcon> : null}  \n                    <ListItemText \n                      style={visibleMprSagittal ? {marginLeft: '-7px'} : {marginLeft: '40px'}} \n                      classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Sagittal</Typography>\n                      } />\n                  </ListItem>    \n                  <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprAxial()}>\n                    {visibleMprAxial ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'} color={iconColor} /></ListItemIcon> : null}  \n                    <ListItemText \n                      style={visibleMprAxial ? {marginLeft: '-7px'} : {marginLeft: '40px'}} \n                      classes={primaryClass} \n                      primary={\n                        <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Axial</Typography>\n                      } />\n                  </ListItem>                                               \n                </List>\n              </Collapse>  \n              <ListItem button onClick={() => this.toggleImageEdit()} disabled={!isOpen}>\n                <ListItemIcon><Icon path={mdiImageEdit} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Edit' />\n                {openImageEdit ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>          \n              <Collapse in={openImageEdit} timeout=\"auto\" unmountOnExit>\n                <List  dense={true} component=\"div\">\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Invert')}>\n                    <ListItemIcon><Icon path={mdiInvertColors} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary=\"Invert\" />\n                  </ListItem>\n                </List>\n              </Collapse>   \n              <ListItem button onClick={() => this.toggleTools()} disabled={!isOpen}>\n                <ListItemIcon><Icon path={mdiTools} size={iconSize} color={iconColor} /></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Tools' />\n                {openTools ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>   \n              <Collapse in={openTools} timeout=\"auto\" unmountOnExit>\n                <List dense={true} component=\"div\">\n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('notool')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiCursorDefault} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='No tool' />\n                  </ListItem>         \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Wwwc')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiArrowAll} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='WW/WC' />\n                  </ListItem>  \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Pan')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiCursorPointer} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Pan' />\n                  </ListItem>  \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Zoom')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiMagnify} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Zoom' />\n                  </ListItem>      \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Magnify')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiCheckboxIntermediate} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Magnify' />\n                  </ListItem>       \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Length')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiRuler} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Length' />\n                  </ListItem>        \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Probe')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiEyedropper} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Probe' />\n                  </ListItem> \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Angle')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiAngleAcute} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Angle' />\n                  </ListItem>  \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('EllipticalRoi')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiEllipse} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Elliptical Roi' />\n                  </ListItem>     \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('RectangleRoi')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiRectangle} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Rectangle Roi' />\n                  </ListItem> \n                  <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('FreehandRoi')} disabled={!isOpen}>\n                    <ListItemIcon><Icon path={mdiGesture} size={iconSize} color={iconColor} /></ListItemIcon>\n                    <ListItemText classes={primaryClass} primary='Freehand Roi' />\n                  </ListItem> \n                </List>\n              </Collapse> \n\n            </List>\n            \n            { isMultipleFiles ?\n              <div>     \n                <Divider />     \n                <div align='center'>\n                  <IconButton onClick={this.listOpenFilesFirstFrame} size='small'>\n                    <Icon path={mdiSkipBackward} size={'1.0rem'} color={iconColor} />\n                  </IconButton>\n                  <IconButton onClick={this.listOpenFilesPreviousFrame} size='small'>\n                      <Icon path={mdiSkipPrevious} size={'1.0rem'} color={iconColor} />\n                  </IconButton>\n                  <IconButton onClick={this.listOpenFilesScrolling} size='small'>\n                    <Icon path={this.state.listOpenFilesScrolling ? mdiPause : mdiPlay} size={'1.0rem'} color={iconColor} />\n                  </IconButton>\n                  <IconButton onClick={this.listOpenFilesNextFrame} size='small'>\n                      <Icon path={mdiSkipNext} size={'1.0rem'} color={iconColor} />\n                  </IconButton>\n                  <IconButton onClick={this.listOpenFilesLastFrame} size='small'>\n                      <Icon path={mdiSkipForward} size={'1.0rem'} color={iconColor} />\n                  </IconButton>                \n                </div>  \n                <div style={{textAlign: 'center'}}>\n                  <Typography type=\"body1\" style={{fontSize: '0.80em'}}>{`${this.state.sliceIndex+1} / ${sliceMax}`}</Typography>\n                </div>  \n                <div style={{width: '130px', margin: 'auto'}}>\n                  <Slider\n                    style={{marginTop: '-4px'}}\n                    value={this.state.sliceIndex}\n                    onChange={this.handleSliceChange}\n                    color=\"secondary\"\n                    min={0}\n                    max={sliceMax-1}\n                    step={100/sliceMax}\n                  />\n                </div>\n              </div> : null\n            }\n          </PerfectScrollbar>   \n          </div>\n        </Drawer>       \n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleHeader}\n          onClose={this.toggleHeader}\n        >\n          { visibleHeader ? <DicomHeader dcmViewer={dcmViewer} classes={classes} color={iconColor} /> : null } \n        </Drawer>\n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleMeasure}\n          onClose={this.toggleMeasure}\n        >\n          <div style={{marginTop: '48px'}}>\n            <Toolbar variant=\"dense\">\n              <Typography variant=\"subtitle1\" className={classes.title}>\n                Measurements&nbsp;&nbsp;\n              </Typography>\n              <div className={classes.grow} />\n              <IconButton color=\"inherit\" onClick={this.saveMeasure} edge=\"end\">\n                <Icon path={mdiContentSaveOutline} size={iconSize} color={iconColor} />\n              </IconButton>\n              <IconButton color=\"inherit\" onClick={this.clearMeasure} edge=\"end\">\n                <Icon path={mdiTrashCanOutline} size={iconSize} color={iconColor} />\n              </IconButton>\n            </Toolbar>\n            <div>  \n              { isOpen ? <Measurements dcmViewer={dcmViewer} toolRemove={this.toolRemove} classes={classes} /> : null } \n            </div>\n          </div>\n        </Drawer>  \n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleToolbox}\n          onClose={this.toggleToolbox}\n        >\n          <div style={{marginTop: '48px'}}>\n            <div>  \n              { isOpen ? <Histogram key={this.getFileName(dcmViewer)} /> : null } \n            </div>\n          </div>\n        </Drawer>          \n\n        <Drawer\n          variant=\"persistent\"\n          anchor={getSettingsDicomdirView()}\n          open={visibleDicomdir}\n          onClose={this.toggleDicomdir}\n        >\n          <div>\n            <div>  \n              {visibleDicomdir ? <Dicomdir onOpenFile={this.handleOpenFileDicomdir} onOpenFs={this.handleOpenSandboxFs} /> : null} \n            </div>\n          </div>\n        </Drawer>   \n\n        <Drawer\n          variant=\"persistent\"\n          anchor={getSettingsFsView()}\n          open={visibleFileManager}\n          onClose={this.toggleFileManager}\n        >\n          <div>\n            <div>\n              {visibleFileManager ? \n                <FsUI \n                  onOpen={this.handleOpenSandboxFs} \n                  onOpenImage={this.handleOpenImage} \n                  onOpenMultipleFilesCompleted={this.openMultipleFilesCompleted}\n                  onOpenDicomdir={this.handleOpenFsDicomdir} \n                  color={iconColor} \n                /> \n              : null}\n            </div>\n          </div>\n        </Drawer>       \n\n        {visibleSettings ? <Settings onClose={this.hideSettings}/> : null}\n\n        {visibleAbout ? <AboutDlg onClose={this.showAbout}/> : null}\n\n        {visibleDownloadZipDlg ? <DownloadZipDlg onClose={this.hideDownloadZipDlg} url={this.url} /> : null}\n\n        {visibleOpenMultipleFilesDlg ? <OpenMultipleFilesDlg onClose={this.hideOpenMultipleFilesDlg} files={this.files} origin={'local'} /> : null}\n\n        <Dialog\n            open={visibleClearMeasureDlg}\n            onClose={this.hideClearMeasureDlg}\n        >\n            <DialogTitle>{\"Are you sure to remove all the measurements?\"}</DialogTitle>\n            <DialogActions>\n                <Button onClick={this.hideClearMeasureDlg}>\n                    Cancel\n                </Button>\n                <Button onClick={this.confirmClearMeasureDlg} autoFocus>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        <Dialog\n            open={visibleZippedFileDlg}\n            onClose={this.hideZippedFileDlg}\n        >\n            <DialogTitle>{\"This is a zipped file, would you import into sandbox file system?\"}</DialogTitle>\n            <DialogActions>\n                <Button onClick={this.hideZippedFileDlg}>\n                    Cancel\n                </Button>\n                <Button onClick={this.confirmZippedFileDlg} autoFocus>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        <Dialog\n            open={this.state.visibleOpenUrl}\n        >\n            <DialogTitle>{\"Open URL\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  Insert an URL to download a DICOM or image file:\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"id-open-url\"\n                    inputRef={input => (this.openUrlField = input)}\n                    fullWidth\n                />\n              </DialogContent>\n            <DialogActions>\n                <Button onClick={() => this.hideOpenUrl(false)} >\n                    Cancel\n                </Button>\n                <Button onClick={() => this.hideOpenUrl(true)} autoFocus>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        <Dialog\n            open={this.state.visibleMessage}\n        >\n            <DialogTitle>{this.state.titleMessage}</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  {this.state.textMessage}\n                </DialogContentText>\n              </DialogContent>\n            <DialogActions>\n                <Button onClick={() => this.setState({visibleMessage: false})} >\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        <Popover\n          id={'id-layout'}\n          open={visibleLayout}\n          anchorEl={this.state.anchorElLayout}\n          onClose={this.closeLayout}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left',\n          }}\n        >\n          <LayoutTool \n            row={this.props.layout[0]-1} \n            col={this.props.layout[1]-1}\n            onChange={this.changeLayout}\n          />  \n        </Popover>        \n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={visibleVolumeBuilding}\n          autoHideDuration={6000}\n          message=\"Volume building, wait please ...\"\n        />\n\n        <div style={{height: 'calc(100vh - 48px)'}}>\n          {this.buildLayoutGrid()}  \n        </div>\n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleExplorer}\n          onClose={this.toggleExplorer}\n        >\n          <div>\n            <div>\n              {visibleExplorer ? \n                <Explorer \n                  explorer={this.explorer}\n                  onSelectSeries={this.explorerOnSelectSeries}\n                  color={iconColor} \n                /> \n              : null}\n            </div>\n          </div>\n        </Drawer>   \n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_open\"\n            style={{ display: \"none\" }}\n            ref={this.fileOpen}\n            onChange={e => this.handleOpenLocalFs(e.target.files)}\n            multiple\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_dicomdir\"\n            style={{ display: \"none\" }}\n            ref={this.openDicomdir}\n            onChange={e => this.handleOpenDicomdir(e.target.files)}\n            webkitdirectory=\"\" mozdirectory=\"\" directory=\"\" multiple\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_folder\"\n            style={{ display: \"none\" }}\n            ref={this.openFolder}\n            onChange={e => this.handleOpenFolder(e.target.files)}\n            webkitdirectory=\"\" mozdirectory=\"\" directory=\"\" multiple\n          />\n        </div>    \n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    localFileStore: state.localFileStore,\n    allFiles: state.allFiles,\n    files: state.files,\n    series: state.series,\n    isOpen: state.isOpen,\n    tool: state.tool,\n    activeDcmIndex: state.activeDcmIndex,\n    explorerActivePatientIndex: state.explorerActivePatientIndex,\n    explorerActiveStudyIndex: state.explorerActiveStudyIndex,\n    explorerActiveSeriesIndex: state.explorerActiveSeriesIndex,\n    measurements: state.measurements,\n    layout: state.layout,\n    dicomdir: state.dicomdir,\n    fsZippedFile: state.fsZippedFile,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearingStore: () => dispatch(clearStore()),\n    setLocalFileStore: (file) => dispatch(localFileStore(file)),\n    toolStore: (tool) => dispatch(dcmTool(tool)),\n    isOpenStore: (value) => dispatch(dcmIsOpen(value)),\n    setActiveDcm: (dcm) => dispatch(activeDcm(dcm)),\n    setActiveDcmIndex: (index) => dispatch(activeDcmIndex(index)),\n    setActiveMeasurements: (measurements) => dispatch(activeMeasurements(measurements)),\n    setLayoutStore: (row, col) => dispatch(setLayout(row, col)),\n    setDicomdirStore: (dicomdir) => dispatch(setDicomdir(dicomdir)),\n    setFsZippedFile: (file) => dispatch(setZippedFile(file)),\n    setVolumeStore: (file) => dispatch(setVolume(file)),\n    setFilesStore: (files) => dispatch(filesStore(files)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from 'redux'\r\nimport storeReducer from '../reducers/index'\r\n\r\nlet initialState = {\r\n    localFile: null,\r\n    fsFile: null,\r\n    allFiles: null,\r\n    files: null,\r\n    series: null,\r\n    isOpen: new Array(16).fill(false),\r\n    tool: null,\r\n    activeDcmIndex: 0,\r\n    activeDcm: null,\r\n    explorer: null,\r\n    explorerActivePatientIndex: 0,\r\n    explorerActiveStudyIndex: 0,\r\n    explorerActiveSeriesIndex: 0,\r\n    measurements: [],\r\n    layout: [1,1], // first element represents the rows, second the columns\r\n    dicomdir: null,\r\n    fsCurrentDir: '',\r\n    fsCurrentList: [],\r\n    fsZippedFile: null,\r\n    fsRefresh: false,\r\n    volume: null,\r\n}\r\n\r\nconst store = createStore(storeReducer, initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store\r\n","import {\r\n  CLEAR_STORE, \r\n  LOCALFILE_STORE,\r\n  FSFILE_STORE,\r\n  ALLFILES_STORE,\r\n  FILES_STORE,\r\n  SERIES_STORE,\r\n  DCM_IS_OPEN, \r\n  DCM_TOOL, \r\n  ACTIVE_DCM_INDEX, \r\n  ACTIVE_DCM,\r\n  ACTIVE_MEASUREMENTS,\r\n  EXPLORER_STORE,\r\n  EXPLORER_ACTIVE_PATIENT_INDEX,\r\n  EXPLORER_ACTIVE_STUDY_INDEX,\r\n  EXPLORER_ACTIVE_SERIES_INDEX,\r\n  LAYOUT,\r\n  DICOMDIR,\r\n  FSCURRENTDIR,\r\n  FSCURRENTLIST,\r\n  FSZIPPEDFILE,\r\n  FSREFRESH,\r\n  VOLUME_STORE,\r\n} from '../actions'\r\n\r\nexport default function storeReducer(state={}, action) {\r\n    //console.log('storeReducer: ', action)\r\n    switch(action.type) {\r\n      \r\n      case CLEAR_STORE:\r\n        return {\r\n          localFile: state.localFile,\r\n          fsFile: state.fsFile,\r\n          allfiles: null,\r\n          files: null, \r\n          series: null,\r\n          isOpen: state.isOpen.map((el, i) => i === state.activeDcmIndex ? false : el),\r\n          tool: null,\r\n          activeDcmIndex: state.activeDcmIndex,\r\n          activeDcm: state.activeDcm,\r\n          explorer: state.explorer,\r\n          explorerActivePatientIndex: state.explorerActivePatientIndex,\r\n          explorerActiveStudyIndex: state.explorerActiveStudyIndex,\r\n          explorerActiveSeriesIndex: state.explorerActiveSeriesIndex,\r\n          measurements: null,\r\n          layout: state.layout,\r\n          dicomdir: state.dicomdir, \r\n          fsCurrentDir: state.fsCurrentDir,\r\n          fsCurrentList: state.fsCurrentList,\r\n          fsZippedFile: null,\r\n          fsRefresh: state.fsRefresh,\r\n          volume: null,\r\n          lut: null,\r\n        }    \r\n\r\n      case LOCALFILE_STORE:\r\n          return {\r\n            ...state,\r\n            localFile: action.localFile,     \r\n            fsFile: null,   \r\n          } \r\n\r\n      case FSFILE_STORE:\r\n          return {\r\n            ...state,\r\n            localFile: null,     \r\n            fsFile: action.fsFile,   \r\n          }\r\n\r\n      case ALLFILES_STORE:\r\n          return {\r\n            ...state,\r\n            allFiles: action.allFiles,  \r\n          } \r\n\r\n      case FILES_STORE:\r\n          return {\r\n            ...state,\r\n            files: action.files,  \r\n          } \r\n\r\n      case SERIES_STORE:\r\n          return {\r\n            ...state,\r\n            series: action.series,  \r\n          }\r\n\r\n      case DCM_IS_OPEN:\r\n          return {\r\n            ...state,\r\n            isOpen: state.isOpen.map((el, i) => i === action.value.index ? action.value.value : el),    \r\n            measurements: state.measurements,\r\n            layout: state.layout,    \r\n            dicomdir: state.dicomdir,    \r\n            fsCurrentDir: state.fsCurrentDir,\r\n            fsCurrentList: state.fsCurrentList,            \r\n          }    \r\n\r\n      case DCM_TOOL:\r\n          return {\r\n            ...state,\r\n            tool: action.tool,\r\n            measurements: state.measurements,\r\n            layout: state.layout,\r\n            dicomdir: state.dicomdir,\r\n            fsCurrentDir: state.fsCurrentDir,\r\n            fsCurrentList: state.fsCurrentList,  \r\n          }  \r\n\r\n      case ACTIVE_DCM_INDEX:\r\n          return {\r\n            ...state,\r\n            activeDcmIndex: action.activeDcmIndex,\r\n            measurements: state.measurements,\r\n            layout: state.layout,\r\n            dicomdir: state.dicomdir,\r\n            fsCurrentDir: state.fsCurrentDir,\r\n            fsCurrentList: state.fsCurrentList,  \r\n          }  \r\n\r\n      case ACTIVE_DCM:\r\n          return {\r\n            ...state,\r\n            activeDcm: action.activeDcm,\r\n            measurements: state.measurements,\r\n            layout: state.layout,\r\n            dicomdir: state.dicomdir,\r\n            fsCurrentDir: state.fsCurrentDir,\r\n            fsCurrentList: state.fsCurrentList,  \r\n          }            \r\n\r\n      case ACTIVE_MEASUREMENTS:\r\n        return {\r\n          ...state,\r\n          measurements: [...action.measurements],\r\n        }  \r\n\r\n      case EXPLORER_STORE:\r\n        return {\r\n          ...state,\r\n          explorer: action.explorer,\r\n        }  \r\n\r\n      case EXPLORER_ACTIVE_PATIENT_INDEX:\r\n        return {\r\n          ...state,\r\n          explorerActivePatientIndex: action.explorerActivePatientIndex,\r\n        }\r\n\r\n      case EXPLORER_ACTIVE_STUDY_INDEX:\r\n        return {\r\n          ...state,\r\n          explorerActiveStudyIndex: action.explorerActiveStudyIndex,\r\n        }\r\n\r\n      case EXPLORER_ACTIVE_SERIES_INDEX:\r\n        return {\r\n          ...state,\r\n          explorerActiveSeriesIndex: action.explorerActiveSeriesIndex,\r\n        }    \r\n\r\n      case LAYOUT:\r\n            return {\r\n              ...state,\r\n              measurements: state.measurements,\r\n              layout: action.layout,\r\n              dicomdir: state.dicomdir,\r\n              fsCurrentDir: state.fsCurrentDir,\r\n              fsCurrentList: state.fsCurrentList,  \r\n            }  \r\n\r\n      case DICOMDIR:\r\n            return {\r\n              ...state,\r\n              dicomdir: action.dicomdir\r\n            }  \r\n\r\n      case FSCURRENTDIR:\r\n            return {\r\n              ...state,\r\n              fsCurrentDir: action.fsCurrentDir\r\n            }  \r\n\r\n      case FSCURRENTLIST:\r\n            return {\r\n              ...state,\r\n              fsCurrentList: [...action.fsCurrentList]\r\n            }  \r\n\r\n      case FSZIPPEDFILE:\r\n            return {\r\n              ...state,\r\n              fsZippedFile: action.fsZippedFile\r\n            }  \r\n\r\n      case FSREFRESH:\r\n            return {\r\n              ...state,\r\n              fsRefresh: !state.fsRefresh\r\n            }  \r\n\r\n      case VOLUME_STORE:\r\n        return {\r\n          ...state,\r\n          volume: action.volume,        \r\n        }      \r\n\r\n      default:\r\n          return state\r\n    }\r\n  }\r\n  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport WebFontLoader from 'webfontloader'\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nWebFontLoader.load({\n    google: {\n        families: ['Roboto:300,400,500,700', 'Material Icons'],\n    },\n})\n\n//store.subscribe(() => console.log('store updated:', store.getState()));\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiFormControlLabel: {\n            label: {\n                fontSize: '0.85em'\n            },\n        },\n        MuiFormLabel: {\n            root: { \n                '&$focused': {\n                    color:'#CCCCCC',\n                },   \n            }\n         \n        }\n    },\n    palette: {\n        primary: {\n            main: '#004d40',\n        },\n        secondary: {\n            main: '#888888',\n        },\n        type: 'dark',\n    },\n  })\n\n  \nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider theme = { theme }>\n            <App />\n        </MuiThemeProvider>\n    </Provider>, \n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n "],"sourceRoot":""}